<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HML</name>
    </assembly>
    <members>
        <member name="T:HML.ImageIndexer">
            <summary>
            ImageList图片集合Index、Key管理器
            </summary>
        </member>
        <member name="P:HML.ImageIndexer.ImageList">
            <summary>
            要管理的图片集合
            </summary>
        </member>
        <member name="P:HML.ImageIndexer.Image">
            <summary>
            存放独立设置图片 
            get: 返回优先级 独立设置Image>当Image==null根据最后一次赋值时是Index还是Key，初始默认为Index；
            set: 赋值后，当value!=null时index=-1、key=string.Empty；
            </summary>
        </member>
        <member name="P:HML.ImageIndexer.Key">
            <summary>
            图片Key
            get: 返回图片Key，没有设置的返回"" ；  
            set: 赋值后，当value!=(null||string.Empty)时index=-1、image=null；
            </summary>
        </member>
        <member name="P:HML.ImageIndexer.Index">
            <summary>
            图片索引
            get: 返回图片索引，没有设置的返回-1；   
            set: 赋值后，value!=-1时key=string.Empty、image=null；
            </summary>
        </member>
        <member name="F:HML.ImageIndexer.useIntegerIndex">
            <summary>
            获取ActualIndex属性值时是否应该根据Index属性返回索引，否则就根据Key从ImageList中返回索引
            </summary>
        </member>
        <member name="M:HML.ImageIndexer.SyncIndexer(System.Windows.Forms.ImageList)">
            <summary>
            ImageList修改后应同步ImageIndexer,当value!=null时image = null；
            </summary>
            <param name="value">ImageList</param>
        </member>
        <member name="M:HML.ImageIndexer.EqualImage(System.Drawing.Image)">
            <summary>
            判断独立设置Image是否一样
            </summary>
            <param name="image">要判断独立设置Image</param>
            <returns></returns>
        </member>
        <member name="M:HML.ImageIndexer.EqualKey(System.String)">
            <summary>
            判断Key是否一样
            </summary>
            <param name="key">要判断Key</param>
            <returns></returns>
        </member>
        <member name="M:HML.ImageIndexer.EqualIndex(System.Int32)">
            <summary>
            判断Index是否一样
            </summary>
            <param name="index">要判断Index</param>
            <returns></returns>
        </member>
        <member name="P:HML.ImageIndexer.ActualIndex">
            <summary>
            获取图片索引，没有设置的返回-1（根据最后一次赋值时是Index还是Key，初始默认为Index）
            </summary>
        </member>
        <member name="T:HML.NumeralAdjustLabel">
            <summary>
            数字调整文本控件
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.TextAlign">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.ForeNormalColor">
            <summary>
            文本颜色（关联控件获取焦点时）
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.ForeFocusColor">
            <summary>
            文本颜色（关联控件失去焦点时）
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.RelevancyControl">
            <summary>
            关联控件
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.MaxValueProperty">
            <summary>
            关联控件关联属性的最大值属性名称
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.MinValueProperty">
            <summary>
            关联控件关联属性的最小值属性名称
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.ValueProperty">
            <summary>
            关联控件的关联属性名称
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.ChangeInterval">
            <summary>
            调整大小（单位像素对应大小）
            </summary>
        </member>
        <member name="P:HML.NumeralAdjustLabel.AutoSize">
            <summary>
            否根据内容自动调整控件的大小。
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.mousedownobject">
            <summary>
            鼠标是否按下
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.mousedownpoint">
            <summary>
            鼠标按下时坐标
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.mousedownvalue">
            <summary>
            鼠标按下时对应控件值
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.mousedownvaluetype">
            <summary>
            鼠标按下时对应控件值类型
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.requestedWidth">
            <summary>
            控件要求Width
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.requestedHeight">
            <summary>
            控件要求Height
            </summary>
        </member>
        <member name="F:HML.NumeralAdjustLabel.autoing">
            <summary>
            AutoSize切换中
            </summary>
        </member>
        <member name="M:HML.NumeralAdjustLabel.AdjustSize">
            <summary>
            更新控件size
            </summary>
        </member>
        <member name="M:HML.NumeralAdjustLabel.GetTextSize">
            <summary>
            获取文本size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.NumeralAdjustLabel.IsAllowAdjust">
            <summary>
            关联控件是否允许调整(根据：Enabled、ReadOnly )
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.NumeralAdjustLabel.RelevancyControl_Focus(System.Object,System.EventArgs)">
            <summary>
            关联控件焦点事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.NumeralAdjustLabelDesigner">
             <summary>
            NumeralAdjustLabel控件设计模式行为
             </summary>
        </member>
        <member name="T:HML.Design.VHalvingLineDesigner">
            <summary>
            VHalvingLine控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.HeadTagDesigner">
            <summary>
            HeadTag控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.HeadTagDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.ProcedureDesigner">
            <summary>
            Procedure控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.ProcedureDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.PaginationBarDesigner">
            <summary>
            PaginationBar控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.DropDownListPlusDesigner">
            <summary>
            DropDownListPlus控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.AngleLabelDesigner">
            <summary>
            AngleLabel控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.HGradualPercentageDesigner">
            <summary>
            HGradualPercentage控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.CommandButtonDesigner">
            <summary>
            CommandButton控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.ImageCropperDesigner">
            <summary>
            ImageCropper控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.ImageCropperDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.TextSlideDesigner">
            <summary>
            TextSlide控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.TextSlideDesigner.DrawBorder(System.Drawing.Graphics)">
            <summary>
            绘制虚线边框
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:HML.Design.TextSlideDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.AnnulusProgressDesigner">
            <summary>
            AnnulusProgress控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.AnomalyButtonDesigner">
            <summary>
            AnomalyButton控件设计模式行为
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonDesigner.mouseLeftDownPoint">
            <summary>
            鼠标左键在路径圆点按下时鼠标的坐标
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonDesigner.mouseLeftDownObjectIndex">
            <summary>
            鼠标左键在路径圆点按下时圆点的索引
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonDesigner.mouseLeftDownObjectPoint">
            <summary>
            鼠标左键在路径圆点按下时圆点的坐标
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonDesigner.mouseRightDownObjectIndex">
            <summary>
            鼠标右键在路径圆点按下时圆点的索引
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonDesigner.mouseEnterObjectIndex">
            <summary>
            鼠标进入路径圆点时圆点的索引
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonDesigner.pointArr">
            <summary>
            当前要处理要路径圆点
            </summary>
        </member>
        <member name="P:HML.Design.AnomalyButtonDesigner.Verbs">
            <summary>
            右键菜单集合
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.InitializeNewComponent(System.Collections.IDictionary)">
            <summary>
            工具箱拖放创建新控件实例
            </summary>
            <param name="defaultValues"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            试图设计器初始化控件实例
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            当设计器正在管理的控件绘制了它的图面时接收调用，这样设计器就可以在控件顶部绘制任意附加装饰
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            指示该控件是否应处理在指定点单击鼠标的操作
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.OnSetCursor">
            <summary>
            在每次需要设置光标时接收调用
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理 Windows 消息，并可以选择将其路由到控件。
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.AnomalyButton_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制编辑模式下路劲和圆点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.AnomalyButton_LostFocus(System.Object,System.EventArgs)">
            <summary>
            控件失去焦点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.MouseLeftDown">
            <summary>
            鼠标在控件可视区域按下左键
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.MouseRightDown">
            <summary>
            鼠标在控件可视区域按下右键
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.MouseLeftUp">
            <summary>
            鼠标在控件可视区域按下左键后释放
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.MouseRightUp">
            <summary>
            鼠标在控件可视区域按下右键后释放
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.MouseMove">
            <summary>
            鼠标移动
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.DeleteSelect(System.Object,System.EventArgs)">
            <summary>
            右键菜单删除选中路径点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.AddToLeft(System.Object,System.EventArgs)">
            <summary>
            右键菜单新增一个点到选中的路径点的左边
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonDesigner.AddToRight(System.Object,System.EventArgs)">
            <summary>
            右键菜单新增一个点到选中的路径点的右边
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.AnomalyButtonFocusGradualLocationEditor">
            <summary>
            AnomalyButton焦点渐变坐标移动编辑器
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonFocusGradualLocationEditor.editForm">
            <summary>
            编辑窗体
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonFocusGradualLocationEditor.mousedownpoint">
            <summary>
            鼠标按下后的坐标
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonFocusGradualLocationEditor.mousedownobject">
            <summary>
            鼠标按下后要操作对象
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonFocusGradualLocationEditor.mousedownobjectpoint">
            <summary>
            鼠标按下后要操作对象所在point
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonFocusGradualLocationEditor.Move_Btn_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonFocusGradualLocationEditor.Move_Btn_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能按下释放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonFocusGradualLocationEditor.Move_Btn_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能移动中
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonFocusGradualLocationEditor.Anchor_Btn_Click(System.Object,System.EventArgs)">
            <summary>
            停靠功能
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.AnomalyButtonFocusGradualRadiusEditor">
            <summary>
            AnomalyButton焦点渐变半径比例编辑器
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonFocusGradualRadiusEditor.editForm">
            <summary>
            编辑窗体
            </summary>
        </member>
        <member name="T:HML.Design.AnomalyButtonFocusGradualRadiusEditorForm">
            <summary>
            AnomalyButton焦点渐变半径比例编辑器窗体
            </summary>
        </member>
        <member name="T:HML.Design.AnomalyButtonMoveEditorForm">
            <summary>
            AnomalyButton移动编辑器窗体
            </summary>
        </member>
        <member name="T:HML.Design.AnomalyButtonMoveEditorTypes">
            <summary>
            AnomalyButton移动编辑器窗体操作类型
            </summary>
        </member>
        <member name="T:HML.Design.AnomalyButtonShapeItemsEditor">
            <summary>
            AnomalyButton形状路径坐标移动编辑器
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonShapeItemsEditor.editForm">
            <summary>
            编辑窗体
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonShapeItemsEditor.mousedownpoint">
            <summary>
            鼠标按下后的坐标
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonShapeItemsEditor.mousedownobjectarr">
            <summary>
            鼠标按下后要操作路径点集合
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonShapeItemsEditor.mousedownobjectarrrect">
            <summary>
            鼠标按下后要操作路径点集合所在rect
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonShapeItemsEditor.Move_Btn_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonShapeItemsEditor.Move_Btn_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能按下释放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonShapeItemsEditor.Move_Btn_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能移动中
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonShapeItemsEditor.Anchor_Btn_Click(System.Object,System.EventArgs)">
            <summary>
            停靠功能
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.AnomalyButtonTextLocationEditor">
            <summary>
            AnomalyButton文本坐标移动编辑器
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonTextLocationEditor.editForm">
            <summary>
            编辑窗体
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonTextLocationEditor.mousedownpoint">
            <summary>
            鼠标按下后的坐标
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonTextLocationEditor.mousedownobject">
            <summary>
            鼠标按下后要操作对象
            </summary>
        </member>
        <member name="F:HML.Design.AnomalyButtonTextLocationEditor.mousedownobjectpoint">
            <summary>
            鼠标按下后要操作对象所在point
            </summary>
        </member>
        <member name="M:HML.Design.AnomalyButtonTextLocationEditor.Move_Btn_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonTextLocationEditor.Move_Btn_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能按下释放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonTextLocationEditor.Move_Btn_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            移动功能移动中
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.AnomalyButtonTextLocationEditor.Anchor_Btn_Click(System.Object,System.EventArgs)">
            <summary>
            停靠功能
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.ArcProgressDesigner">
            <summary>
            ArcProgress控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.CheckBoxPlusDesigner">
            <summary>
            CheckBoxPlusDesigner控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.DateInputDesigner">
            <summary>
            DateInput控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.DatePickerDesigner">
            <summary>
            DatePicker控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.VGradualPercentageDesigner">
            <summary>
            VGradualPercentage控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.GroupPanelPlusDesigner">
            <summary>
            GroupPanelPlus控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.HHalvingLineDesigner">
            <summary>
            HHalvingLine控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.ImageSlideDesigner">
            <summary>
            ImageSlide控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.ImageSlideDesigner.DrawBorder(System.Drawing.Graphics)">
            <summary>
            绘制虚线边框
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:HML.Design.ImageSlideDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.LineProgressDesigner">
            <summary>
            LineProgress控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.LoadWaitDesigner">
            <summary>
            LoadWait控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.MeterDesigner">
            <summary>
            Meter控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.MultidropSlideDesigner">
            <summary>
            MultidropSlide控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.MultidropSlideLumpCollectionEditor">
            <summary>
             MultidropSlideLump集合属性编辑窗口
            </summary>
        </member>
        <member name="T:HML.Design.BreadcrumbBarDesigner">
            <summary>
            BreadcrumbBar控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.PatternLockDesigner">
            <summary>
            PatternLock控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.GifBoxDesigner">
            <summary>
            GifBox控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.GifBoxDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.PieceProgressDesigner">
            <summary>
            PieceProgress控件设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.PieceProgressDesigner.DrawBorder(System.Drawing.Graphics)">
            <summary>
            绘制虚线边框
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:HML.Design.PieceProgressDesigner.DrawTipText(System.Drawing.Graphics)">
            <summary>
            绘制提示文本
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.RadioButtonPlusDesigner">
            <summary>
            RadioButtonPlus控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.SingleAccordionNodeCollectionEditor">
            <summary>
             SingleAccordion节点集合属性编辑器
            </summary>
        </member>
        <member name="T:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm">
            <summary>
             SingleAccordion集合属性编辑窗体
            </summary>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.tvControl_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            选中节点更改
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.pgControl_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            属性面板值更改
            </summary>
            <param name="s"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.BtnAddRootLabel_Click(System.Object,System.EventArgs)">
            <summary>
            添加标签节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.btnAddRootCategory_click(System.Object,System.EventArgs)">
            <summary>
            添加根类别节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.btnAddRootContent_click(System.Object,System.EventArgs)">
            <summary>
            添加根内容节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.BtnAddChildContent_Click(System.Object,System.EventArgs)">
            <summary>
            添加子内容节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.BtnExpand_Click(System.Object,System.EventArgs)">
            <summary>
            展开所有节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.BtnCollapse_Click(System.Object,System.EventArgs)">
            <summary>
            折叠所有节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.btnMoveUp_Click(System.Object,System.EventArgs)">
            <summary>
            上移选中节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.btnMoveDown_Click(System.Object,System.EventArgs)">
            <summary>
            下移选中节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.btnDelete_click(System.Object,System.EventArgs)">
            <summary>
            移除选中节点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.BtnOk_Click(System.Object,System.EventArgs)">
            <summary>
            确认修改
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.SingleAccordionNodeCollectionEditor.SingleAccordionNodeCollectionEditorForm.PropertyGridSite">
            <summary>
            定义一种检索服务对象的机制，服务对象是为其他对象提供自定义支持的对象。
            </summary>
        </member>
        <member name="T:HML.Design.SingleAccordionDesigner">
            <summary>
            SingleAccordion控件设计模式行为
            </summary>
        </member>
        <member name="F:HML.Design.SingleAccordionDesigner.mouseLeftDownObject">
            <summary>
            鼠标左键按下节点
            </summary>
        </member>
        <member name="M:HML.Design.SingleAccordionDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            试图设计器初始化控件实例
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            指示该控件是否应处理在指定点单击鼠标的操作
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HML.Design.SingleAccordionDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理 Windows 消息，并可以选择将其路由到控件。
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HML.Design.SingleAccordionDesigner.SingleAccordion_LostFocus(System.Object,System.EventArgs)">
            <summary>
            控件失去焦点
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.HRulerDesigner">
            <summary>
            HRuler控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.VRulerDesigner">
            <summary>
            VRuler控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.ToggleSwitchDesigner">
            <summary>
            ToggleSwitch控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.TabControlPlusControlsCollectionEditor">
            <summary>
            TabControlPlus子控件集合属性编辑窗口扩展
            </summary>
        </member>
        <member name="T:HML.Design.TabControlPlusDesigner">
            <summary>
            TabControlPlus的设计模式行为
            </summary>
        </member>
        <member name="P:HML.Design.TabControlPlusDesigner.AllowControlLasso">
            <summary>
            获取一个值，该值指示选择的控件是否重新设置为父级。
            </summary>
        </member>
        <member name="P:HML.Design.TabControlPlusDesigner.ParticipatesWithSnapLines">
            <summary>
            获取一个值，该值指示在拖动操作期间 System.Windows.Forms.Design.ControlDesigner 是否允许按对齐线对齐。
            </summary>
        </member>
        <member name="P:HML.Design.TabControlPlusDesigner.Verbs">
            <summary>
            智能标记
            </summary>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            指示指定的控件是否可以是由此设计器管理的控件的子级。
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            指示该控件是否应处理在指定点单击鼠标的操作。
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            视图设计器创建TabControlPlus控件
            </summary>
            <param name="tool"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="hasLocation"></param>
            <param name="hasSize"></param>
            <returns></returns>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.InitializeNewComponent(System.Collections.IDictionary)">
            <summary>
            创建时添加默认选项
            </summary>
            <param name="defaultValues"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制边框
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            右键菜单
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            组件更改后事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.OnSelectionChanged(System.Object,System.EventArgs)">
            <summary>
            视图设计器选中控件更改事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.OnAdd(System.Object,System.EventArgs)">
            <summary>
            添加一个选项卡事件
            </summary>
            <param name="sender"></param>
            <param name="eevent"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.OnRemove(System.Object,System.EventArgs)">
            <summary>
            移除一个选项卡事件
            </summary>
            <param name="sender"></param>
            <param name="eevent"></param>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.GetTabPageOfComponent(HML.TabControlPlus,System.Object)">
            <summary>
            获取视图设计器TabControlPlus选中的TabPagePlus
            </summary>
            <param name="parent"></param>
            <param name="comp"></param>
            <returns></returns>
        </member>
        <member name="M:HML.Design.TabControlPlusDesigner.GetSelectedTabPageDesigner">
            <summary>
            获取选中的TabPagePlus的TabPagePlusDesigner设计器
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.Design.TabPagePlusDesigner">
            <summary>
            TabPagePlus的设计模式行为
            </summary>
        </member>
        <member name="M:HML.Design.TabPagePlusDesigner.OnDragDropInternal(System.Windows.Forms.DragEventArgs)">
            <summary>
            公开鼠标拖载数据方法
            </summary>
            <param name="de"></param>
        </member>
        <member name="M:HML.Design.TabPagePlusDesigner.OnDragEnterInternal(System.Windows.Forms.DragEventArgs)">
            <summary>
            公开鼠标拖载数据方法
            </summary>
            <param name="de"></param>
        </member>
        <member name="M:HML.Design.TabPagePlusDesigner.OnDragLeaveInternal(System.EventArgs)">
            <summary>
            公开鼠标拖载数据方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.TabPagePlusDesigner.OnDragOverInternal(System.Windows.Forms.DragEventArgs)">
            <summary>
            公开鼠标拖载数据方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.Design.TabPagePlusDesigner.OnGiveFeedbackInternal(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>
            公开鼠标拖载数据方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:HML.Design.TrackBarPlusDesigner">
            <summary>
            TrackBarPlus控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.WaterRipplesDesigner">
            <summary>
            水波纹控件设计模式行为
            </summary>
        </member>
        <member name="T:HML.Design.AlphaColorEditor">
            <summary>
            透明度颜色编辑器
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditor.editForm">
            <summary>
            编辑窗体
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:HML.Design.AlphaColorEditorCustomColorDialogForm" -->
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HML.Design.AlphaColorEditorForm">
            <summary>
            透明度颜色编辑器窗体
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorForm.ColorValue">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorForm.ColorAlpha">
            <summary>
            颜色透明度
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorForm.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorForm.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HML.Design.AlphaColorEditorForm.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HML.Design.AlphaColorEditorSystemColorControl">
            <summary>
            系统颜色列表控件
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorSystemColorControl.SystemColorValues">
            <summary>
            系统颜色
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorSystemColorControl.GetConstantsColor(System.Type)">
            <summary>
            通过反射获取系统颜色
            </summary>
            <param name="colorEnumType"></param>
            <returns></returns>
        </member>
        <member name="T:HML.Design.AlphaColorEditorSystemColorControl.AlphaColorEditorSystemColorComparer">
            <summary>
            系统颜色排序
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorSystemColorControl.AlphaColorEditorSystemColorComparer.Compare(System.Object,System.Object)">
            <summary>
            根据系统颜色名称进行排序
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="T:HML.Design.AlphaColorEditorEffectLabel">
            <summary>
            透明颜色预览效果控件
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorEffectLabel.ColorValue">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorEffectLabel.ColorAlpha">
            <summary>
            颜色透明度
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:HML.Design.AlphaColorEditorCustomColorDialog" -->
        <member name="P:HML.Design.AlphaColorEditorCustomColorDialog.ColorValue">
            <summary>
            颜色
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_bmp">
            <summary>
            渐变框图片
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_rect">
            <summary>
            渐变框rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_point">
            <summary>
            渐变框选中坐标
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_bar_bmp">
            <summary>
            渐变栏图片
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_bar_rect">
            <summary>
            渐变栏rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_bar_slide_rect">
            <summary>
            渐变栏滑块rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.gradual_bar_slide_color">
            <summary>
            渐变栏滑块颜色值
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_r_rect">
            <summary>
            当前颜色R的rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_r_slide_rect">
            <summary>
            当前颜色R滑块的rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_g_rect">
            <summary>
            当前颜色G的rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_g_slide_rect">
            <summary>
            当前颜色G滑块的rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_b_rect">
            <summary>
            当前颜色B的rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_b_slide_rect">
            <summary>
            当前颜色B滑块的rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.current_color_effect_rect">
            <summary>
            当前颜色预览rect信息
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.mouseDownType">
            <summary>
            当前鼠标状态
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.InitializeRectangle">
            <summary>
            初始化控件布局
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.Update_Gradual_Image">
            <summary>
            更新渐变框图片
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.Update_Gradual_Point(System.Drawing.Point)">
            <summary>
            更新渐变框选中点坐标值
            </summary>
            <param name="mousePoint">鼠标坐标</param>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.Update_GradualBar_Image">
            <summary>
            更新渐变栏图片
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.Update_GradualBarSlide_Rect(System.Drawing.Point)">
            <summary>
            更新渐变栏滑块rect
            </summary>
            <param name="mousePoint">鼠标坐标</param>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.Update_RGBSlide_Rect">
            <summary>
            更新RGB滑块rect
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.GetGradualColor">
            <summary>
            获取渐变框坐标颜色
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.GetGradualBarSlideColor">
            <summary>
            获取渐变栏滑块颜色
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.GetRForPoint(System.Drawing.Point)">
            <summary>
            获取R滑块值
            </summary>
            <param name="mousePoint">鼠标坐标</param>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.GetGForPoint(System.Drawing.Point)">
            <summary>
            获取G滑块值
            </summary>
            <param name="mousePoint">鼠标坐标</param>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorDialog.GetBForPoint(System.Drawing.Point)">
            <summary>
            获取B滑块值
            </summary>
            <param name="mousePoint">鼠标坐标</param>
        </member>
        <member name="T:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes.None">
            <summary>
            空
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes.GradualDown">
            <summary>
            渐变框按下
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes.GradualBarDown">
            <summary>
            渐变栏按下
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes.RDown">
            <summary>
            R按下
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes.GDown">
            <summary>
            G按下
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorDialog.MouseDownTypes.BDown">
            <summary>
            B按下
            </summary>
        </member>
        <member name="T:HML.Design.AlphaColorEditorWebColorControl">
            <summary>
            Web颜色列表控件
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorWebColorControl.WebColorValues">
            <summary>
            Web颜色
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorWebColorControl.GetConstantsColor(System.Type)">
            <summary>
            通过反射获取Web颜色
            </summary>
            <param name="colorEnumType"></param>
            <returns></returns>
        </member>
        <member name="T:HML.Design.AlphaColorEditorWebColorControl.AlphaColorEditorWebColorComparer">
            <summary>
            Web颜色排序
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorWebColorControl.AlphaColorEditorWebColorComparer.Compare(System.Object,System.Object)">
            <summary>
            根据Web颜色名称进行排序( 透明度>色调>饱和度>亮度 )
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="T:HML.Design.AlphaColorEditorCustomColorControl">
            <summary>
            自定义颜色面板控件
            </summary>
        </member>
        <member name="E:HML.Design.AlphaColorEditorCustomColorControl.ItemClick">
            <summary>
            选项单击事件
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorCustomColorControl.SelectedItem">
            <summary>
            已选中颜色选项索引
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorCustomColorControl.CustomColorValues">
            <summary>
            自定义颜色
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorControl.selectedIndex">
            <summary>
            已选中颜色选项索引
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorControl.focusIndex">
            <summary>
            获取焦点颜色选项索引
            </summary>
        </member>
        <member name="F:HML.Design.AlphaColorEditorCustomColorControl.mousedownobjectindex">
            <summary>
            当前鼠标已按下的对象索引
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorControl.InitializeRectangle">
            <summary>
            初始化控件rect
            </summary>
        </member>
        <member name="M:HML.Design.AlphaColorEditorCustomColorControl.UpdateCustomColorItemFocus(System.Int32)">
            <summary>
            设置自定义颜色面板鼠标焦点
            </summary>
            <param name="offset">焦点偏移量</param>
        </member>
        <member name="T:HML.Design.AlphaColorEditorCustomColorControl.AlphaColorEditorCustomColorItem">
            <summary>
            自定义颜色选项
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorCustomColorControl.AlphaColorEditorCustomColorItem.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:HML.Design.AlphaColorEditorCustomColorControl.AlphaColorEditorCustomColorItem.Rect">
            <summary>
            rect
            </summary>
        </member>
        <member name="T:HML.Design.CollectionHelpEditor">
            <summary>
            集合属性编辑窗口扩展(显示属性详细描述信息)
            </summary>
        </member>
        <member name="T:HML.Design.BorderDesigner">
            <summary>
            绘制虚线边框
            </summary>
        </member>
        <member name="M:HML.Design.BorderDesigner.DrawBorder(System.Drawing.Graphics)">
            <summary>
            绘制虚线边框
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="T:HML.Design.EmptyConverter">
            <summary>
            展开属性选型去除描述
            </summary>
        </member>
        <member name="M:HML.Design.EmptyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            当该属性为展开属性选型时，属性编辑器删除该属性的描述
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:HML.Design.CollectionTextHelpEditor">
            <summary>
             集合属性编辑器(显示Text文本、显示属性详细描述信息)
            </summary>
        </member>
        <member name="T:HML.Design.IntAngleEditor">
            <summary>
            Int 0-360角度编辑器
            </summary>
        </member>
        <member name="F:HML.Design.IntAngleEditor.editForm">
            <summary>
            编辑窗体
            </summary>
        </member>
        <member name="F:HML.Design.IntAngleEditor.control">
            <summary>
            关联控件
            </summary>
        </member>
        <member name="F:HML.Design.IntAngleEditor.propertieName">
            <summary>
            关联属性
            </summary>
        </member>
        <member name="F:HML.Design.IntAngleEditorForm.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HML.Design.IntAngleEditorForm.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HML.Design.IntAngleEditorForm.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HML.DateInput_Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HML.DateInput_Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HML.DateInput_Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:HML.DateInput_Resources.DateInput_date_ico">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:HML.DropDownListPlusItemDrawBeforeEventArgs">
            <summary>
            DropDownListPlus选项绘制前事件参数
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.Item">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.Bounds_C">
            <summary>
            选项区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.Selected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.IsMouseEnter">
            <summary>
            鼠标是否进入选项
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.ImageBounds_C">
            <summary>
            选项图片区域
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.TextBounds_C">
            <summary>
            选项文本区域
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.BackBrush">
            <summary>
            选项背景色画笔
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.ForeBrush">
            <summary>
            选项前景色画笔
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.SplitterPen">
            <summary>
            选项分隔线画笔
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawBeforeEventArgs.Cancel">
            <summary>
            选项绘制是否已处理完毕 (True 将会跳过控件的默认绘制)
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusItemDrawBeforeEventArgs.#ctor(HML.DropDownListPlusItem,System.Single,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.Pen,System.Boolean)">
            <summary>
            
            </summary>
            <param name="item">选项</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）</param>
            <param name="bounds_C">选项区域（包含:内容）</param>
            <param name="selected">是否选中</param>
            <param name="isMouseEnter">鼠标是否进入选项</param>
            <param name="imageBounds_C">选项图片区域</param>
            <param name="textBounds_C">选项文本区域</param>
            <param name="backBrush">选项背景色画笔</param>
            <param name="foreBrush">选项前景色画笔</param>
            <param name="splitterPen">选项分隔线画笔</param>
            <param name="cancel">选项绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.DropDownListPlusItemDrawAfterEventArgs">
            <summary>
            DropDownListPlus选项绘制后事件参数
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.Item">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.Bounds_C">
            <summary>
            选项区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.Selected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.IsMouseEnter">
            <summary>
            鼠标是否进入选项
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.ImageBounds_C">
            <summary>
            选项图片区域
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.TextBounds_C">
            <summary>
            选项文本区域
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.BackBrush">
            <summary>
            选项背景色画笔
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.ForeBrush">
            <summary>
            选项前景色画笔
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItemDrawAfterEventArgs.SplitterPen">
            <summary>
            选项分隔线画笔
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusItemDrawAfterEventArgs.#ctor(HML.DropDownListPlusItem,System.Single,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="item">选项</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）</param>
            <param name="bounds_C">选项区域（包含:内容）</param>
            <param name="selected">是否选中</param>
            <param name="isMouseEnter">鼠标是否进入选项</param>
            <param name="imageBounds_C">选项图片区域</param>
            <param name="textBounds_C">选项文本区域</param>
            <param name="backBrush">选项背景色画笔</param>
            <param name="foreBrush">选项前景色画笔</param>
            <param name="splitterPen">选项分隔线画笔</param>
        </member>
        <member name="T:HML.HalvingLineStyle">
            <summary>
            HalvingLine分割线风格
            </summary>
        </member>
        <member name="F:HML.HalvingLineStyle.Solid">
            <summary>
            指定实线
            </summary>
        </member>
        <member name="F:HML.HalvingLineStyle.Dash">
            <summary>
            划线段组成的直线
            </summary>
        </member>
        <member name="F:HML.HalvingLineStyle.Dot">
            <summary>
            由点构成的直线
            </summary>
        </member>
        <member name="F:HML.HalvingLineStyle.DashDot">
            <summary>
            由重复的划线点图案构成的直线
            </summary>
        </member>
        <member name="F:HML.HalvingLineStyle.DashDotDot">
            <summary>
            由重复的划线点点图案构成的直线
            </summary>
        </member>
        <member name="T:HML.VHalvingLineTextAlignment">
            <summary>
            分割线文本布局方式
            </summary>
        </member>
        <member name="F:HML.VHalvingLineTextAlignment.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.VHalvingLineTextAlignment.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:HML.VHalvingLineTextAlignment.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="T:HML.VHalvingLine">
            <summary>
            纵向分割线控件
            </summary>
        </member>
        <member name="P:HML.VHalvingLine.Style">
             <summary>
            显示风格
             </summary>
        </member>
        <member name="P:HML.VHalvingLine.LineThickness">
             <summary>
            线条厚度
             </summary>
        </member>
        <member name="P:HML.VHalvingLine.LineColor">
            <summary>
            线条颜色
            </summary>
        </member>
        <member name="P:HML.VHalvingLine.TextAlignment">
             <summary>
            文本对齐方式
             </summary>
        </member>
        <member name="P:HML.VHalvingLine.TextDistance">
             <summary>
            文本位置偏移量(正数从左边开始偏移，负数由右边开始偏移)
             </summary>
        </member>
        <member name="M:HML.VHalvingLine.GetControlAutoWidth">
            <summary>
            根据字体计算控件宽度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.VHalvingLine.GetStyle">
            <summary>
            获取显示风格
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.MaskingNativeWindow">
            <summary>
            蒙版弹层NativeWindow
            
            提供窗口句柄和窗口过程的低级封装
            使用分层窗体为例能绘制透明。
            </summary>
        </member>
        <member name="P:HML.MaskingNativeWindow.ScaleDpi">
            <summary>
            控件当前缩放Dpi
            </summary>
        </member>
        <member name="P:HML.MaskingNativeWindow.Visible">
            <summary>
            蒙版弹层的显示状态
            </summary>
        </member>
        <member name="P:HML.MaskingNativeWindow.Size">
            <summary>
            控件大小
            </summary>
        </member>
        <member name="P:HML.MaskingNativeWindow.Location">
            <summary>
            控件位置
            </summary>
        </member>
        <member name="P:HML.MaskingNativeWindow.Bounds">
            <summary>
            控件大小和位置
            </summary>
        </member>
        <member name="F:HML.MaskingNativeWindow.ownerForm">
            <summary>
            蒙版拥有者
            </summary>
        </member>
        <member name="M:HML.MaskingNativeWindow.Show">
            <summary>
            显示蒙版弹层
            </summary>
        </member>
        <member name="M:HML.MaskingNativeWindow.Show(System.Drawing.Rectangle)">
            <summary>
            显示蒙版弹层
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:HML.MaskingNativeWindow.Hide">
            <summary>
            隐藏蒙版弹层
            </summary>
        </member>
        <member name="M:HML.MaskingNativeWindow.Invalidate">
            <summary>
            绘制分层窗体
            </summary>
        </member>
        <member name="M:HML.MaskingNativeWindow.Owner_Resize(System.Object,System.EventArgs)">
            <summary>
            蒙版弹层拥有者Resize事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.MaskingNativeWindow.OwnerControlChain_LocationChanged(System.Object,System.EventArgs)">
            <summary>
            蒙版弹层拥有者所在控件链LocationChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.MaskingNativeWindow.OwnerControlChain_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            蒙版弹层拥有者所在控件链VisibleChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.MaskingNativeWindow.OwnerControlChain_ParentChanged(System.Object,System.EventArgs)">
            <summary>
            蒙版弹层拥有者所在控件链ParentChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.MaskingNativeWindow.OwnerControlChain_Dispose(System.Object,System.EventArgs)">
            <summary>
            蒙版弹层拥有者所在控件链Dispose事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.MaskingNativeWindow.Dispose">
            <summary>
            显式调用
            </summary>
        </member>
        <member name="T:HML.PaginationBarChangedEventArgs">
            <summary>
            PaginationBar当前页码更改事件参数
            </summary>
        </member>
        <member name="P:HML.PaginationBarChangedEventArgs.Index">
            <summary>
            将要切换到的页码（1开始）
            </summary>
        </member>
        <member name="M:HML.PaginationBarChangedEventArgs.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="index">将要切换到的页码（1开始）</param>
        </member>
        <member name="T:HML.ButtonPlus">
            <summary>
            按钮控件
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.RoundEnabled">
            <summary>
            是否启用圆角
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.BackNormalColor">
            <summary>
            背景色(正常)
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.ForeNormalColor">
            <summary>
            前景色(正常)
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.BackEnterColor">
            <summary>
            背景色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.ForeEnterColor">
            <summary>
            前景色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.TextAlign">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.DialogResult">
            <summary>
            标识符以指示对话框的返回值
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.IcoVisible">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.IcoAlign">
            <summary>
            图标对齐方式
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.IcoSize">
            <summary>
            图标Size
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.ImageList">
            <summary>
            获取在控件上显示的图像的ImageList
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.Ico">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.IcoIndex">
            <summary>
            图标Index 
            </summary>
        </member>
        <member name="P:HML.ButtonPlus.IcoKey">
            <summary>
            图标Key 
            </summary>
        </member>
        <member name="F:HML.ButtonPlus.mousedowntype">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.ButtonPlus.mouseenterobject">
            <summary>
            鼠标已进入对象
            </summary>
        </member>
        <member name="F:HML.ButtonPlus.animationing">
            <summary>
            鼠标单击动画是否进行中
            </summary>
        </member>
        <member name="F:HML.ButtonPlus.animationAllTime">
            <summary>
            鼠标单击动画动画总时间
            </summary>
        </member>
        <member name="F:HML.ButtonPlus.animationUsedTime">
            <summary>
            鼠标单击动画已使用时间
            </summary>
        </member>
        <member name="F:HML.ButtonPlus.animationpoint">
            <summary>
            鼠标单击动画圆心坐标
            </summary>
        </member>
        <member name="M:HML.ButtonPlus.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.ButtonPlus.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="M:HML.ButtonPlus.RecreateImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList更改后刷新控件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.ButtonPlus.DetachImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList释放时解绑清除清除引用
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.PaginationBar">
            <summary>
            页码导航控件
            </summary>
        </member>
        <member name="E:HML.PaginationBar.PaginationChanged">
            <summary>
            当前页码更改事件
            </summary>
        </member>
        <member name="P:HML.PaginationBar.ContentPadding">
            <summary>
            内容区内边距
            </summary>
        </member>
        <member name="P:HML.PaginationBar.StyleText">
            <summary>
            显示风格文本（有7个|分隔开来，[*]代表记录总数量。格式错误则采用默认配置）
             例子：“当前共有[*]条|首页|上一页|...|...|下一页|尾页|共[*]页”
            </summary>
        </member>
        <member name="P:HML.PaginationBar.FirstLastButtonVisible">
            <summary>
            是否显示(首页、尾页)按钮
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PrevNextButtonVisible">
            <summary>
            是否显示(上一页、下一页)按钮
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PrevNextGroupButtonVisible">
            <summary>
            是否显示(上一组页码、下一组页码)按钮
            </summary>
        </member>
        <member name="P:HML.PaginationBar.ButtonBackNormalColor">
            <summary>
            按钮背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.ButtonTextNormalColor">
            <summary>
            按钮文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.ButtonBackEnterColor">
            <summary>
            按钮背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.ButtonTextEnterColor">
            <summary>
            按钮文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.RecordDescriptionVisible">
            <summary>
            是否显示记录数描述
            </summary>
        </member>
        <member name="P:HML.PaginationBar.RecordDescriptionTextColor">
            <summary>
            记录数描述文本颜色
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PageDescriptionVisible">
            <summary>
            是否显示页数描述
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PageDescriptionTextColor">
            <summary>
            页数描述文本颜色
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationBackNormalColor">
            <summary>
            页码背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationTextNormalColor">
            <summary>
            页码文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationBackEnterColor">
            <summary>
            页码背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationTextEnterColor">
            <summary>
            页码文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationBackCurrentColor">
            <summary>
            页码背景颜色（当前）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationTextCurrentColor">
            <summary>
            页码文本颜色（当前）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.LimitPage">
            <summary>
            导航一次最多显示多少个页码（建议为奇数，最小值为5）
            </summary>
        </member>
        <member name="P:HML.PaginationBar.TotalRecords">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PageSize">
            <summary>
            多少条记录为一页
            </summary>
        </member>
        <member name="P:HML.PaginationBar.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:HML.PaginationBar.CurrentPage">
            <summary>
            当前页码(1开始)
            </summary>
        </member>
        <member name="F:HML.PaginationBar.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.PaginationBar.mouseenterobject">
            <summary>
            当前鼠标已进入的对象
            </summary>
        </member>
        <member name="F:HML.PaginationBar.defaultPaginationText">
            <summary>
            页码显示默认文本
            </summary>
        </member>
        <member name="F:HML.PaginationBar.body">
            <summary>
            元素信息
            </summary>
        </member>
        <member name="M:HML.PaginationBar.SetPagination(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置页码导航
            </summary>
            <param name="limitPage">导航一次最多显示多少个页码（建议为奇数，最小值为5）</param>
            <param name="totalRecords">总记录数</param>
            <param name="pageSize">多少条记录为一页（最小值为1）</param>
            <param name="currentPage">当前页码索引（从1开始）</param>
        </member>
        <member name="M:HML.PaginationBar.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.PaginationBar.DrawRoundCornerRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Pen,System.Drawing.SolidBrush)">
            <summary>
            绘制Rectangle 1个像素边框（圆角边框半径为3个像素）
            </summary>
            <param name="g">要绘制边框的控件画布</param>
            <param name="rect">要绘制rect</param>
            <param name="backColor">页码背景色</param>
            <param name="backOverColor">控件背景色（圆角边框平滑过度颜色）</param>
            <param name="commom_pen">通用画笔</param>
            <param name="commom_sb">通用画笔</param>
        </member>
        <member name="M:HML.PaginationBar.GetPaginationText">
            <summary>
            获取页码显示文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.PaginationBar.GetControlAutoHeight">
            <summary>
            根据设置计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.record_description">
            <summary>
            记录数描述
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.first_button">
            <summary>
            首页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.prev_button">
            <summary>
            上一页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.prevgroup_button">
            <summary>
            上一组
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.numbers">
            <summary>
            下一组
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.nextgroup_button">
            <summary>
            下一页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.next_button">
            <summary>
            尾页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.last_button">
            <summary>
            
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationBarBody.page_description">
            <summary>
            页数描述
            </summary>
        </member>
        <member name="T:HML.PaginationBar.PaginationNumberElement">
            <summary>
            页码索引元素
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationNumberElement.str">
            <summary>
            元素文本
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationNumberElement.size">
            <summary>
            元素文本Size
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationNumberElement.rect">
            <summary>
            元素rect
            </summary>
        </member>
        <member name="T:HML.PaginationBar.PaginationButtonElement">
            <summary>
            页码按钮元素
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationButtonElement.type">
            <summary>
            元素类型
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationButtonElement.visible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationButtonElement.str">
            <summary>
            元素文本
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationButtonElement.size">
            <summary>
            元素文本Size
            </summary>
        </member>
        <member name="P:HML.PaginationBar.PaginationButtonElement.rect">
            <summary>
            元素rect
            </summary>
        </member>
        <member name="T:HML.PaginationBar.PaginationButtonElementType">
            <summary>
            页码按钮元素类型
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.First">
            <summary>
            首页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.Prev">
            <summary>
            上一页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.PrevGroup">
            <summary>
            上一组
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.NextGroup">
            <summary>
            下一组
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.Next">
            <summary>
            下一页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.Last">
            <summary>
            尾页
            </summary>
        </member>
        <member name="F:HML.PaginationBar.PaginationButtonElementType.Description">
             <summary>
            描述 
             </summary>
        </member>
        <member name="T:HML.SingleAccordionResources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnAddChildContent">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnAddRootCategory">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnAddRootContent">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnAddRootLabel">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnCollapse">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnDelete">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_btnExpand">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_moveDownButton">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.SingleAccordionResources.SingleAccordionNodeCollectionEditorForm_moveUpButton">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:HML.SingleAccordionLabelNodeStyle">
            <summary>
            SingleAccordion标签节点样式(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.MouseAnimationEnabled">
            <summary>
            是否启用节点鼠标动画
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.MouseAnimationAllTimer">
            <summary>
            鼠标动画总时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.LRAnimationDistance">
            <summary>
            左右滑动动画距离
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.TBMargin">
            <summary>
            上下外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.TextLRMargin">
            <summary>
            文本左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.BackNormalColor">
            <summary>
            背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.TextNormalColor">
            <summary>
            文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.BackEnterColor">
            <summary>
            背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.TextEnterColor">
            <summary>
            文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.SplitterLineColor">
            <summary>
            分割线颜色
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.ImageVisible">
            <summary>
            是否显示图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.ImageLRMargin">
            <summary>
            图片左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.ImageSize">
            <summary>
            图片Size
            </summary>
        </member>
        <member name="P:HML.SingleAccordionLabelNodeStyle.Image">
            <summary>
            图片(通用)
            </summary>
        </member>
        <member name="M:HML.SingleAccordionLabelNodeStyle.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.SingleAccordionLabelNodeStyle.InitializeInvalidate">
            <summary>
            重新计算控件并刷新控件
            </summary>
        </member>
        <member name="T:HML.SingleAccordionLabelNode">
            <summary>
            SingleAccordion标签节点
            </summary>
        </member>
        <member name="M:HML.SingleAccordionLabelNode.Copy(System.Boolean)">
            <summary>
            复制节点
            </summary>
            <param name="copyChildrens">是否复制子节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionLabelNode.GetMouseAnimationEnabled">
            <summary>
            获取节点鼠标动画启用状态（节点未添加到控件返回 false）
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionLabelNode.GetMouseAnimationAllTime">
            <summary>
            获取节点鼠标动画总时间（节点未添加到控件返回0）
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.SingleAccordionMouseAnimationEnableds">
            <summary>
            节点鼠标动画效果是否启用
            </summary>
        </member>
        <member name="F:HML.SingleAccordionMouseAnimationEnableds.Auto">
            <summary>
            采用控件通用设置
            </summary>
        </member>
        <member name="F:HML.SingleAccordionMouseAnimationEnableds.True">
            <summary>
            启用
            </summary>
        </member>
        <member name="F:HML.SingleAccordionMouseAnimationEnableds.False">
            <summary>
            禁用
            </summary>
        </member>
        <member name="T:HML.SingleAccordionCustomAnimation">
            <summary>
            SingleAccordion自定义动画
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCustomAnimation.Key">
            <summary>
            动画类型标识
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCustomAnimation.Target">
            <summary>
            动画目标
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCustomAnimation.AnimationUsedTime">
            <summary>
            自定义动画已使用时间
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCustomAnimation.AnimationAllTime">
            <summary>
            自定义动画总时间
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCustomAnimation.IsLayout">
            <summary>
            自定义动画是否涉及控件内部布局计算
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCustomAnimation.Tag">
            <summary>
            动画自定义数据
            </summary>
        </member>
        <member name="M:HML.SingleAccordionCustomAnimation.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Boolean,System.Object)">
            <summary>
            
            </summary>
            <param name="key">动画类型标识</param>
            <param name="target">动画目标</param>
            <param name="animationUsedTime">自定义动画已使用时间</param>
            <param name="animationAllTime">自定义动画总时间</param>
            <param name="isLayout">自定义动画是否涉及控件内部布局计算</param>
            <param name="tag">动画自定义数据</param>
        </member>
        <member name="T:HML.SingleAccordionNodeImageVisibles">
            <summary>
            SingleAccordionNode节点图片是否显示
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeImageVisibles.Auto">
            <summary>
            采用控件通用设置
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeImageVisibles.True">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeImageVisibles.False">
            <summary>
            不显示
            </summary>
        </member>
        <member name="T:HML.SingleAccordionNodeDrawBeforeEventArgs">
            <summary>
            SingleAccordion节点绘制前事件参数
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.ScrollY">
            <summary>
            滚动条Y坐标
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.Bounds_C">
            <summary>
            节点区域（包含:内容）（不包含滚动条Y坐标）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.BackBrush">
            <summary>
            背景画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.ImageVisible">
            <summary>
            是否显示图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.ImageBounds_C">
            <summary>
            图片区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.TextBounds_C">
            <summary>
            文本区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.TextBrush">
            <summary>
            文本画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.FoldVisible">
            <summary>
            是否显示折叠图标
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.FoldBounds_C">
            <summary>
            折叠图标区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.FoldPen">
            <summary>
            折叠图标画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.FoldAngle">
            <summary>
            折叠图标旋转角度
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.SplitterLineVisible">
            <summary>
            是否显示分隔线
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.SplitterLineBounds_C">
            <summary>
            分隔线区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.SplitterLinePen">
            <summary>
            分隔线画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawBeforeEventArgs.Cancel">
            <summary>
            节点绘制是否已处理完毕 (True 将会跳过控件的默认绘制)
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNodeDrawBeforeEventArgs.#ctor(HML.SingleAccordionNode,System.Single,System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.SolidBrush,System.Boolean,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.SolidBrush,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Drawing.Pen,System.Boolean,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            
            </summary>
            <param name="node">节点</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）</param>
            <param name="scrollY">滚动条Y坐标</param>
            <param name="bounds_C">节点区域（包含:内容）（不包含滚动条Y坐标）</param>
            <param name="backBrush">背景画笔</param>
            <param name="imageVisible">是否显示图片</param>
            <param name="imageBounds_C">图片区域（包含:内容）</param>
            <param name="image">图片</param>
            <param name="textBounds_C">文本区域（包含:内容）</param>
            <param name="textBrush">文本画笔</param>
            <param name="foldVisible">是否显示折叠图标</param>
            <param name="foldBounds_C">折叠图标区域（包含:内容）</param>
            <param name="foldAngle">折叠图标旋转角度</param>
            <param name="foldPen">折叠图标画笔</param>
            <param name="splitterLineVisible">是否显示分隔线</param>
            <param name="splitterLineBounds_C">分隔线区域（包含:内容）</param>
            <param name="splitterLinePen">分隔线画笔</param>
            <param name="cancel">节点绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.SingleAccordionNodeDrawAfterEventArgs">
            <summary>
            SingleAccordion节点背景绘制后事件参数
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.ScrollY">
            <summary>
            滚动条Y坐标
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.Bounds_C">
            <summary>
            节点区域（包含:内容）（不包含滚动条Y坐标）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.BackBrush">
            <summary>
            背景画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.ImageVisible">
            <summary>
            是否显示图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.ImageBounds_C">
            <summary>
            图片区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.TextBounds_C">
            <summary>
            文本区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.TextBrush">
            <summary>
            文本画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.FoldVisible">
            <summary>
            是否显示折叠图标
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.FoldBounds_C">
            <summary>
            折叠图标区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.FoldAngle">
            <summary>
            折叠图标旋转角度
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.FoldPen">
            <summary>
            折叠图标画笔
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.SplitterLineVisible">
            <summary>
            是否显示分隔线
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.SplitterLineBounds_C">
            <summary>
            分隔线区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeDrawAfterEventArgs.SplitterLinePen">
            <summary>
            分隔线画笔
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNodeDrawAfterEventArgs.#ctor(HML.SingleAccordionNode,System.Single,System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.SolidBrush,System.Boolean,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.SolidBrush,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Drawing.Pen,System.Boolean,System.Drawing.Rectangle,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="node">节点</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）</param>
            <param name="scrollY">滚动条Y坐标</param>
            <param name="bounds_C">节点区域（只包含:内容）（不包含滚动条Y坐标）</param>
            <param name="backBrush">背景画笔</param>
            <param name="imageVisible">是否显示图片</param>
            <param name="imageBounds_C">图片区域（包含:内容）</param>
            <param name="image">图片</param>
            <param name="textBounds_C">文本区域（包含:内容）</param>
            <param name="textBrush">文本画笔</param>
            <param name="foldVisible">是否显示折叠图标</param>
            <param name="foldBounds_C">折叠图标区域（包含:内容）</param>
            <param name="foldAngle">折叠图标旋转角度</param>
            <param name="foldPen">折叠图标画笔</param>
            <param name="splitterLineVisible">是否显示分隔线</param>
            <param name="splitterLineBounds_C">分隔线区域（包含:内容）</param>
            <param name="splitterLinePen">分隔线画笔</param>
        </member>
        <member name="T:HML.SingleAccordionBackgroundDrawBeforeEventArgs">
            <summary>
            背景绘制前事件参数
            </summary>
        </member>
        <member name="P:HML.SingleAccordionBackgroundDrawBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.SingleAccordionBackgroundDrawBeforeEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionBackgroundDrawBeforeEventArgs.Bounds_C">
            <summary>
            控件区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionBackgroundDrawBeforeEventArgs.Cancel">
            <summary>
            背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)
            </summary>
        </member>
        <member name="M:HML.SingleAccordionBackgroundDrawBeforeEventArgs.#ctor(System.Single,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=Bounds_C ）</param>
            <param name="bounds_C">控件区域（只包含:内容）</param>
            <param name="cancel">背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.TabControlPlusResources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HML.TabControlPlusResources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HML.TabControlPlusResources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:HML.TabControlPlusResources.TabControlPlus_item_default_button_ico">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HML.TabControlPlusResources.TabControlPlus_item_default_ico">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:HML.TabItemDrawBackgroundBeforeEventArgs">
            <summary>
            TabItem背景绘制前事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.TabPage">
            <summary>
            TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.TabBarBounds_P">
            <summary>
            导航栏区域 （包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.TabBarBounds_C">
            <summary>
            导航栏区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.ItemsClipBounds_C">
            <summary>
            允许显示所有选项的总剪辑区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.Bounds_M">
            <summary>
            当前选项区域（包含:外边距、内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.Bounds_P">
            <summary>
            当前选项区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.Bounds_C">
            <summary>
            当前选项区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.ClipBounds_P">
            <summary>
            当前选项剪辑区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundBeforeEventArgs.Cancel">
            <summary>
            当前选项背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)
            </summary>
        </member>
        <member name="M:HML.TabItemDrawBackgroundBeforeEventArgs.#ctor(HML.TabPagePlus,System.Single,System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tabPage">TabPage</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）</param>
            <param name="tabBarBounds_P">导航栏区域 （包含:内边距、内容）</param>
            <param name="tabBarBounds_C">导航栏区域 （包含:内容）</param>
            <param name="itemsClipBounds_C">允许显示所有选项的总剪辑区域 （包含:内容）</param>
            <param name="bounds_M">当前选项区域（包含:外边距、内边距、内容）</param>
            <param name="bounds_P">当前选项区域（包含:内边距、内容）</param>
            <param name="bounds_C">当前选项区域（只包含:内容）</param>
            <param name="clipBounds_P">当前选项剪辑区域（包含:内边距、内容）</param>
            <param name="cancel">当前选项背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.AlphaColorEditorResources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HML.AlphaColorEditorResources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HML.AlphaColorEditorResources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:HML.AlphaColorEditorResources.AlphaColorEditor_squaresback">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:HML.AnimationHelper">
            <summary>
            动画工具类
            </summary>
        </member>
        <member name="M:HML.AnimationHelper.EaseIn(System.Double,System.Double)">
            <summary>
            变速
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <param name="power">动画曲线幂(默认值3.0) </param>
            <returns></returns>
        </member>
        <member name="M:HML.AnimationHelper.EaseOut(System.Double,System.Double,System.Double)">
            <summary>
            变速
            </summary>
            <param name="usedTime">动画已进行时间</param>
            <param name="allTime">动画总时间</param>
            <param name="power">动画曲线幂(默认值3.0) </param>
            <returns></returns>    
        </member>
        <member name="M:HML.AnimationHelper.EaseBoth(System.Double,System.Double)">
            <summary>
            变速
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <param name="power">动画曲线幂(默认值3.0)</param>
            <returns></returns>
        </member>
        <member name="M:HML.AnimationHelper.BackIn(System.Double,System.Double,System.Double)">
            <summary>
            收缩
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <param name="power">动画曲线幂(默认值3.0) </param>
            <param name="amplitude">收缩与相关联的幅度动画。此值必须大于或等于 0。 默认值为 1。</param>
            <returns></returns>
        </member>
        <member name="M:HML.AnimationHelper.BackOut(System.Double,System.Double,System.Double)">
            <summary>
            收缩
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <param name="power">动画曲线幂(默认值3.0) </param>
            <param name="amplitude">收缩与相关联的幅度动画。此值必须大于或等于 0。 默认值为 1.0。</param>
            <returns></returns>
        </member>
        <member name="M:HML.AnimationHelper.BackBoth(System.Double,System.Double,System.Double)">
            <summary>
            收缩
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <param name="power">动画曲线幂(默认值3.0) </param>
            <param name="amplitude">收缩与相关联的幅度动画。此值必须大于或等于 0。 默认值为 1.0。 </param>
            <returns></returns>
        </member>
        <member name="M:HML.AnimationHelper.QuadraticIn(System.Double)">
            <summary>
            二次
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <returns></returns>
        </member>
        <member name="M:HML.AnimationHelper.QuadraticOut(System.Double)">
            <summary>
            二次
            </summary>
            <param name="progressTime">已进行动画时间/总动画时间</param>
            <returns></returns>
        </member>
        <member name="T:HML.MonitorManager">
            <summary>
            监控信息管理
            </summary>
        </member>
        <member name="P:HML.MonitorManager.GetAnimationTimerEnabled">
            <summary>
            动画定时器状态
            </summary>
        </member>
        <member name="P:HML.MonitorManager.GetAnimationCount">
            <summary>
            当前要处理动画数量
            </summary>
        </member>
        <member name="P:HML.MonitorManager.GetNullAnimationCount">
            <summary>
            当前要处理空动画数量
            </summary>
        </member>
        <member name="P:HML.MonitorManager.GetMaskingMaskingNativeWindowCount">
            <summary>
            获取蒙版弹层数量
            </summary>
        </member>
        <member name="P:HML.MonitorManager.GetMaskingMaskingTimerEnabled">
            <summary>
            获取蒙版弹层定时器状态
            </summary>
        </member>
        <member name="P:HML.MonitorManager.GetDropDownListPlusHookCount">
            <summary>
            DropDownListPlus下拉列表弹层鼠标钩子数量
            </summary>
        </member>
        <member name="T:HML.ControlHelper">
            <summary>
            控件工具类
            </summary>
        </member>
        <member name="M:HML.ControlHelper.GetWindowGraphics(System.IntPtr,System.Drawing.Graphics@,System.IntPtr@)">
            <summary>
            获取指定窗口（包括非工作区）的Graphics
            </summary>
            <param name="handle">指定窗口的handle</param>
            <param name="g">返回g</param>
            <param name="hDC">返回hDC</param>
        </member>
        <member name="M:HML.ControlHelper.GetWindowClientGraphics(System.IntPtr,System.Drawing.Graphics@,System.IntPtr@)">
            <summary>
            获取指定窗口（只包括工作区）的Graphics
            </summary>
            <param name="handle">指定窗口的handle</param>
            <param name="g">返回g</param>
            <param name="hDC">返回hDC</param>
        </member>
        <member name="M:HML.ControlHelper.DrawControlBorder(System.Windows.Forms.Control,System.Drawing.Graphics,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制Rectangle 1个像素边框（圆角边框半径为3个像素）
            </summary>
            <param name="control">要绘制边框的控件</param>
            <param name="g">要绘制边框的控件画布</param>
            <param name="roundCorner">是否为圆角边框（圆角边框半径为3个像素）</param>
            <param name="borderColor">边框颜色</param>
            <param name="borderOutOverColor">父控件背景色（圆角边框平滑过度颜色）</param>
            <param name="borderInOverColor">控件背景色（圆角边框平滑过度颜色）</param>
        </member>
        <member name="M:HML.ControlHelper.AdjustRectangleShapePath(System.Drawing.Rectangle)">
            <summary>
            计算Rectangle 1个像素圆角形状路径（圆角边框半径为3个像素）
            </summary>
            <param name="rect">rect</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.AdjustRectangleMaxRadiusForPoint(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            计算点到矩形的最大圆形最大半径
            </summary>
            <param name="rect">矩形</param>
            <param name="point">点</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.AdjustCircularPath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            转换成圆角
            </summary>
            <param name="rect">要转换的rect</param>
            <param name="radius">圆角半径的大小</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.AdjustCircularPath(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            转换成圆角
            </summary>
            <param name="rect">要转换的rect</param>
            <param name="leftTopRadius">左上角</param>
            <param name="rightTopRadius">右上角</param>
            <param name="rightBottomRadius">右下角</param>
            <param name="leftBottomRadius">左下角</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.AdjustCircularRegion(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            转换成圆角
            </summary>
            <param name="rect">要转换的rect</param>
            <param name="leftTopRadius">左上角</param>
            <param name="rightTopRadius">右上角</param>
            <param name="rightBottomRadius">右下角</param>
            <param name="leftBottomRadius">左下角</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.TransformRectangleF(System.Drawing.RectangleF,System.Single,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            根据画笔大小计算出真是rectf
            </summary>
            <param name="rectf">要转换的rectf</param>
            <param name="pen">画笔大小大小</param>
            <param name="pen">画笔对齐方式</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.TransformRectangle(System.Drawing.Rectangle,System.Int32,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            根据画笔大小计算出真是rectf
            </summary>
            <param name="rect">要转换的rect</param>
            <param name="pen">画笔大小大小</param>
            <param name="pen">画笔对齐方式</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.GetFontTopHiatus(System.Drawing.Font)">
            <summary>
            获取字体顶部空格
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.GetFontRealHeight(System.Drawing.Font)">
            <summary>
            获取字体真实高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.CalculatePointForAngle(System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            计算指定角度的坐标
            </summary>
            <param name="center">圆心坐标</param>
            <param name="radius">圆半径</param>
            <param name="angle">角度</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.CalculateAngleForPoint(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            计算两个坐标的夹角
            </summary>
            <param name="point1">坐标1</param>
            <param name="point2">坐标2</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToAngleSize(System.Drawing.SizeF,System.Single)">
            <summary>
            获取Size旋转指定角度后新的Size
            </summary>
            <param name="size">源Size</param>
            <param name="angle">指定角度</param>
            <returns>新的Size</returns>
        </member>
        <member name="M:HML.ControlHelper.TransformRectangleByPen(System.Drawing.RectangleF,System.Single)">
            <summary>
            根据画笔大小转换rectf
            </summary>
            <param name="rectf">要转换的rectf</param>
            <param name="pen">画笔大小大小</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToDisableColor(System.Drawing.Color)">
            <summary>
            转换成灰色颜色值
            </summary>
            <param name="color">要转换的颜色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToAutoColor(System.Windows.Forms.Control,System.Drawing.Color)">
            <summary>
            根据控件Enabled状态转换成对应颜色值
            </summary>
            <param name="control">颜色所属的控件</param>
            <param name="color">要转换的颜色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToAutoColor(System.Boolean,System.Drawing.Color)">
            <summary>
            根据状态转换成对应颜色值
            </summary>
            <param name="disable">是否为禁用状态</param>
            <param name="color">要转换的颜色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToAnimationColor(System.Drawing.Color)">
            <summary>
            转换成动画效果颜色值
            </summary>
            <param name="color">要转换的颜色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToForeColorByBackColor(System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            根据控件Enabled状态和背景色转换文本字体对应颜色值
            </summary>
            <param name="control">颜色所属的控件</param>
            <param name="backColor">背景色</param>
            <param name="foreColor">前景色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToForeColorByBackColor(System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            根据状态和背景色转换文本字体对应颜色值
            </summary>
            <param name="disable">是否为禁用状态</param>
            <param name="backColor">背景色</param>
            <param name="foreColor">前景色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ConvertToDarkOrLightColor(System.Drawing.Color)">
            <summary>
            根据指定颜色Brightness转换成有对比颜色
            </summary>
            <param name="color">指定颜色</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.VerifyRGB(System.Int32)">
            <summary>
            检查RGB值ed有效范围
            </summary>
            <param name="rgb"></param>
            <returns></returns>
        </member>
        <member name="P:HML.ControlHelper.DisabledImageColorMatrix">
            <summary>
            用于创建禁用状态灰色图片（NET源码拷贝）
            </summary>
        </member>
        <member name="M:HML.ControlHelper.CreateDisabledImage(System.Drawing.Image)">
            <summary>
            创建禁用状态灰色图片（NET源码拷贝）
            </summary>
            <param name="normalImage">要处理的图片</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ScaleImage(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            缩放图片
            </summary>
            <param name="sourceImage">源图片</param>
            <param name="targetSize">目标Size</param>
            <returns></returns>
        </member>
        <member name="M:HML.ControlHelper.ReserveDecimals(System.Single,System.Int32)">
            <summary>
            保留指定位数小数
            </summary>
            <param name="value">要处理数</param>
            <param name="places">要保留小数位数</param>
        </member>
        <member name="M:HML.ControlHelper.ReserveDecimals(System.Double,System.Int32)">
            <summary>
            保留指定位数小数
            </summary>
            <param name="value">要处理数</param>
            <param name="places">要保留小数位数</param>
        </member>
        <member name="M:HML.ControlHelper.ReserveDecimals(System.String,System.Int32)">
            <summary>
            保留指定位数小数
            </summary>
            <param name="value">要处理数</param>
            <param name="places">要保留小数位数</param>
        </member>
        <member name="T:HML.DropDownListPlusContentItemsStyle">
            <summary>
            DropDownListPlus选项区域选项风格
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusContentItemsStyle.ItemBorderColor">
            <summary>
            选项边框颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusContentItemsStyle.ItemBackColor">
            <summary>
            选项背景颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusContentItemsStyle.ItemTextColor">
            <summary>
            选项文本颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusContentItemsStyle.ItemClearVisible">
            <summary>
            选项是否显示清除按钮
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusContentItemsStyle.ItemClearBackColor">
            <summary>
            清除按钮背景颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusContentItemsStyle.ItemClearForeColor">
            <summary>
            清除按钮前景颜色
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusContentItemsStyle.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusContentItemsStyle.InitializeInvalidate">
            <summary>
            重新计算控件刷新控件
            </summary>
        </member>
        <member name="T:HML.DropDownListPlusDropDownButton">
            <summary>
            DropDownListPlus下拉按钮
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusDropDownButton.DropDownFullArea">
            <summary>
            下拉按钮的有效区域是否为整个控件（只限于单选模式）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusDropDownButton.BackNormalColor">
            <summary>
            下拉按钮背景色(正常)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusDropDownButton.ForeNormalColor">
            <summary>
            下拉按钮前景色(正常)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusDropDownButton.BackEnterColor">
            <summary>
            下拉按钮背景色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusDropDownButton.ForeEnterColor">
            <summary>
            下拉按钮前景色(鼠标进入)
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusDropDownButton.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="T:HML.DropDownListPlusClearButton">
            <summary>
            DropDownListPlus清除按钮
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusClearButton.Visible">
            <summary>
            是否显示清除按钮
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusClearButton.BackNormalColor">
            <summary>
            清除按钮背景色(正常)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusClearButton.ForeNormalColor">
            <summary>
            清除按钮前景色(正常)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusClearButton.BackEnterColor">
            <summary>
            清除按钮背景色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusClearButton.ForeEnterColor">
            <summary>
            清除按钮前景色(鼠标进入)
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusClearButton.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusClearButton.InitializeInvalidate">
            <summary>
            重新计算控件并刷新控件
            </summary>
        </member>
        <member name="T:HML.DropDownListPlus">
            <summary>
            下拉列表控件
            </summary>
        </member>
        <member name="E:HML.DropDownListPlus.ItemsSourceChanged">
            <summary>
            数据源更改事件
            </summary>
        </member>
        <member name="E:HML.DropDownListPlus.SelectedItemsChanged">
            <summary>
            选项选中更改事件
            </summary>
        </member>
        <member name="E:HML.DropDownListPlus.ItemDrawBefore">
            <summary>
            选项自定义绘制前事件
            </summary>
        </member>
        <member name="E:HML.DropDownListPlus.ItemDrawAfter">
            <summary>
            选项自定义绘制后事件
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.RoundEnabled">
            <summary>
            是否启用圆角
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ContentPadding">
            <summary>
            选项区域上下内边距(只限于单选模式)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.Style">
            <summary>
            显示风格
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.Multiple">
            <summary>
            是否允许多个选中
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.NullTipText">
            <summary>
            空值提示文本
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.NullTipTextColor">
            <summary>
            空值提示文本颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ItemsSource">
            <summary>
            选项集合
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ContentItemsStyle">
            <summary>
            选项区域风格
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ClearButton">
            <summary>
            清除按钮
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownButton">
            <summary>
            下拉按钮
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.ListItemsStyle">
            <summary>
            下拉列表选项风格
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.SelectedItems">
            <summary>
            已选中选项集合 (多选模式)
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.SelectedItem">
            <summary>
            已选中选项 (单选模式)
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.activatedState">
            <summary>
            控件激活显示状态（配合Focused 、ShowFocusCues、activatedIndex使用）
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.activatedIndex">
            <summary>
            控件激活状态选项索引（-1 没有、0 下拉按钮、1 清除按钮 ）
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.mouseenterobject">
            <summary>
            鼠标进入对象
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.clearbutton_object">
            <summary>
            清空按钮对象
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.dropdrowbutton_object">
            <summary>
            下拉按钮对象
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.content_rect">
            <summary>
            内容区域rect（排除上下边框、内边距 。但包含左右边框、内边距）
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.clearbutton_rect">
            <summary>
            清空按钮rect
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.dropdrowbutton_rect">
            <summary>
            下拉按钮rect
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.nativeWindow">
            <summary>
            下拉列表弹层
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.borderThicknes">
            <summary>
            边框
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.BindItemsSource(HML.DropDownListPlusItemCollection)">
            <summary>
            绑定数据源
            </summary>
            <param name="source">要绑定数据源</param>
        </member>
        <member name="M:HML.DropDownListPlus.BindItemsSource(HML.DropDownListPlusItemCollection,HML.DropDownListPlusItem)">
            <summary>
            绑定数据源
            </summary>
            <param name="source">要绑定数据源</param>
            <param name="selectedItem">设置已选中选项(不会触发SelectedItemsChanged事件)</param>
        </member>
        <member name="M:HML.DropDownListPlus.BindItemsSource(HML.DropDownListPlusItemCollection,System.Collections.Generic.List{HML.DropDownListPlusItem})">
            <summary>
            绑定数据源
            </summary>
            <param name="source">要绑定数据源</param>
            <param name="selectedItems">设置已选中选项集合(不会触发SelectedItemsChanged事件)</param>
        </member>
        <member name="M:HML.DropDownListPlus.InitializeRectangle">
            <summary>
            初始化控件信息
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.InitializeElementRectangle">
            <summary>
            更新控件元素rect
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.SyncSelectedItemToSelectedItemInfo">
            <summary>
            同步Item到ItemInfo
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.CalculateSelectedItemInfoTextSize">
            <summary>
            重新计算选中选项文本Size
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.GetControlAutoHeight">
            <summary>
            根据设置获取控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.GetSingleRowHeight">
            <summary>
            获取控件单行高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.AdjustControlShapePath">
            <summary>
            计算控件形状路径
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DrawControlBorder(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制Rectangle 1个像素边框（圆角边框半径为3个像素）
            </summary>
            <param name="g">要绘制边框的控件画布</param>
            <param name="borderColor">边框颜色</param>
            <param name="borderOutOverColor">父控件背景色（圆角边框平滑过度颜色）</param>
            <param name="borderInOverColor">控件背景色（圆角边框平滑过度颜色）</param>
        </member>
        <member name="M:HML.DropDownListPlus.IsEqualList(System.Collections.Generic.List{HML.DropDownListPlusItem},System.Collections.Generic.List{HML.DropDownListPlusItem})">
            <summary>
            判断两个集合是否一致(不包括顺序)
            </summary>
            <param name="list1">集合1</param>
            <param name="list2">集合2</param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.ShowNativeWindow">
            <summary>
            显示下拉列表弹层（同时安装钩子）
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.HideNativeWindow">
            <summary>
            隐藏下拉列表弹层（同时同步下拉列表选中选项和取消钩子）
            </summary>
        </member>
        <member name="T:HML.DropDownListPlus.DropDownListPlusNativeWindow">
            <summary>
            下拉列表弹层NativeWindow
            
            提供窗口句柄和窗口过程的低级封装
            NativeWindow 使用局部鼠标钩子来处理鼠标事件，放弃原有鼠标默认鼠标事件，因为要添加窗体自动消失功能，
            使用分层窗体为例能绘制透明，同时在工作区域模拟非工作区部分。
            
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusNativeWindow.Visible">
            <summary>
            下拉列表弹层的显示状态
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusNativeWindow.Bounds">
            <summary>
            控件大小和位置（包括其非工作区元素）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusNativeWindow.ClientBounds">
            <summary>
            控件工作区域大小和位置（模仿）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusNativeWindow.ClientRectangle">
            <summary>
            控件工作区域（模仿）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusNativeWindow.ScrollVisible">
            <summary>
            控件当前滚动条是否显示
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusNativeWindow.SelectedItems">
            <summary>
            下拉列表弹层已选中集合
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.owner">
            <summary>
            下拉列表弹层拥有者
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.shadow_image_tmp">
            <summary>
            下拉列表弹层四边阴影图片缓存
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.hook_owner">
            <summary>
            鼠标钩子拥有者
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.hook_callback">
            <summary>
            鼠标钩子回调函数
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.hook_id_array">
            <summary>
            钩子id集合
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.hook_id">
            <summary>
            钩子id
            </summary>
        </member>
        <member name="T:HML.DropDownListPlus.DropDownListPlusNativeWindow.HookProc">
            <summary>
            鼠标钩子回调委托
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:HML.DropDownListPlus.DropDownListPlusNativeWindow.MouseHookStruct">
            <summary>
            鼠标钩子返回信息结构体
            </summary>
        </member>
        <member name="T:HML.DropDownListPlus.DropDownListPlusNativeWindow.PointStruct">
            <summary>
            鼠标钩子坐标
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.wndproc_ismousein">
            <summary>
            鼠标是否在控件模拟工作区范围内 (WndProc消息)
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.wndproc_mousepressed">
            <summary>
            鼠标是否在控件模拟工作区范围内按下过 (WndProc消息)
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.mousedownindex">
            <summary>
            当前鼠标已按下的对象(-2 滚动条、-1没有、>=0 下拉列表选项)
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.mousedownpoint">
            <summary>
            鼠标按下功能坐标
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.mousedown_scrollOffsetY">
            <summary>
            鼠标按下滚动条时菜单真实区的Y坐标
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.mouseenterindex">
            <summary>
            鼠标进入对象
            </summary>
        </member>
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.scrollBarRect">
            <summary>
            滑条Rect
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:HML.DropDownListPlus.DropDownListPlusNativeWindow.scrollSlideRect" -->
        <member name="F:HML.DropDownListPlus.DropDownListPlusNativeWindow.scrollOffsetY">
            <summary>
            滑块Y轴距离(存放内容Y轴真实距离)
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.Show">
            <summary>
            显示下拉列表弹层(同时安装钩子)
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.Hide">
            <summary>
            隐藏下拉列表弹层(同时取消钩子)
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.Invalidate">
            <summary>
            绘制下拉列表弹层
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.SetScrollOffsetY(System.Int32)">
            <summary>
            设置滚动条滑块Y轴距离
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.PointToClient(System.Drawing.Point)">
            <summary>
            将指定屏幕点的位置计算成工作区坐标
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.PointToScreen(System.Drawing.Point)">
            <summary>
            将指定工作区点的位置计算成屏幕坐标
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.Dispose">
            <summary>
            显式调用
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.AdjustBounds">
            <summary>
            计算下拉列表弹层显示区域Bounds
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.AdjustScrollRectangle">
            <summary>
            更新下拉列表弹层滚动条Rect
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.GetItemsRealityHeight">
            <summary>
            获取列表真实高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.GetClientRectangleFirstIndex">
            <summary>
            获取进入工作区的第一个选项索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.FindItemIndexForPoint(System.Drawing.Point)">
            <summary>
            根据坐标查找选项索引
            </summary>
            <param name="point">相对于控件模拟工作区坐标</param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.HideView">
            <summary>
            隐藏窗体（只隐藏不作任何其他处理）
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.CreateShadowBitmap(System.Int32,System.Int32)">
            <summary>
            创建带阴影边框图片
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.EaseInCore(System.Double,System.Double)">
            <summary>
            EaseIn动画函数
            </summary>
            <param name="progress">进度百分值</param>
            <param name="power">曲线幂</param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.EaseBothCore(System.Double,System.Double)">
            <summary>
            EaseBoth动画函数
            </summary>
            <param name="progress">进度百分值</param>
            <param name="power">曲线幂</param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.HookListenStart">
            <summary>
            开始监听钩子
            </summary>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.HookListenStop">
            <summary>  
            结束监听钩子  
            </summary>  
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.MouseHookProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            利用钩子处理鼠标事件
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.GetMouseHookStructMousePosition(System.IntPtr)">
            <summary>
            获取控件鼠标钩子鼠标坐标(相对于屏幕)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmMouseEnter(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标进入
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmMouseLeave(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标离开
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标释放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标移动
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标滚轮滚动
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmClosed(System.Object,System.EventArgs)">
            <summary>
            下拉列表弹层关闭
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmNCPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制（模仿非工作区）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制（模仿工作区）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DropDownListPlus.DropDownListPlusNativeWindow.WmBorderPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制（边框）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.DropDownListPlus.DropDownListPlusItemInfo">
            <summary>
            DropDownListPlus选项临时信息对象
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusItemInfo.item">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusItemInfo.item_text_size">
            <summary>
            选项文本Size
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusItemInfo.item_rect">
            <summary>
            选项rect
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusItemInfo.item_image_rect">
            <summary>
            选项图片rect
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusItemInfo.item_text_rect">
            <summary>
            选项文本rect
            </summary>
        </member>
        <member name="P:HML.DropDownListPlus.DropDownListPlusItemInfo.item_clearbutton_rect">
            <summary>
            选项删除按钮
            </summary>
        </member>
        <member name="T:HML.DropDownListPlusListItemsStyle">
            <summary>
            DropDownListPlus下拉列表弹层
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.RoundSize">
            <summary>
            圆角Size
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.BackColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ShadowColor">
            <summary>
            四周阴影颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.MaxHeight">
            <summary>
            下拉框最大高度（0为自动计算）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.NullItemsTipText">
            <summary>
            空数据源提示文本
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.NullItemsTipBackColor">
            <summary>
            空数据源提示背景颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.NullItemsTipTextColor">
            <summary>
            空数据源提示文本颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.LocateVisible">
            <summary>
            已选中选项是否显示定位
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.LocateColor">
            <summary>
            已选中选项定位颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemHeight">
            <summary>
            选项高度
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.LRPadding">
            <summary>
            左右内边距
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemSplitterColor">
            <summary>
            选项分隔线颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemBackNormalColor">
            <summary>
            选项背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemTextNormalColor">
            <summary>
            选项文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemBackEnterColor">
            <summary>
            选项背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemTextEnterColor">
            <summary>
            选项文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemBackSelectedColor">
            <summary>
            选项背景颜色（选中）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemTextSelectedColor">
            <summary>
            选项文本颜色（选中）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemBackDisableColor">
            <summary>
            选项背景颜色（禁止）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemTextDisableColor">
            <summary>
            选项文本颜色（禁止）
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemImageVisible">
            <summary>
            是否显示选项图片
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemImageSize">
            <summary>
            选项图片Size
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemImageLRMargin">
            <summary>
            选项图片左右外边距
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ItemImage">
            <summary>
            选项图片
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ScrollThickness">
            <summary>
            滑条厚度
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ScrollSlideMinHeight">
            <summary>
            滑块最小高度
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ScrollBarColor">
            <summary>
            滑条颜色
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusListItemsStyle.ScrollSlideColor">
            <summary>
            滑块颜色
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusListItemsStyle.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusListItemsStyle.InitializeInvalidate">
            <summary>
            重新计算控件刷新控件
            </summary>
        </member>
        <member name="T:HML.DropDownListPlusItem">
            <summary>
            DropDownListPlus选项
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItem.Enabled">
            <summary>
            选项是否启用
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItem.Text">
            <summary>
            选项文本
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItem.Image">
            <summary>
            选项图片
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItem.Tag">
            <summary>
            选项自定义数据
            </summary>
        </member>
        <member name="P:HML.DropDownListPlusItem.Owner">
            <summary>
            选项所属的列表
            </summary>
        </member>
        <member name="M:HML.DropDownListPlusItem.Copy">
            <summary>
            浅度复制
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.DropDownListPlusItemCollection">
             <summary>
            DropDownListPlus选项集合
             </summary>
        </member>
        <member name="T:HML.DropDownListPlusStyles">
            <summary>
            DropDownListPlus风格
            </summary>
        </member>
        <member name="F:HML.DropDownListPlusStyles.None">
            <summary>
            没有
            </summary>
        </member>
        <member name="F:HML.DropDownListPlusStyles.VerticalLine">
            <summary>
            垂直线风格
            </summary>
        </member>
        <member name="F:HML.DropDownListPlusStyles.StraightLine">
            <summary>
            直线风格
            </summary>
        </member>
        <member name="F:HML.DropDownListPlusStyles.GradualLine">
            <summary>
            渐变线风格
            </summary>
        </member>
        <member name="T:HML.DpiHelper">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="M:HML.DpiHelper.GetControlDpi(System.Windows.Forms.Control)">
            <summary>
            获取控件对应的系统缩放比例
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:HML.DpiHelper.GetControlDpi(System.IntPtr)">
            <summary>
            获取控件对应的系统缩放比例
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="T:HML.NativeMethods">
            <summary>
            Win32
            </summary>
        </member>
        <member name="M:HML.NativeMethods.GetWindowRect(System.IntPtr,HML.NativeMethods.RECT@)">
            <summary>
            检索指定窗口的边界矩形的尺寸。 尺寸以相对于屏幕左上角的屏幕坐标提供。
            </summary>
            <param name="hWnd">窗口的句柄</param>
            <param name="rect">指向 RECT 结构的指针，用于接收窗口左上角和右下角的屏幕坐标</param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.SetActiveWindow(System.IntPtr)">
            <summary>
            激活指定窗口
            </summary>
            <param name="hWnd">窗口的句柄</param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.GetWindowDC(System.IntPtr)">
            <summary>
            获得的设备环境覆盖了整个窗口（包括非客户区）
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.GetDC(System.IntPtr)">
            <summary>
            用于获得hWnd参数所指定窗口的客户区域的一个设备环境
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.SetProcessDPIAware">
            <summary>
            DPI的缩放由程序自己处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.HIWORD(System.IntPtr)">
            <summary>
            高16位（无符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.HIWORD(System.Int32)">
            <summary>
            高16位（无符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.LOWORD(System.IntPtr)">
            <summary>
            低16位（无符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.LOWORD(System.Int32)">
            <summary>
            低16位（无符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.SignedHIWORD(System.IntPtr)">
            <summary>
            高16位（有符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.SignedHIWORD(System.Int32)">
            <summary>
            高16位（有符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.SignedLOWORD(System.IntPtr)">
            <summary>
            低16位（有符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.SignedLOWORD(System.Int32)">
            <summary>
            低16位（有符号）
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.StructToIntPtr``1(``0)">
            <summary>
            结构转指针
            </summary>
            <typeparam name="T">结构类型</typeparam>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:HML.NativeMethods.IntPtrToStruct``1(System.IntPtr)">
            <summary>
            指针转结构
            </summary>
            <typeparam name="T">结构类型</typeparam>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:HML.AngleLabel">
            <summary>
            角度文本控件
            </summary>
        </member>
        <member name="E:HML.AngleLabel.AngleChanged">
            <summary>
            Angle值更改事件
            </summary>
        </member>
        <member name="P:HML.AngleLabel.Angle">
            <summary>
            文本旋转角度
            </summary>
        </member>
        <member name="P:HML.AngleLabel.TextAntiAlias">
            <summary>
            文本呈现的质量
            </summary>
        </member>
        <member name="F:HML.AngleLabel.rotateing">
            <summary>
            是否正在旋转计算中
            </summary>
        </member>
        <member name="F:HML.AngleLabel.controlTextSize">
            <summary>
            控件文本Size
            </summary>
        </member>
        <member name="F:HML.AngleLabel.controlSize">
            <summary>
            控件Size
            </summary>
        </member>
        <member name="M:HML.AngleLabel.GetControlTextSize">
            <summary>
            根据设置计算文本Size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.AngleLabel.UpdateAutoSize">
            <summary>
            根据设置更新控件大小
            </summary>
        </member>
        <member name="T:HML.IDpiControl">
            <summary>
            缩放控件接口
            </summary>
        </member>
        <member name="P:HML.IDpiControl.ScaleDpi">
            <summary>
            Dpi
            </summary>
        </member>
        <member name="T:HML.CommandButtonTextAlignment">
            <summary>
            CommandButton文本对齐方式
            </summary>
        </member>
        <member name="F:HML.CommandButtonTextAlignment.Left">
            <summary>
            左边对齐
            </summary>
        </member>
        <member name="F:HML.CommandButtonTextAlignment.Center">
            <summary>
            中间对齐
            </summary>
        </member>
        <member name="F:HML.CommandButtonTextAlignment.Right">
            <summary>
            右边对齐
            </summary>
        </member>
        <member name="T:HML.CommandButtonCommand">
            <summary>
            CommandButton命令
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Command">
            <summary>
            按钮命令（必须唯一，可用于索引）
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Text">
            <summary>
            按钮文本
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Enabled">
            <summary>
            按钮启用状态
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Visible">
            <summary>
            按钮是否显示
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Tag">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Owner">
            <summary>
            选项所属的控件
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Rect">
            <summary>
            按钮rect
            </summary>
        </member>
        <member name="P:HML.CommandButtonCommand.Text_Size">
            <summary>
            文本Size
            </summary>
        </member>
        <member name="M:HML.CommandButtonCommand.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.CommandButtonCommand.InitializeInvalidate">
            <summary>
            控件重新初始化和重绘
            </summary>
        </member>
        <member name="M:HML.CommandButtonCommand.Copy">
            <summary>
            复制选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.CommandButtonCommandCollection">
            <summary>
            CommandButton命令集合
            </summary>
        </member>
        <member name="T:HML.CommandButtonSelectingEventArgs">
            <summary>
            CommandButton命令选中更改中事件参数
            </summary>
        </member>
        <member name="P:HML.CommandButtonSelectingEventArgs.DeSelectCommand">
            <summary>
            将要取消选中的按钮选项
            </summary>
        </member>
        <member name="P:HML.CommandButtonSelectingEventArgs.SelectCommand">
            <summary>
            将要选中的按钮选项
            </summary>
        </member>
        <member name="M:HML.CommandButtonSelectingEventArgs.#ctor(HML.CommandButtonCommand,HML.CommandButtonCommand)">
            <summary>
            
            </summary>
            <param name="deSelectCommand">将要取消选中的按钮选项</param>
            <param name="selectCommand">将要选中的按钮选项</param>
        </member>
        <member name="T:HML.ImageCropperDragType">
            <summary>
            ImageCropper拖放类型
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.None">
            <summary>
            没有操作
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.LeftTop">
            <summary>
            左上角拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.RightTop">
            <summary>
            右上角拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.RightBottom">
            <summary>
            右下角拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.LeftBottom">
            <summary>
            左下角拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.Top">
            <summary>
            顶部拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.Right">
            <summary>
            右边拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.Bottom">
            <summary>
            底部拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.Left">
            <summary>
            左边拉伸
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.CropperMove">
            <summary>
            剪切区移动
            </summary>
        </member>
        <member name="F:HML.ImageCropperDragType.SourceMove">
            <summary>
            图源移动
            </summary>
        </member>
        <member name="T:HML.ImageCropperCropShape">
            <summary>
            ImageCropper剪切的形状
            </summary>
        </member>
        <member name="F:HML.ImageCropperCropShape.Rectangular">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:HML.ImageCropperCropShape.Circular">
            <summary>
            圆形
            </summary>
        </member>
        <member name="T:HML.ImageCropper">
            <summary>
            图片裁剪控件
            </summary>
        </member>
        <member name="E:HML.ImageCropper.CropperRectangleChanged">
            <summary>
            剪切区域Rectangle更改事件
            </summary>
        </member>
        <member name="P:HML.ImageCropper.GripVisible">
            <summary>
            是否显示透明背景网格
            </summary>
        </member>
        <member name="P:HML.ImageCropper.GripSize">
            <summary>
            透明背景网格Size
            </summary>
        </member>
        <member name="P:HML.ImageCropper.CropperShape">
            <summary>
            剪切的形状
            </summary>
        </member>
        <member name="P:HML.ImageCropper.CropperRatio">
            <summary>
             剪切的形状比例（宽:高 null为任意尺寸）
            </summary>
        </member>
        <member name="F:HML.ImageCropper.thumbSize">
            <summary>
            剪切区域拇指Size
            </summary>
        </member>
        <member name="P:HML.ImageCropper.ThumbSize">
            <summary>
             剪切区域拇指Size
            </summary>
        </member>
        <member name="P:HML.ImageCropper.ThumbBorderColor">
            <summary>
            剪切区域拇指边框颜色
            </summary>
        </member>
        <member name="P:HML.ImageCropper.ThumbBackColor">
            <summary>
            剪切区域拇指背景颜色
            </summary>
        </member>
        <member name="P:HML.ImageCropper.MaskingColor">
            <summary>
            蒙层颜色
            </summary>
        </member>
        <member name="P:HML.ImageCropper.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:HML.ImageCropper.ImageScaleRatio">
            <summary>
            图片缩放比例(1-100)
            </summary>
        </member>
        <member name="F:HML.ImageCropper.content_rect">
            <summary>
            内容区rect
            </summary>
        </member>
        <member name="F:HML.ImageCropper.cropper_rect">
            <summary>
            剪切区rect
            </summary>
        </member>
        <member name="F:HML.ImageCropper.image_rect">
            <summary>
            图片区rect
            </summary>
        </member>
        <member name="F:HML.ImageCropper.cropper_path">
            <summary>
            剪切区path
            </summary>
        </member>
        <member name="F:HML.ImageCropper.cropper_thumbs">
            <summary>
            剪切区拇指信息集合
            </summary>
        </member>
        <member name="F:HML.ImageCropper.mousedownobject">
            <summary>
            鼠标已按下对象
            </summary>
        </member>
        <member name="F:HML.ImageCropper.mousedownobjectrect">
            <summary>
            鼠标按下时对象rect
            </summary>
        </member>
        <member name="F:HML.ImageCropper.mousedownpoint">
            <summary>
            鼠标按下坐标
            </summary>
        </member>
        <member name="F:HML.ImageCropper.gripimage_tmp">
            <summary>
            网格图片缓存
            </summary>
        </member>
        <member name="F:HML.ImageCropper.image_tmp">
            <summary>
            图片缓存
            </summary>
        </member>
        <member name="M:HML.ImageCropper.ResetControl">
            <summary>
            重置信息
            </summary>
        </member>
        <member name="M:HML.ImageCropper.CropperSourceImage(System.Boolean)">
            <summary>
            剪切当前选中区域图片
            </summary>
            <param name="scaleCropper">是否按缩放后大小进行剪切</param>
            <returns></returns>
        </member>
        <member name="M:HML.ImageCropper.GetCropperScaleRectangle">
            <summary>
            获取缩放状态剪切区域Rectangle
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ImageCropper.InitializeRectangle">
            <summary>
            初始化rect
            </summary>
        </member>
        <member name="M:HML.ImageCropper.InitializeContentDefaultRectangle">
            <summary>
            初始化内容区默认rect
            </summary>
        </member>
        <member name="M:HML.ImageCropper.InitializeImageDefaultRectangle">
            <summary>
            初始化图片区域为默认rect
            </summary>
        </member>
        <member name="M:HML.ImageCropper.UpdateCropperRectangle(System.Drawing.Rectangle)">
            <summary>
            更新剪切区rect
            </summary>
            <param name="_cropper_rect">剪切区rect</param>
        </member>
        <member name="M:HML.ImageCropper.GetCropperThumbRadius">
            <summary>
            获取剪切区拇指半径
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ImageCropper.GetCropperDefaultRectangle">
            <summary>
            获取剪切区默认rect
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ImageCropper.ConvertRectangle(System.Drawing.Rectangle)">
            <summary>
            把缩放rect转换成真实rect
            </summary>
            <param name="scaleRect">缩放rect</param>
            <returns></returns>
        </member>
        <member name="M:HML.ImageCropper.UpdateImageTmp">
            <summary>
            更新图片缓存
            </summary>
        </member>
        <member name="M:HML.ImageCropper.UpdateGripImageTmp">
            <summary>
            更新背景网格图片缓存
            </summary>
        </member>
        <member name="T:HML.ImageSlideLegendsBar">
            <summary>
            ImageSlide图例栏
            </summary>
        </member>
        <member name="P:HML.ImageSlideLegendsBar.Visible">
             <summary>
            是否显示图例栏
             </summary>
        </member>
        <member name="P:HML.ImageSlideLegendsBar.Size">
             <summary>
            图例Size
             </summary>
        </member>
        <member name="P:HML.ImageSlideLegendsBar.BorderColor">
            <summary>
            图例边框颜色
            </summary>
        </member>
        <member name="P:HML.ImageSlideLegendsBar.BackNormalColor">
             <summary>
            图例背景颜色（正常）
             </summary>
        </member>
        <member name="P:HML.ImageSlideLegendsBar.BackIndexColor">
             <summary>
            图例背景颜色（当前索引）
             </summary>
        </member>
        <member name="M:HML.ImageSlideLegendsBar.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="T:HML.LineProgressValueAlignments">
            <summary>
            LineProgress值文本对齐方式
            </summary>
        </member>
        <member name="F:HML.LineProgressValueAlignments.Left">
            <summary>
            靠左边
            </summary>
        </member>
        <member name="F:HML.LineProgressValueAlignments.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:HML.LineProgressValueAlignments.Right">
            <summary>
            靠右边
            </summary>
        </member>
        <member name="F:HML.LineProgressValueAlignments.Auto">
            <summary>
            跟随Vallue值
            </summary>
        </member>
        <member name="T:HML.CommandButton">
            <summary>
            命令组按钮控件
            </summary>
        </member>
        <member name="E:HML.CommandButton.Selecting">
            <summary>
            选中命令更改中事件
            </summary>
        </member>
        <member name="E:HML.CommandButton.Selected">
            <summary>
            选中命令更改后事件
            </summary>
        </member>
        <member name="P:HML.CommandButton.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.CommandButton.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.CommandButton.RoundEnabled">
            <summary>
            是否启用圆角
            </summary>
        </member>
        <member name="P:HML.CommandButton.DeSelectEnabled">
            <summary>
            是否允许鼠标键盘取消当前选中的命令
            </summary>
        </member>
        <member name="P:HML.CommandButton.Commands">
            <summary>
            命令集合
            </summary>
        </member>
        <member name="P:HML.CommandButton.SelectedCommand">
            <summary>
            已选中命令
            </summary>
        </member>
        <member name="P:HML.CommandButton.AutoWidth">
            <summary>
            命令自动宽度模式
            </summary>
        </member>
        <member name="P:HML.CommandButton.AutoWidthMin">
            <summary>
            命令最小宽度(自动宽度模式下)
            </summary>
        </member>
        <member name="P:HML.CommandButton.FixedWidth">
            <summary>
            命令固定宽度
            </summary>
        </member>
        <member name="P:HML.CommandButton.TextMargin">
            <summary>
            命令文本外边距
            </summary>
        </member>
        <member name="P:HML.CommandButton.TextAlignment">
            <summary>
            命令文本对齐方式
            </summary>
        </member>
        <member name="P:HML.CommandButton.BackUnCheckedNormalColor">
            <summary>
            命令背景颜色(未选中、正常)
            </summary>
        </member>
        <member name="P:HML.CommandButton.TextUnCheckedNormalColor">
            <summary>
            命令文本颜色(未选中、正常)
            </summary>
        </member>
        <member name="P:HML.CommandButton.BackUnCheckedEnterColor">
            <summary>
            命令背景颜色(未选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.CommandButton.TextUncheckedEnterColor">
            <summary>
            命令文本颜色(未选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.CommandButton.BackCheckedNormalColor">
            <summary>
            命令背景颜色(已选中、正常)
            </summary>
        </member>
        <member name="P:HML.CommandButton.TextCheckedNormalColor">
            <summary>
            命令文本颜色(已选中、正常)
            </summary>
        </member>
        <member name="P:HML.CommandButton.BackCheckedEnterColor">
            <summary>
            命令背景颜色(已选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.CommandButton.TextCheckedEnterColor">
            <summary>
            命令文本颜色(已选中、鼠标进入)
            </summary>
        </member>
        <member name="F:HML.CommandButton.activatedState">
            <summary>
            控件激活显示状态（配合Focused 、ShowFocusCues、activatedIndex使用）
            </summary>
        </member>
        <member name="F:HML.CommandButton.activatedIndex">
            <summary>
            控件激活状态选项索引
            </summary>
        </member>
        <member name="F:HML.CommandButton.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.CommandButton.mouseenterobject">
            <summary>
            当前鼠标已进入的对象
            </summary>
        </member>
        <member name="F:HML.CommandButton.animationrect">
            <summary>
            动画rect
            </summary>
        </member>
        <member name="F:HML.CommandButton.animationpoint">
            <summary>
            动画坐标
            </summary>
        </member>
        <member name="F:HML.CommandButton.allAnimationTimeTime">
            <summary>
            动画总时间
            </summary>
        </member>
        <member name="F:HML.CommandButton.usedAnimationTimeTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="F:HML.CommandButton.borderThicknes">
            <summary>
            边框
            </summary>
        </member>
        <member name="M:HML.CommandButton.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.CommandButton.UpdateCommand(HML.CommandButtonCommand)">
            <summary>
            更新选中命令（不会触发 Selecting、Selected 事件）
            </summary>
            <param name="command">要选中命令</param>
        </member>
        <member name="M:HML.CommandButton.InitializeRectangle">
            <summary>
            初始化控件Rectangle
            </summary>
        </member>
        <member name="M:HML.CommandButton.UpdateItemsTextSize">
            <summary>
            更新选项文本Size
            </summary>
        </member>
        <member name="M:HML.CommandButton.UpdateItemsRectangle">
            <summary>
            更新选项Rectangle
            </summary>
        </member>
        <member name="M:HML.CommandButton.GetControlAutoSize">
            <summary>
            根据设置获取控件Size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.CommandButton.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="M:HML.CommandButton.UISelectCommand(HML.CommandButtonCommand)">
            <summary>
            鼠标键盘设置选中命令
            </summary>
            <param name="command">将要选中命令</param>
        </member>
        <member name="M:HML.CommandButton.GetActivatedIndexList">
            <summary>
            获取允许激活命令索引集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.ToggleButton">
            <summary>
            开关按钮控件
            </summary>
        </member>
        <member name="E:HML.ToggleButton.CheckedChanged">
            <summary>
            开关状态更改事件
            </summary>
        </member>
        <member name="P:HML.ToggleButton.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.ToggleButton.RoundEnabled">
            <summary>
            是否启用圆角
            </summary>
        </member>
        <member name="P:HML.ToggleButton.AutoCheck">
            <summary>
            单击时是否自动更改控件状态
            </summary>
        </member>
        <member name="P:HML.ToggleButton.Checked">
            <summary>
            开关状态
            </summary>
        </member>
        <member name="P:HML.ToggleButton.BorderUnCheckedColor">
            <summary>
            边框颜色(未选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.BorderCheckedColor">
            <summary>
            边框颜色(已选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.BackUnCheckedNormalColor">
            <summary>
            背景颜色(未选中、正常)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.TextUnCheckedNormalColor">
            <summary>
            文本颜色(未选中、正常)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.BackUnCheckedEnterColor">
            <summary>
            背景颜色(未选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.TextUncheckedEnterColor">
            <summary>
            文本颜色(未选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.BackCheckedNormalColor">
            <summary>
            背景颜色(已选中、正常)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.TextCheckedNormalColor">
            <summary>
            文本颜色(已选中、正常)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.BackCheckedEnterColor">
            <summary>
            背景颜色(已选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.TextCheckedEnterColor">
            <summary>
            文本颜色(已选中、鼠标进入)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.TextAlign">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoVisible">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoAlign">
            <summary>
            图标对齐方式
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoSize">
            <summary>
            图标Size
            </summary>
        </member>
        <member name="P:HML.ToggleButton.ImageList">
            <summary>
            获取在控件上显示的图像的ImageList
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoUnChecked">
            <summary>
            图标 (未选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoUnCheckedIndex">
            <summary>
            图标Index (未选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoUnCheckedKey">
            <summary>
            图标Key (未选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoChecked">
            <summary>
            图标 (已选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoCheckedIndex">
            <summary>
            图标Index (已选中)
            </summary>
        </member>
        <member name="P:HML.ToggleButton.IcoCheckedKey">
            <summary>
            图标Key (已选中)
            </summary>
        </member>
        <member name="F:HML.ToggleButton.mousedowntype">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.ToggleButton.mouseenterobject">
            <summary>
            鼠标已进入对象
            </summary>
        </member>
        <member name="F:HML.ToggleButton.animationing">
            <summary>
            鼠标单击动画是否进行中
            </summary>
        </member>
        <member name="F:HML.ToggleButton.animationAllTime">
            <summary>
            鼠标单击动画动画总时间
            </summary>
        </member>
        <member name="F:HML.ToggleButton.animationUsedTime">
            <summary>
            鼠标单击动画已使用时间
            </summary>
        </member>
        <member name="F:HML.ToggleButton.animationpoint">
            <summary>
            鼠标单击动画圆心坐标
            </summary>
        </member>
        <member name="M:HML.ToggleButton.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.ToggleButton.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="M:HML.ToggleButton.RecreateImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList更改后刷新控件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.ToggleButton.DetachImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList释放时解绑清除清除引用
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.TextSlide">
            <summary>
            文本滚动控件
            </summary>
        </member>
        <member name="P:HML.TextSlide.BorderVisible">
             <summary>
            是否显示边框
             </summary>
        </member>
        <member name="P:HML.TextSlide.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.TextSlide.TextOrientation">
             <summary>
            文本滚动方向
             </summary>
        </member>
        <member name="P:HML.TextSlide.IntervalTime">
            <summary>
            触发动画单位时间(单位毫秒>=10)
            </summary>
        </member>
        <member name="P:HML.TextSlide.TextVelocity">
            <summary>
            文本移动速度(动画单位时间内移动像素)
            </summary>
        </member>
        <member name="F:HML.TextSlide.text_size">
            <summary>
            文本size
            </summary>
        </member>
        <member name="F:HML.TextSlide.text_distance">
            <summary>
            文本偏移量
            </summary>
        </member>
        <member name="F:HML.TextSlide.usedTime">
            <summary>
            动画累加时间
            </summary>
        </member>
        <member name="M:HML.TextSlide.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.TextSlide.GetControlTextSize">
            <summary>
            根据设置计算文本Size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TextSlide.ResetDistance">
            <summary>
            复位文本偏移量
            </summary>
        </member>
        <member name="T:HML.TextSlideOrientation">
            <summary>
            TextSlide文本滚动方向
            </summary>
        </member>
        <member name="F:HML.TextSlideOrientation.LeftToRight">
            <summary>
            从左往右
            </summary>
        </member>
        <member name="F:HML.TextSlideOrientation.RightToLeft">
            <summary>
            从右往左
            </summary>
        </member>
        <member name="T:HML.DpiContainerControl">
            <summary>
            缩放容器控件基类
            </summary>
        </member>
        <member name="P:HML.DpiContainerControl.ScaleDpi">
            <summary>
            控件当前缩放Dpi
            </summary>
        </member>
        <member name="M:HML.DpiContainerControl.OnScaleDpiChangedInitialize">
            <summary>
            控件DPI更改后重新初始化控件Rectangle信息
            </summary>
        </member>
        <member name="T:HML.DpiForm">
            <summary>
            缩放窗体基类
            </summary>
        </member>
        <member name="P:HML.DpiForm.ScaleDpi">
            <summary>
            控件当前缩放Dpi
            </summary>
        </member>
        <member name="M:HML.DpiForm.OnScaleDpiChangedInitialize">
            <summary>
            控件DPI更改后重新初始化控件Rectangle信息
            </summary>
        </member>
        <member name="T:HML.DpiControl">
            <summary>
            缩放控件基类
            </summary>
        </member>
        <member name="P:HML.DpiControl.ScaleDpi">
            <summary>
            控件当前缩放Dpi
            </summary>
        </member>
        <member name="M:HML.DpiControl.OnScaleDpiChangedInitialize">
            <summary>
            控件DPI更改后重新初始化控件Rectangle信息
            </summary>
        </member>
        <member name="T:HML.MainThreadAnimationControl">
            <summary>
            主线程动画控件基类，不能时耗时操作，该定时器时UI线程计时器。耗时长对导致画面卡顿。
            </summary>
        </member>
        <member name="F:HML.MainThreadAnimationControl.animationcontrols_lock">
            <summary>
            动画控件集合锁
            </summary>
        </member>
        <member name="F:HML.MainThreadAnimationControl.animationcontrols">
            <summary>
            动画控件集合
            </summary>
        </member>
        <member name="F:HML.MainThreadAnimationControl.timer_lock">
            <summary>
            动画定时器锁
            </summary>
        </member>
        <member name="F:HML.MainThreadAnimationControl.timer">
            <summary>
            定时器间隔
            </summary>
        </member>
        <member name="M:HML.MainThreadAnimationControl.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作，该定时器为UI线程计时器。耗时长对导致画面卡顿)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.MainThreadAnimationControl.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            定时器事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.MainThreadAnimationControl.AnimationStart(HML.MainThreadAnimationControl)">
            <summary>
            开始指定控件动画
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:HML.MainThreadAnimationControl.AnimationStop(HML.MainThreadAnimationControl)">
            <summary>
            停止指定控件动画
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:HML.AnnulusProgress">
            <summary>
            圆环进度控件
            </summary>
        </member>
        <member name="E:HML.AnnulusProgress.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.ThicknessProportion">
            <summary>
            进度条圆环厚度百分比（相对于控件宽度）
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.StartAngle">
            <summary>
            开始角度
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.TotalBackColor">
            <summary>
            进度条颜色
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.ValueBackColor">
            <summary>
            进度条当前值颜色
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.Value">
            <summary>
            进度值(0-100)
            </summary>
        </member>
        <member name="P:HML.AnnulusProgress.ValueVisible">
            <summary>
            是否显示进度值文本
            </summary>
        </member>
        <member name="F:HML.AnnulusProgress.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.AnnulusProgress.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.AnnulusProgress.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.AnnulusProgress.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="F:HML.AnnulusProgress.contentPadding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="M:HML.AnnulusProgress.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="T:HML.AnomalyButton">
            <summary>
            不规则形状按钮
            </summary>
        </member>
        <member name="E:HML.AnomalyButton.CheckedChanged">
            <summary>
            控件Checked状态更改事件
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.Style">
            <summary>
            自定义形状路径显示风格
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BorderThickness">
            <summary>
            边框厚度
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.CheckButton">
            <summary>
            是否为开启checkButton功能
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.AutoCheck">
            <summary>
            单击时是否自动更改控件状态
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.Checked">
            <summary>
            控件是否选中
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapeItems">
            <summary>
            自定义形状坐标集合（不包含系统缩放比例）,  格式： {x,y}{x,y}....{x,y}
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextLocation">
            <summary>
            文本坐标位置
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BackUnCheckedNormalColor">
            <summary>
            背景颜色(未选中状态正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextUnCheckedNormalColor">
            <summary>
            文本颜色(未选中状态正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BackUnCheckedEnterColor">
            <summary>
            背景颜色(未选中状态鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextUnCheckedEnterColor">
            <summary>
            文本颜色(未选中状态态鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BackUnCheckedDownColor">
            <summary>
            背景颜色(未选中状态鼠标按下)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextUnCheckedDownColor">
            <summary>
            文本颜色(未选中状态鼠标按下)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BackCheckedNormalColor">
            <summary>
            背景颜色(已选中状态正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextCheckedNormalColor">
            <summary>
            文本颜色(已选中状态正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BackCheckedEnterColor">
            <summary>
            背景颜色(已选中状态鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextCheckedEnterColor">
            <summary>
            文本颜色(已选中状态鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.BackCheckedDownColor">
            <summary>
            背景颜色(已选中状态鼠标按下)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.TextCheckedDownColor">
            <summary>
            文本颜色(已选中状态鼠标按下)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualEnabled">
            <summary>
            是否启用焦点渐变
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualLocation">
            <summary>
            焦点渐变坐标位置
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualRadius">
            <summary>
            焦点渐变半径
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualUnCheckedNormalColor">
            <summary>
            焦点渐变颜色(未选中状态正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualUnCheckedEnterColor">
            <summary>
            焦点渐变颜色(未选中状态鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualUnCheckedDownColor">
            <summary>
            焦点渐变颜色(未选中状态鼠标按下)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualCheckedNormalColor">
            <summary>
            焦点渐变颜色(已选中状态正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualCheckedEnterColor">
            <summary>
            焦点渐变颜色(已选中状态鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.FocusGradualCheckedDownColor">
            <summary>
            焦点渐变颜色(已选中状态鼠标按下)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapeEditorEnabled">
            <summary>
            启用自定义形状编辑功能
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapeLocationAnchor">
            <summary>
            自定义形状布局整体调整： 1.单击 四周按钮停靠路径位置。 2. 拖动 中间按钮修改路径位置。
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapePathLineColor">
            <summary>
            自定义形状编辑路径颜色
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapePathPointRadius">
            <summary>
            自定义形状编辑点半径
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapePathPointNormalColor">
            <summary>
            自定义形状编辑点背景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapePathPointEnterColor">
            <summary>
            自定义形状编辑点背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapePathPointTipEnable">
            <summary>
            启用自定义形状编辑点提示
            </summary>
        </member>
        <member name="P:HML.AnomalyButton.ShapePathPointTipColor">
            <summary>
            自定义形状编辑路径文本颜色
            </summary>
        </member>
        <member name="F:HML.AnomalyButton.mousedowntype">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.AnomalyButton.mouseenterobject">
            <summary>
            鼠标已进入对象
            </summary>
        </member>
        <member name="M:HML.AnomalyButton.UnScaleStrConvertToScaleArr(System.String,System.Single)">
            <summary>
            [不包含系统缩放比例坐标字符串] 转换成 [包含系统缩放比例坐标对象]
            </summary>
            <param name="unScaleStr">不包含系统缩放比例坐标字符串</param>
            <param name="dpi">缩放比例</param>
            <returns>包含系统缩放比例坐标对象</returns>
        </member>
        <member name="M:HML.AnomalyButton.UnScaleStrConvertToUnScaleArr(System.String)">
            <summary>
            [不包含系统缩放比例坐标字符串] 转换成 [不包含系统缩放比例坐标对象]
            </summary>
            <param name="unScaleStr">不包含系统缩放比例坐标字符串</param>
            <returns>不包含系统缩放比例坐标对象</returns>
        </member>
        <member name="M:HML.AnomalyButton.ScaleArrConvertToUnScaleStr(System.Drawing.PointF[],System.Single)">
            <summary>
            [包含系统缩放比例坐标对象] 转换成 [不包含系统缩放比例坐标字符串]
            </summary>
            <param name="scaleArr">包含系统缩放比例坐标对象</param>
            <param name="dpi">缩放比例</param>
            <returns>包含系统缩放比例坐标字符串</returns>
        </member>
        <member name="M:HML.AnomalyButton.UnScaleArrConvertToUnScaleStr(System.Drawing.PointF[])">
            <summary>
            [不包含系统缩放比例坐标对象] 转换成 [不包含系统缩放比例坐标字符串]
            </summary>
            <param name="unScaleArr">不包含系统缩放比例坐标对象</param>
            <returns>不包含系统缩放比例坐标字符串</returns>
        </member>
        <member name="M:HML.AnomalyButton.InitializeRectangle">
            <summary>
            初始化控件Rectangle
            </summary>
        </member>
        <member name="T:HML.AnomalyButtonStyles">
            <summary>
            AnomalyButton路径显示风格
            </summary>
        </member>
        <member name="F:HML.AnomalyButtonStyles.Straight">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:HML.AnomalyButtonStyles.Bezier">
            <summary>
            贝塞尔
            </summary>
        </member>
        <member name="T:HML.ArcProgress">
            <summary>
            圆弧进度控件
            </summary>
        </member>
        <member name="E:HML.ArcProgress.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.ArcProgress.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.ArcProgress.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.ArcProgress.ThicknessProportion">
            <summary>
            进度条圆弧厚度百分比（相对于控件宽度）
            </summary>
        </member>
        <member name="P:HML.ArcProgress.ArcAngleSize">
            <summary>
            进度条弧度大小
            </summary>
        </member>
        <member name="P:HML.ArcProgress.TotalBackColor">
            <summary>
            进度条颜色
            </summary>
        </member>
        <member name="P:HML.ArcProgress.ValueBackColor">
            <summary>
            进度条当前值颜色
            </summary>
        </member>
        <member name="P:HML.ArcProgress.Value">
            <summary>
            进度值(0-100)
            </summary>
        </member>
        <member name="P:HML.ArcProgress.ValueVisible">
            <summary>
            是否显示进度值文本
            </summary>
        </member>
        <member name="F:HML.ArcProgress.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.ArcProgress.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.ArcProgress.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.ArcProgress.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="F:HML.ArcProgress.contentPadding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="M:HML.ArcProgress.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.ArcProgress.GetControlAutoHeight">
            <summary>
            根据字体计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ArcProgress.UpdateAutoControlSize(System.Boolean)">
            <summary>
            自动根据设置更新控件Size
            </summary>
            <param name="isInvalidate">是否刷新控件</param>
            <returns></returns>
        </member>
        <member name="T:HML.CheckBoxPlus">
            <summary>
            复选框控件
            </summary>
        </member>
        <member name="E:HML.CheckBoxPlus.CheckedChanged">
            <summary>
            控件Checked状态更改事件
            </summary>
        </member>
        <member name="E:HML.CheckBoxPlus.CheckStateChanged">
            <summary>
            控件CheckState状态更改事件
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.Appearance">
            <summary>
            显示风格 是按正常Check复选框风格显示，还是按Button按钮风格显示
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ThreeState">
            <summary>
            控件是否为三种选择状态（否则为两种选择状态）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.AutoCheck">
            <summary>
            单击时是否自动更改控件状态
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.Checked">
            <summary>
            是否已选中
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckState">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckAreaScope">
            <summary>
            在Check显示风格下鼠标操作有效范围 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckAlignment">
            <summary>
            在Check显示风格下复选框的对齐方式 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckSize">
            <summary>
            复选框大小 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckTextSpace">
            <summary>
            复选框与文本的间距 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckBorderColor">
            <summary>
            复选框边框颜色 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckBackUnCheckedColor">
            <summary>
            复选框背景色（未选中） 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckForeUnCheckedColor">
            <summary>
            复选框前景色（未选中） 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckBackIndeterminateColor">
            <summary>
            复选框背景色（部分选中）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckForeIndeterminateColor">
            <summary>
            复选框前景色（部分选中）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckBackCheckedColor">
            <summary>
            复选框背景色（已选中）  
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckForeCheckedColor">
            <summary>
            复选框前景色（已选中） 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckStyle">
            <summary>
            在Check显示风格下复选框的风格 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ImageList">
            <summary>
            获取在控件上显示的图像的ImageList
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageUnChecked">
            <summary>
            未选中状态复选框图片 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageUnCheckedIndex">
            <summary>
            未选中状态复选框图片Index 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageUnCheckedKey">
            <summary>
            未选中状态复选框图片Key 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageIndeterminate">
            <summary>
            部分选中状态复选框图片 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageIndeterminateIndex">
            <summary>
            部分中状态复选框图片Index 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageIndeterminateKey">
            <summary>
            部分中状态复选框图片Key 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageChecked">
            <summary>
            已选中状态复选框图片 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageCheckedIndex">
            <summary>
            已选中状态复选框图片Index 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.CheckImageCheckedKey">
            <summary>
            已选中状态复选框图片Key 
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBorderVisible">
            <summary>
            是否显示边框
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBackUnCheckedNormalColor">
            <summary>
            背景颜色（未选中、正常）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonTextUnCheckedNormalColor">
            <summary>
            文本颜色（未选中、正常）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBackUnCheckedEnterColor">
            <summary>
            背景颜色（未选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonTextUnCheckedEnterColor">
            <summary>
            文本颜色（未选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBackIndeterminateNormalColor">
            <summary>
            背景颜色（部分选中、正常）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonTextIndeterminateNormalColor">
            <summary>
            文本颜色（部分选中、正常）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBackIndeterminateEnterColor">
            <summary>
            背景颜色（部分选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonTextIndeterminateEnterColor">
            <summary>
            文本颜色（部分选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBackCheckedNormalColor">
            <summary>
            背景颜色（已选中、正常）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonTextCheckedNormalColor">
            <summary>
            文本颜色（已选中、正常）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonBackCheckedEnterColor">
            <summary>
            背景颜色（已选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ButtonTextCheckedEnterColor">
            <summary>
            文本颜色（已选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.AutoSize">
            <summary>
            否根据内容自动调整控件的大小。
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.Padding">
            <summary>
            内边距限于AutoSize
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.BackColor">
            <summary>
            在Check显示风格下背景颜色
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.ForeColor">
            <summary>
            在Check显示风格下文本颜色
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.Font">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="P:HML.CheckBoxPlus.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.mousedowntype">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.mouseenterobject">
            <summary>
            鼠标已进入对象
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.check_rect">
            <summary>
            复选框rect
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.text_rect">
            <summary>
            文本rect
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.requestedWidth">
            <summary>
            控件要求Width
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.requestedHeight">
            <summary>
            控件要求Height
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlus.autoing">
            <summary>
            AutoSize切换中
            </summary>
        </member>
        <member name="M:HML.CheckBoxPlus.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.CheckBoxPlus.AdjustSize">
            <summary>
            更新控件size
            </summary>
        </member>
        <member name="M:HML.CheckBoxPlus.GetTextSize">
            <summary>
            获取文本size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.CheckBoxPlus.IsInArea(System.Drawing.Point)">
            <summary>
            指定坐标是否在控件有效范围内
            </summary>
            <param name="point">指定坐标</param>
            <returns></returns>
        </member>
        <member name="M:HML.CheckBoxPlus.SetState">
            <summary>
            设置控件状态
            </summary>
        </member>
        <member name="M:HML.CheckBoxPlus.RecreateImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList更改后刷新控件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.CheckBoxPlus.DetachImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList释放时解绑清除清除引用
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.CheckBoxPlusAppearance">
            <summary>
            CheckBoxPlus控件显示方式
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusAppearance.Check">
            <summary>
            按正常Check复选框方式显示
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusAppearance.Button">
            <summary>
            按Button按钮方式显示
            </summary>
        </member>
        <member name="T:HML.CheckBoxPlusCheckAlignments">
            <summary>
            CheckBoxPlus在Check显示方式下复选框的对齐方式
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAlignments.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAlignments.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAlignments.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAlignments.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAlignments.Center">
            <summary>
            中间
            </summary>
        </member>
        <member name="T:HML.CheckBoxPlusCheckAreaScope">
            <summary>
            CheckBoxPlus在Check显示方式下鼠标操作有效范围
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAreaScope.Default">
            <summary>
            鼠标在整个控件区域内操作有效
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAreaScope.Check">
            <summary>
            鼠标只在复选框内操作有效
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckAreaScope.CheckText">
            <summary>
            鼠标只在复选框和文本内操作有效
            </summary>
        </member>
        <member name="T:HML.CheckBoxPlusCheckStyles">
            <summary>
            CheckBoxPlus在Check显示方式下复选框的风格
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckStyles.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:HML.CheckBoxPlusCheckStyles.Image">
            <summary>
            自定义图片
            </summary>
        </member>
        <member name="T:HML.DateInput">
            <summary>
            日期输入框控件
            </summary>
        </member>
        <member name="P:HML.DateInput.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.DateInput.DatePadding">
            <summary>
            边框与内容内的距离
            </summary>
        </member>
        <member name="P:HML.DateInput.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HML.DateInput.DateOperateMode">
            <summary>
            日期操作模式
            </summary>
        </member>
        <member name="P:HML.DateInput.ClearButtonVisible">
            <summary>
            是否显示清除按钮
            </summary>
        </member>
        <member name="P:HML.DateInput.ClearButtonAlignment">
            <summary>
            清除按钮对齐方式（相对于DateImage）
            </summary>
        </member>
        <member name="P:HML.DateInput.ClearButtonColor">
            <summary>
            清除按钮前景色
            </summary>
        </member>
        <member name="P:HML.DateInput.DateImage">
            <summary>
            日期图片
            </summary>
        </member>
        <member name="P:HML.DateInput.DateImageAlignment">
            <summary>
            日期图片对齐方式
            </summary>
        </member>
        <member name="P:HML.DateInput.DateNullTipText">
            <summary>
            日期空值提示文本
            </summary>
        </member>
        <member name="P:HML.DateInput.DateNullTipTextForeColor">
            <summary>
            日期空值提示文本颜色
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextAlignment">
            <summary>
            日期文本对齐方式
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextNormalForeColor">
            <summary>
            日期文本颜色(正常)
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextHighlightBackColor">
            <summary>
            日期文本背景颜色（高亮）（空值采用系统默认配置）
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextHighlightForeColor">
            <summary>
            日期文本颜色（高亮）（空值采用系统默认配置）
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextSymbolFormat">
            <summary>
            日期符号格式
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextSymbolColor">
            <summary>
            日期符号颜色
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextWeek">
            <summary>
            是否显示星期
            </summary>
        </member>
        <member name="P:HML.DateInput.DateTextWeekColor">
            <summary>
            星期文本颜色
            </summary>
        </member>
        <member name="P:HML.DateInput.DatePicker">
            <summary>
            日期选择面板
            </summary>
        </member>
        <member name="F:HML.DateInput.mouseDownAreaType">
            <summary>
            当前鼠标按下的功能区
            </summary>
        </member>
        <member name="F:HML.DateInput.image_value_space">
            <summary>
            时间文本与图片的间距
            </summary>
        </member>
        <member name="F:HML.DateInput.disable_image_tmp">
            <summary>
            存放生成禁用状态图片
            </summary>
        </member>
        <member name="F:HML.DateInput.dateBody">
            <summary>
            存放时间元素信息
            </summary>
        </member>
        <member name="F:HML.DateInput.datePickerDisplayStatus">
            <summary>
            日期面板显示状态
            </summary>
        </member>
        <member name="F:HML.DateInput.borderThickness">
            <summary>
            边框厚度
            </summary>
        </member>
        <member name="F:HML.DateInput.dateBodyElements">
            <summary>
            日期控件内容允许选中的元素(已排好序)
            </summary>
        </member>
        <member name="M:HML.DateInput.UpdateDateSymbol">
            <summary>
            更新时间符号文本
            </summary>
        </member>
        <member name="M:HML.DateInput.CalculationDateBodyElementSize">
            <summary>
            计算时间各部分元素的Size（一般由 this.Font、this.DateSymbolFormats、this.DatePicker.DateDisplayType 的更改触发）
            </summary>
        </member>
        <member name="M:HML.DateInput.InitializeRectangle">
            <summary>
            计算控件各部分元素的rect
            </summary>
        </member>
        <member name="M:HML.DateInput.SetDatePickerDateValueToText">
            <summary>
            更新DatePicker源时间到控件文本上
            </summary>
        </member>
        <member name="M:HML.DateInput.SetTextToDatePickerValue">
            <summary>
            根据dateBody时间值更新日期面板DateValue 值触发值更改事件
            </summary>
        </member>
        <member name="M:HML.DateInput.UpdateDateBodyValueByKeyboard(System.Int32)">
            <summary>
            键盘数字键修改dateBody时间文本值
            </summary>
            <param name="number">键盘数字</param>
        </member>
        <member name="M:HML.DateInput.VaildUnSelectedValue(HML.DateInput.DateContentSelectedTypes)">
            <summary>
            文本由选中高亮到取消选中时验证时间
            </summary>
            <param name="type">时间文本选中高亮部分</param>
        </member>
        <member name="M:HML.DateInput.UpdateDateBodyElements">
            <summary>
            更新日期控件内容允许选中的元素
            </summary>
        </member>
        <member name="M:HML.DateInput.IsContainDateEmbody(HML.DateInput.DateEmbody)">
            <summary>
            是否显示是否日期指定部分
            </summary>
            <param name="dateEmbody">日期指定部分</param>
            <returns></returns>
        </member>
        <member name="M:HML.DateInput.GetWeekNameForDateTime(System.Nullable{System.DateTime})">
            <summary>
            获取指定日期所属星期文本 
            </summary>
            <param name="date">指定日期</param>
            <returns></returns>
        </member>
        <member name="M:HML.DateInput.GetControlAutoHeight">
            <summary>
            根据字体计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DateInput.tsdd_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            隐藏日期面板弹层事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DateInput.datePicker_BottomBarClearClick(System.Object,System.EventArgs)">
            <summary>
            日期面板清除事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DateInput.DatePicker_BottomBarNowClick(System.Object,System.EventArgs)">
            <summary>
            日期面板现在时间事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DateInput.datePicker_BottomBarConfirmClick(System.Object,System.EventArgs)">
            <summary>
            日期面板确定事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DateInput.DatePicker_DateValueChanged(System.Object,System.EventArgs)">
            <summary>
            日期面板时间值更改事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DateInput.DatePicker_DateFormatChanged(System.Object,System.EventArgs)">
            <summary>
            日期面板日期格式更改事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.DateInput.ShowDatePicker">
            <summary>
            显示日期面板
            </summary>
        </member>
        <member name="T:HML.DateInput.DateBodyClass">
            <summary>
            存放时间元素信息
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.selectElementItem">
            <summary>
            日期控件内容选中类型索引
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.content_rect">
            <summary>
            内容Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.image_rect">
            <summary>
            图片Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.clear_btn_rect">
            <summary>
            清除按钮Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.value_rect">
            <summary>
            时间值Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.year_str">
            <summary>
            年文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.year_size">
            <summary>
            年文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.year_rect">
            <summary>
            年文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.year_unit_str">
            <summary>
            年单位文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.year_unit_size">
            <summary>
            年单位文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.year_unit_rect">
            <summary>
            年单位文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.yearmonth_str">
            <summary>
            年月分隔符文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.yearmonth_size">
            <summary>
            年月分隔符文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.yearmonth_rect">
            <summary>
            年月分隔符文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.month_str">
            <summary>
            月文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.month_size">
            <summary>
            月文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.month_rect">
            <summary>
            月文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.month_unit_str">
            <summary>
            月单位文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.month_unit_size">
            <summary>
            月单位文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.month_unit_rect">
            <summary>
            月单位文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.monthday_str">
            <summary>
            月日分隔符文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.monthday_size">
            <summary>
            月日分隔符文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.monthday_rect">
            <summary>
            月日分隔符文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.day_str">
            <summary>
            日文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.day_size">
            <summary>
            日文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.day_rect">
            <summary>
            日文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.day_unit_str">
            <summary>
            日单位文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.day_unit_size">
            <summary>
            日单位文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.day_unit_rect">
            <summary>
            日单位文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.dayhour_str">
            <summary>
            日时分隔符文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.dayhour_size">
            <summary>
            日时分隔符文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.dayhour_rect">
            <summary>
            日时分隔符文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hour_str">
            <summary>
            时文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hour_size">
            <summary>
            时文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hour_rect">
            <summary>
            时文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hour_unit_str">
            <summary>
            时单位文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hour_unit_size">
            <summary>
            时单位文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hour_unit_rect">
            <summary>
            时单位文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hourminute_str">
            <summary>
            时分分隔符文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hourminute_size">
            <summary>
            时分分隔符文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.hourminute_rect">
            <summary>
            时分分隔符文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minute_str">
            <summary>
            分文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minute_size">
            <summary>
            分文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minute_rect">
            <summary>
            分文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minute_unit_str">
            <summary>
            分单位文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minute_unit_size">
            <summary>
            分单位文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minute_unit_rect">
            <summary>
            分单位文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minutesecond_str">
            <summary>
            分秒分隔符文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minutesecond_size">
            <summary>
            分秒分隔符文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.minutesecond_rect">
            <summary>
            分秒分隔符文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.second_str">
            <summary>
            秒文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.second_size">
            <summary>
            秒文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.second_rect">
            <summary>
            秒文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.second_unit_str">
            <summary>
            秒单位文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.second_unit_size">
            <summary>
            秒单位文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.second_unit_rect">
            <summary>
            秒单位文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.secondweek_str">
            <summary>
            秒星期分隔符文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.secondweek_size">
            <summary>
            秒星期分隔符文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.secondweek_rect">
            <summary>
            秒星期分隔符文本Rect
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.week_str">
            <summary>
            星期文本
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.week_size">
            <summary>
            星期文本Size
            </summary>
        </member>
        <member name="F:HML.DateInput.DateBodyClass.week_rect">
            <summary>
            星期文本Rect
            </summary>
        </member>
        <member name="T:HML.DateInput.DateEmbody">
            <summary>
            当前日期文本显示包含指定部分
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Hour">
            <summary>
            时
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Minute">
            <summary>
            分
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:HML.DateInput.DateEmbody.Week">
            <summary>
            星期
            </summary>
        </member>
        <member name="T:HML.DateInput.DateContentSelectedTypes">
            <summary>
            日期控件内容允许选中的元素
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.None">
            <summary>
            没选中
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Image">
            <summary>
            图标
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.ClearButton">
            <summary>
            清除按钮
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Hour">
            <summary>
            时
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Minute">
            <summary>
            分
            </summary>
        </member>
        <member name="F:HML.DateInput.DateContentSelectedTypes.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:HML.DateInput.MouseDownAreaTypes">
             <summary>
            当前鼠标按下的功能区
             </summary>
        </member>
        <member name="F:HML.DateInput.MouseDownAreaTypes.None">
            <summary>
            没有
            </summary>
        </member>
        <member name="F:HML.DateInput.MouseDownAreaTypes.Main">
            <summary>
            整个控件
            </summary>
        </member>
        <member name="F:HML.DateInput.MouseDownAreaTypes.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:HML.DateInput.MouseDownAreaTypes.ClearButton">
            <summary>
            清除按钮
            </summary>
        </member>
        <member name="F:HML.DateInput.MouseDownAreaTypes.DateText">
            <summary>
            日期文本
            </summary>
        </member>
        <member name="T:HML.DateInputClearAlignment">
            <summary>
            日期输入框 清除按钮对齐方式
            </summary>
        </member>
        <member name="F:HML.DateInputClearAlignment.Near">
            <summary>
            靠近日期图片
            </summary>
        </member>
        <member name="F:HML.DateInputClearAlignment.Far">
             <summary>
            远离日期图片
             </summary>
        </member>
        <member name="T:HML.DateInputImageAlignment">
            <summary>
            日期输入框 日期图片对齐方式
            </summary>
        </member>
        <member name="F:HML.DateInputImageAlignment.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.DateInputImageAlignment.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="T:HML.DateInputOperateModes">
            <summary>
            日期操作模式
            </summary>
        </member>
        <member name="F:HML.DateInputOperateModes.Editor">
            <summary>
            可编辑
            </summary>
        </member>
        <member name="F:HML.DateInputOperateModes.DropDown">
            <summary>
            只能日期面板选择
            </summary>
        </member>
        <member name="T:HML.DateInputSymbolFormats">
             <summary>
            日期输入框 日期符号格式
             </summary>
        </member>
        <member name="F:HML.DateInputSymbolFormats.CrossLine">
             <summary>
            格式 yyyy-MM-dd HH:mm:ss
             </summary>
        </member>
        <member name="F:HML.DateInputSymbolFormats.ObliqueLine">
             <summary>
            格式 yyyy/MM/dd HH:mm:ss
             </summary>
        </member>
        <member name="F:HML.DateInputSymbolFormats.Dot">
             <summary>
            格式 yyyy.MM.dd HH:mm:ss
             </summary>
        </member>
        <member name="F:HML.DateInputSymbolFormats.Unit">
             <summary>
            格式 yyyy年MM月dd日 HH时mm分ss秒
             </summary>
        </member>
        <member name="T:HML.DateInputTextAlignment">
            <summary>
            日期输入框 文本对齐方式
            </summary>
        </member>
        <member name="F:HML.DateInputTextAlignment.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.DateInputTextAlignment.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="T:HML.DatePicker">
            <summary>
            日期面板控件
            </summary>
        </member>
        <member name="E:HML.DatePicker.BottomBarClearClick">
            <summary>
            底部工具栏清除选中单击事件
            </summary>
        </member>
        <member name="E:HML.DatePicker.BottomBarNowClick">
            <summary>
            底部工具栏现在单击事件
            </summary>
        </member>
        <member name="E:HML.DatePicker.BottomBarConfirmClick">
            <summary>
            底部工具栏确认单击事件
            </summary>
        </member>
        <member name="E:HML.DatePicker.DateValueChanged">
            <summary>
            日期值更改事件
            </summary>
        </member>
        <member name="E:HML.DatePicker.DateFormatChanged">
            <summary>
            日期显示格式更改事件
            </summary>
        </member>
        <member name="P:HML.DatePicker.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateFormat">
            <summary>
            日期显示格式（自动截取到显示部分）
            </summary>
        </member>
        <member name="P:HML.DatePicker.MinValue">
            <summary>
            最小日期(只比较日期部分)
            </summary>
        </member>
        <member name="P:HML.DatePicker.MaxValue">
            <summary>
            最大日期(只比较日期部分)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateValue">
            <summary>
            日期 (获取时自动根据 DateFormat 属性对日期时间进行截取)
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarBackColor">
            <summary>
            顶部工具栏背景颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarBtnForeNormalColor">
            <summary>
            顶部工具栏按钮字体颜色(正常)
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarBtnForeEnterColor">
            <summary>
            顶部工具栏按钮字体颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.DatePicker.CrossLineColor">
            <summary>
            分割线颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.MainBarBackColor">
            <summary>
            主面板背景颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateForeTitleColor">
            <summary>
            日期面板日期标题字体颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateForeDisabledColor">
            <summary>
            日期面板日期字体颜色(禁用)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateForeUnCurrentColor">
            <summary>
            日期面板非本月日期字体颜色(正常)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateForeNormalColor">
            <summary>
            日期面板正常日期字体颜色(正常)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBackEnterColor">
            <summary>
            日期面板日期背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBackSelectedColor">
            <summary>
            日期面板日期背景颜色(选中)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateForeSelectedColor">
            <summary>
            日期面板日期字体颜色(选中)
            </summary>
        </member>
        <member name="P:HML.DatePicker.BottomBarMinMaxTipVisible">
            <summary>
            是否显示最小值最大值限制提示信息
            </summary>
        </member>
        <member name="P:HML.DatePicker.BottomBarMinMaxTipColor">
            <summary>
            日期最小最大限制提示字体颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.ScrollBarColor">
            <summary>
            滚动条背景颜色
            </summary>
        </member>
        <member name="P:HML.DatePicker.ScrollSlideColor">
            <summary>
            滚动条滑块颜色
            </summary>
        </member>
        <member name="F:HML.DatePicker.activatedIndex">
            <summary>
            激活选项索引:
            年面板.激活选项索引(年功能下：-2至14)(年月功能下： -3至14)(年月日功能下：-6至14)
            月面板.激活选项索引(年月功能下： -3至14)(年月日功能下：-6至14)
            日面板.激活选项索引(年月日功能下：-6至44)
            </summary>
        </member>
        <member name="F:HML.DatePicker.activatedrect">
            <summary>
            激活选项区域
            </summary>
        </member>
        <member name="F:HML.DatePicker.activatedVisible">
            <summary>
            激活选项是否显示
            </summary>
        </member>
        <member name="F:HML.DatePicker.minDate">
            <summary>
            最小日期
            </summary>
        </member>
        <member name="F:HML.DatePicker.maxDate">
            <summary>
            最大日期
            </summary>
        </member>
        <member name="F:HML.DatePicker.topbar_rect_height">
            <summary>
            顶部工具栏高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.mainbar_rect_width">
            <summary>
            主体面板宽度
            </summary>
        </member>
        <member name="F:HML.DatePicker.mainbar_rect_height">
            <summary>
            主体面板高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.bottombar_rect_height">
            <summary>
            底部工具栏高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.year_item_rect_width">
            <summary>
            年选项宽度
            </summary>
        </member>
        <member name="F:HML.DatePicker.year_item_rect_height">
            <summary>
            年选项高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.month_item_rect_width">
            <summary>
            月选项宽度
            </summary>
        </member>
        <member name="F:HML.DatePicker.month_item_rect_height">
            <summary>
            月选项高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.day_item_rect_width">
            <summary>
            日选项宽度
            </summary>
        </member>
        <member name="F:HML.DatePicker.day_item_rect_height">
            <summary>
            日选项高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.date_time_rect_space">
            <summary>
            日期面板和时间面板间隔
            </summary>
        </member>
        <member name="F:HML.DatePicker.time_item_rect_width">
            <summary>
            时间选项宽度
            </summary>
        </member>
        <member name="F:HML.DatePicker.time_item_rect_height">
            <summary>
            时间选项高度
            </summary>
        </member>
        <member name="F:HML.DatePicker.time_scroll_thickness">
            <summary>
            时间滚动条厚度
            </summary>
        </member>
        <member name="F:HML.DatePicker.dateBody">
            <summary>
            存放日期元素信息对象
            </summary>
        </member>
        <member name="F:HML.DatePicker.currentDateFormatsViews">
            <summary>
            当前显示的日期面板
            </summary>
        </member>
        <member name="F:HML.DatePicker.mousedownobject">
            <summary>
            鼠标按下对象
            </summary>
        </member>
        <member name="F:HML.DatePicker.mousedownpoint">
            <summary>
            鼠标按下坐标
            </summary>
        </member>
        <member name="F:HML.DatePicker.mouseenterobject">
            <summary>
            鼠标进入对象
            </summary>
        </member>
        <member name="M:HML.DatePicker.OnBottomBarClearClick(System.EventArgs)">
            <summary>
            清除
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.OnBottomBarNowClick(System.EventArgs)">
            <summary>
            现在
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.OnBottomBarConfirmClick(System.EventArgs)">
            <summary>
            确认
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.OnDateValueChanged(System.EventArgs)">
            <summary>
            日期值更改
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.OnDateFormatChanged(System.EventArgs)">
            <summary>
            日期显示格式更改
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.InitializeViewForDateValue">
            <summary>
            根据DateValue初始化画面并刷新画面
            </summary>
        </member>
        <member name="M:HML.DatePicker.UpdateDateValue(System.Nullable{System.DateTime})">
            <summary>
            设置日期值（但不会触发 DateValueChanged 事件）
            </summary>
            <param name="value">日期</param>
        </member>
        <member name="M:HML.DatePicker.InitializeLayoutRectangle">
            <summary>
            初始化控件布局
            </summary>
        </member>
        <member name="M:HML.DatePicker.InitializeTimeScrollLayoutRectangle(HML.DatePicker.TimeAreaScrollClass,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            初始化时间滚动条布局
            </summary>
            <param name="scroll_obj">时间滚动条对象</param>
            <param name="display_rect">时间选项显示区域</param>
            <param name="item_count">时间选项总数</param>
            <param name="item_height">时间选项高度</param>
        </member>
        <member name="M:HML.DatePicker.UpdateTopText">
            <summary>
            更新顶部画面文本信息
            </summary>
        </member>
        <member name="M:HML.DatePicker.UpdateYearMonthDayText">
            <summary>
            更新年月日画面文本信息 
            </summary>
        </member>
        <member name="M:HML.DatePicker.UpdateBottomText">
            <summary>
            更新底部画面文本信息
            </summary>
        </member>
        <member name="M:HML.DatePicker.IsContainEmbodyForCurrentFormat(HML.DatePicker.DateElement)">
            <summary>
            当前设置格式是否包含日期指定部分
            </summary>
            <param name="dateElement">日期指定部分</param>
            <returns></returns>
        </member>
        <member name="M:HML.DatePicker.IsContainEmbodyForCurrentView(HML.DatePicker.DateElement)">
            <summary>
            日期指定部分面板是否在当前面板显示  
            </summary>
            <param name="dateElement">日期指定部分面板</param>
            <returns></returns>
        </member>
        <member name="M:HML.DatePicker.SetCurrentDateFormatsViews(HML.DatePicker.DateFormatsViews)">
            <summary>
            当前面板切换到指定面板
            </summary>
            <param name="view">指定面板</param>
        </member>
        <member name="M:HML.DatePicker.AutoMiddleSelectedTimeItem">
            <summary>
            让选中的时间选垂直项居中显示
            </summary>
        </member>
        <member name="M:HML.DatePicker.ActivateIndexByKey(System.Windows.Forms.Keys)">
            <summary>
            键盘方向键更新激活索引
            </summary>
            <param name="key">键盘方向键 Keys.Left、Keys.Right、Keys.Up、Keys.Down</param>
        </member>
        <member name="M:HML.DatePicker.ActivateIndexClick">
             <summary>
            指定激活选项单击
             </summary>
             <returns></returns>
        </member>
        <member name="M:HML.DatePicker.GetControlAutoSize">
            <summary>
            根据设置获取控件大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.DatePicker.GetStartYaer(System.Int32)">
            <summary>
            获取指定年份的年面板第一个开始的年份
            </summary>
            <param name="year">指定年份</param>
            <returns></returns>
        </member>
        <member name="M:HML.DatePicker.GetTimeItemsDisplayY(HML.DatePicker.TimeAreaScrollClass)">
            <summary>
            获取时间选项列表Rect的开始Y坐标
            </summary>
            <param name="scroll_obj"></param>
            <returns></returns>
        </member>
        <member name="M:HML.DatePicker.DrawTimeScroll(System.Drawing.Graphics,HML.DatePicker.TimeAreaScrollClass,System.Drawing.Pen,System.Drawing.Pen)">
            <summary>
            绘制时间滚动条
            </summary>
            <param name="g"></param>
            <param name="scroll_obj">时间滚动条对象</param>
            <param name="scroll_back_pen">滚动条背景画笔</param>
            <param name="scroll_slide_pen">滚动条滑块画笔</param>
        </member>
        <member name="M:HML.DatePicker.TopBarPrevYearClick">
            <summary>
            上一年
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.TopBarPrevMonthClick">
            <summary>
            上一月
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.TopBarYearMonthClick">
            <summary>
            年月切换面板
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.TopBarMonthClick">
            <summary>
            显示月面板
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.TopBarYearClick">
            <summary>
            显示年面板
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.TopBarNextMonthClick">
            <summary>
            下一月
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.TopBarNextYearClick">
            <summary>
            下一年
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.YearMainItemClick(HML.DatePicker.DateItemClass)">
            <summary>
            年面板年选项单击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.MonthMainItemClick(HML.DatePicker.DateItemClass)">
            <summary>
            月面板月选项单击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.DayMainItemClick(HML.DatePicker.DateItemClass)">
            <summary>
            日月面板日选项单击
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HML.DatePicker.DrawLeftBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制Rectangle左边圆角（圆角边框半径为3个像素）
            </summary>
            <param name="g">要绘制边框的控件画布</param>
            <param name="rect">要绘制边框的rect</param>
            <param name="backColor">背景色</param>
            <param name="backOverColor">背景色平滑过度颜色</param>
        </member>
        <member name="M:HML.DatePicker.DrawRightBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制Rectangle右边圆角（圆角边框半径为3个像素）
            </summary>
            <param name="g">要绘制边框的控件画布</param>
            <param name="rect">要绘制边框的rect</param>
            <param name="backColor">背景色</param>
            <param name="backOverColor">背景色平滑过度颜色</param>
        </member>
        <member name="T:HML.DatePicker.DateBodyClass">
            <summary>
            日期存放信息
            </summary>]
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_Rect">
            <summary>
            顶部工具栏rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_Date_Rect">
            <summary>
            顶部工具栏日期rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_prev_year_btn">
            <summary>
            顶部工具栏.上一年按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_prev_month_btn">
            <summary>
            顶部工具栏.上一月按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_yearscope_btn">
            <summary>
            顶部工具栏.年范围描述
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_monthyear_btn">
            <summary>
            顶部工具栏.年、月面板年按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_month_btn">
            <summary>
            顶部工具栏.月按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_year_btn">
            <summary>
            顶部工具栏.年按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_next_month_btn">
            <summary>
            顶部工具栏.下一月按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_next_year_btn">
            <summary>
            顶部工具栏.下一年按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_Time_Rect">
            <summary>
            顶部工具栏时间rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_hour_rect">
            <summary>
             时标题rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_minute_rect">
            <summary>
             分标题rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TopBar_second_rect">
            <summary>
             秒标题rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.MainBar_Rect">
            <summary>
            主面板.rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.YearMain_Rect">
            <summary>
            年面板.rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.YearMain_itemArr">
            <summary>
            年面板.选项列表
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.MonthMain_Rect">
            <summary>
            月面板.rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.MonthMain_itemArr">
            <summary>
            月面板.选项列表
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.DayMain_Rect">
            <summary>
            日面板.rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.DayMain_titleArr">
            <summary>
            日面板.标题列表
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.DayMain_itemArr">
            <summary>
            日面板.选项列表
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TimeMain_Rect">
            <summary>
             时间面板rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TimeMain_HourArea">
            <summary>
            时间面板时区域
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TimeMain_MinuteArea">
            <summary>
            时间面板分区域
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.TimeMain_SecondArea">
            <summary>
            时间面板秒区域
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.BottomBar_Rect">
            <summary>
            底部工具栏rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.Bottombar_minmaxborder_lab">
            <summary>
            底部工具栏最小时间最大时间线
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.Bottombar_mindate_lab">
            <summary>
            底部工具栏最小时间文本
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.Bottombar_maxdate_lab">
            <summary>
            底部工具栏最大时间文本
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.Bottombar_clear_btn">
            <summary>
            底部工具栏清除按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.Bottombar_now_btn">
            <summary>
            底部工具栏现在按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.Bottombar_confirm_btn">
            <summary>
            底部工具栏确认按钮
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.selected_year">
            <summary>
            已选择年
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.selected_month">
            <summary>
            已选择月
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.selected_day">
            <summary>
            已选择日
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.selected_hour">
            <summary>
            已选择时
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.selected_minute">
            <summary>
            已选择分
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.selected_second">
            <summary>
            已选择秒
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.current_display_year">
            <summary>
            当前年份面板(画面上切换到指定年份的日期提供用户选择)
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateBodyClass.current_display_month">
            <summary>
            当前月份面板(画面上切换到指定月份的日期提供用户选择)
            </summary>
        </member>
        <member name="T:HML.DatePicker.TopBarItemClass">
            <summary>
            顶部工具栏面板选项
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarItemClass.Rect">
            <summary>
            顶部工具栏选项rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarItemClass.Text">
            <summary>
            顶部工具栏选项文本
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarItemClass.LineLeftPointArr">
            <summary>
            顶部工具栏选项按钮图形路径
            </summary>
        </member>
        <member name="P:HML.DatePicker.TopBarItemClass.LineRightPointArr">
            <summary>
            顶部工具栏选项按钮图形路径
            </summary>
        </member>
        <member name="T:HML.DatePicker.DateItemClass">
            <summary>
            年、月、日 选项
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateItemClass.Rect">
            <summary>
            选项rect
            </summary>]
        </member>
        <member name="P:HML.DatePicker.DateItemClass.Value">
            <summary>
            年、月、日 选项值(存储格式：[10yyyy]、[10yyyyMM]、[10yyyyMMdd] )
            </summary>
        </member>
        <member name="P:HML.DatePicker.DateItemClass.DayItemType">
            <summary>
            日选项类型(只适用日选项)
            </summary>
        </member>
        <member name="T:HML.DatePicker.DayTitleItemClass">
            <summary>
            日期标题
            </summary>
        </member>
        <member name="P:HML.DatePicker.DayTitleItemClass.Rect">
            <summary>
            日标题.rect
            </summary>]
        </member>
        <member name="P:HML.DatePicker.DayTitleItemClass.Text">
            <summary>
            日标题.文本
            </summary>
        </member>
        <member name="T:HML.DatePicker.TimeAreaClass">
            <summary>
            时间面板指定区域
            </summary>
        </member>
        <member name="M:HML.DatePicker.TimeAreaClass.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="itemcount">选项数量</param>
        </member>
        <member name="P:HML.DatePicker.TimeAreaClass.Rect">
            <summary>
             区域Rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaClass.itemArr">
            <summary>
            区域选项列表
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaClass.Scroll">
            <summary>
            区域滚动条
            </summary>
        </member>
        <member name="T:HML.DatePicker.TimeAreaItemClass">
            <summary>
            时间选项
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaItemClass.Rect">
            <summary>
            选项rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaItemClass.Value">
            <summary>
            选项值
            </summary>
        </member>
        <member name="T:HML.DatePicker.TimeAreaScrollClass">
            <summary>
            时间滚动条
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaScrollClass.Scroll_Back_Rect">
            <summary>
            滚动条背景.rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaScrollClass.Scroll_Slide_Rect">
            <summary>
            滚动条滑块.rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaScrollClass.Owner_Display_Rect">
            <summary>
            内容显示区rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.TimeAreaScrollClass.Owner_Content_Rect">
            <summary>
            内容真实区rect
            </summary>
        </member>
        <member name="M:HML.DatePicker.TimeAreaScrollClass.IsResetScrollByOffset(System.Int32)">
            <summary>
            判断是否需要更新滚动条UI根据滚动条滑块偏移量
            </summary>
            <param name="offset">滚动条滑块偏移量</param>
            <returns>是否要刷新</returns>
        </member>
        <member name="T:HML.DatePicker.BottomBarItemClass">
            <summary>
            底部工具栏面板选项
            </summary>
        </member>
        <member name="P:HML.DatePicker.BottomBarItemClass.Rect">
            <summary>
            底部工具栏选项rect
            </summary>
        </member>
        <member name="P:HML.DatePicker.BottomBarItemClass.Text">
             <summary>
            底部工具栏选项文本
             </summary>
        </member>
        <member name="P:HML.DatePicker.BottomBarItemClass.LinePointArr">
            <summary>
            底部工具栏选项按钮图形路径
            </summary>
        </member>
        <member name="T:HML.DatePicker.DateElement">
            <summary>
            组成日期的元素
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateElement.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateElement.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateElement.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateElement.Hour">
            <summary>
            时
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateElement.Minute">
            <summary>
            分
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateElement.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:HML.DatePicker.DateFormatsViews">
            <summary>
            在指定显示功能类型下面板显示状态
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateFormatsViews.Year_Year">
            <summary>
            年功能中(年面板)
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateFormatsViews.YearMonth_Year">
            <summary>
            年月功能中(年面板)
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateFormatsViews.YearMonth_Month">
            <summary>
            年月功能中(月面板)
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateFormatsViews.YearMonthDay_Year">
            <summary>
            年月日功能中(年面板)
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateFormatsViews.YearMonthDay_Month">
            <summary>
            年月日功能中(月面板)
            </summary>
        </member>
        <member name="F:HML.DatePicker.DateFormatsViews.YearMonthDay_Day">
            <summary>
            年月日功能中(日面板)
            </summary>
        </member>
        <member name="T:HML.DatePicker.DayItemTypes">
            <summary>
            日选项类型
            </summary>
        </member>
        <member name="F:HML.DatePicker.DayItemTypes.Disabled">
            <summary>
            不在最大最小值范围的日期
            </summary>
        </member>
        <member name="F:HML.DatePicker.DayItemTypes.UnCurrent">
            <summary>
            在日期最大最小值范围,但非本月的日期
            </summary>
        </member>
        <member name="F:HML.DatePicker.DayItemTypes.Normal">
            <summary>
            在日期最大最小值范围,本月的日期
            </summary>
        </member>
        <member name="T:HML.DatePickerFormats">
            <summary>
            日期面板 日期格式 
            </summary>
        </member>
        <member name="F:HML.DatePickerFormats.yyyy">
            <summary>
            年
            </summary>
        </member>
        <member name="F:HML.DatePickerFormats.yyyyMM">
            <summary>
            年月
            </summary>
        </member>
        <member name="F:HML.DatePickerFormats.yyyyMMdd">
            <summary>
            年月日
            </summary>
        </member>
        <member name="F:HML.DatePickerFormats.yyyyMMddHH">
            <summary>
            年月日时
            </summary>
        </member>
        <member name="F:HML.DatePickerFormats.yyyyMMddHHmm">
            <summary>
            年月日时分
            </summary>
        </member>
        <member name="F:HML.DatePickerFormats.yyyyMMddHHmmss">
            <summary>
            年月日时分秒
            </summary>
        </member>
        <member name="T:HML.GradualPercentageColor">
            <summary>
            GradualPercentage渐变颜色
            </summary>
        </member>
        <member name="P:HML.GradualPercentageColor.Position">
            <summary>
            渐变范围值 0-1
            </summary>
        </member>
        <member name="P:HML.GradualPercentageColor.Color">
            <summary>
            渐变范围值对应颜色
            </summary>
        </member>
        <member name="T:HML.GradualPercentageColorCollection">
            <summary>
            GradualPercentage渐变颜色集合
            </summary>
        </member>
        <member name="T:HML.HGradualPercentage">
            <summary>
            横向渐变百分比控件
            </summary>
        </member>
        <member name="E:HML.HGradualPercentage.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.HGradualPercentage.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.HGradualPercentage.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.HGradualPercentage.GridsSize">
            <summary>
            网格大小（像素）
            </summary>
        </member>
        <member name="P:HML.HGradualPercentage.GridsColor">
            <summary>
            网格颜色
            </summary>
        </member>
        <member name="P:HML.HGradualPercentage.GradualColors">
            <summary>
            渐变颜色集合
            </summary>
        </member>
        <member name="P:HML.HGradualPercentage.Value">
            <summary>
            百分比(0-100)
            </summary>
        </member>
        <member name="F:HML.HGradualPercentage.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.HGradualPercentage.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.HGradualPercentage.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.HGradualPercentage.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="M:HML.HGradualPercentage.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="T:HML.VGradualPercentage">
            <summary>
            纵向渐变百分比控件
            </summary>
        </member>
        <member name="E:HML.VGradualPercentage.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.VGradualPercentage.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.VGradualPercentage.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.VGradualPercentage.GridsSize">
            <summary>
            网格大小（像素）
            </summary>
        </member>
        <member name="P:HML.VGradualPercentage.GridsColor">
            <summary>
            网格颜色
            </summary>
        </member>
        <member name="P:HML.VGradualPercentage.GradualColors">
            <summary>
            渐变颜色集合
            </summary>
        </member>
        <member name="P:HML.VGradualPercentage.Value">
            <summary>
            百分比(0-100)
            </summary>
        </member>
        <member name="F:HML.VGradualPercentage.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.VGradualPercentage.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.VGradualPercentage.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.VGradualPercentage.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="M:HML.VGradualPercentage.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="T:HML.GroupPanelPlus">
            <summary>
             该控件显示围绕一组具有可选标题的控件的框架
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.BorderThickness">
            <summary>
            边框厚度
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.TitleTBMargin">
            <summary>
            标题栏文本上下外边距
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.TitleBackColor">
            <summary>
            标题栏背景颜色
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.IcoVisible">
            <summary>
            是否显示图标
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.IcoSize">
            <summary>
            标题栏图标大小
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.Ico">
            <summary>
            标题栏图标
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.TitleAlignment">
            <summary>
            标题栏对齐方式
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.BackColor">
            <summary>
            内容区背景颜色
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.Text">
            <summary>
            标题栏文本
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.Font">
            <summary>
            标题栏文本字体
            </summary>
        </member>
        <member name="P:HML.GroupPanelPlus.ForeColor">
            <summary>
            标题栏文本颜色
            </summary>
        </member>
        <member name="F:HML.GroupPanelPlus.NCCALCSIZE_PARAMS.ncNewRectangle">
            <summary>
            在移动或改变大小后的新坐标
            </summary>
        </member>
        <member name="F:HML.GroupPanelPlus.NCCALCSIZE_PARAMS.ncOldRectangle">
            <summary>
            在移动或改变大小前的坐标
            </summary>
        </member>
        <member name="F:HML.GroupPanelPlus.NCCALCSIZE_PARAMS.ncOldClientRectangle">
            <summary>
            移动或改变大小前的客户区坐标
            </summary>
        </member>
        <member name="M:HML.GroupPanelPlus.OnNCPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            绘制非工作区域
            </summary>
        </member>
        <member name="M:HML.GroupPanelPlus.NCInvalidate">
            <summary>
            重新绘制非工作区
            </summary>
        </member>
        <member name="M:HML.GroupPanelPlus.Send_WM_NCPAINT_Message">
            <summary>
            发送非工作区绘制信息
            </summary>
        </member>
        <member name="M:HML.GroupPanelPlus.Send_WM_NCCALCSIZE_Message">
            <summary>
            发送要求重新计算非工作区和绘制信息
            </summary>
        </member>
        <member name="T:HML.GroupPanelPlusTitleAlignments">
            <summary>
            GroupPanelPlus标题对齐方式
            </summary>
        </member>
        <member name="F:HML.GroupPanelPlusTitleAlignments.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.GroupPanelPlusTitleAlignments.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:HML.GroupPanelPlusTitleAlignments.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="T:HML.HHalvingLine">
            <summary>
            横向分割线控件
            </summary>
        </member>
        <member name="P:HML.HHalvingLine.Style">
             <summary>
            显示风格
             </summary>
        </member>
        <member name="P:HML.HHalvingLine.LineThickness">
             <summary>
            线条厚度
             </summary>
        </member>
        <member name="P:HML.HHalvingLine.LineColor">
            <summary>
            线条颜色
            </summary>
        </member>
        <member name="P:HML.HHalvingLine.TextAlignment">
             <summary>
            文本对齐方式
             </summary>
        </member>
        <member name="P:HML.HHalvingLine.TextDistance">
             <summary>
            文本位置偏移量(正数从左边开始偏移，负数由右边开始偏移)
             </summary>
        </member>
        <member name="M:HML.HHalvingLine.GetControlAutoHeight">
            <summary>
            根据字体计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.HHalvingLine.GetStyle">
            <summary>
            获取显示风格
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.HHalvingLineTextAlignment">
            <summary>
            分割线文本布局方式
            </summary>
        </member>
        <member name="F:HML.HHalvingLineTextAlignment.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="F:HML.HHalvingLineTextAlignment.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:HML.HHalvingLineTextAlignment.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="T:HML.ImageSlide">
            <summary>
            图片幻灯片控件
            </summary>
        </member>
        <member name="E:HML.ImageSlide.IndexChanged">
            <summary>
            图片轮播索引更改事件
            </summary>
        </member>
        <member name="P:HML.ImageSlide.BorderVisible">
             <summary>
            是否显示边框
             </summary>
        </member>
        <member name="P:HML.ImageSlide.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.ImageSlide.Orientation">
             <summary>
            图片滑动播放方向 
             </summary>
        </member>
        <member name="P:HML.ImageSlide.AutoSuspend">
            <summary>
            鼠标进入时是否停止自动切换
            </summary>
        </member>
        <member name="P:HML.ImageSlide.TitleBar">
            <summary>
            标题栏
            </summary>
        </member>
        <member name="P:HML.ImageSlide.NavigationBar">
            <summary>
            导航栏
            </summary>
        </member>
        <member name="P:HML.ImageSlide.LegendsBar">
            <summary>
            图例栏
            </summary>
        </member>
        <member name="P:HML.ImageSlide.FrameSize">
             <summary>
            图片框Size
             </summary>
        </member>
        <member name="P:HML.ImageSlide.FrameCount">
             <summary>
            显示区要显示的图片框数量
             </summary>
        </member>
        <member name="P:HML.ImageSlide.FrameSliderTime">
            <summary>
            图片框滑动总时间(单位毫秒)
            </summary>
        </member>
        <member name="P:HML.ImageSlide.FrameIntervalTime">
            <summary>
            图片框停留间隔时间(单位毫秒)
            </summary>
        </member>
        <member name="P:HML.ImageSlide.ImageItems">
            <summary>
            图片选项集合
            </summary>
        </member>
        <member name="P:HML.ImageSlide.Index">
             <summary>
            图片开始的索引（负向第一个为最左边、正向第一个为最右边）
             </summary>
        </member>
        <member name="F:HML.ImageSlide.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.ImageSlide.imageFrames">
            <summary>
            图片框集合
            </summary>
        </member>
        <member name="F:HML.ImageSlide.slideTimeValue">
            <summary>
            滑动动画已使用的时间累计
            </summary>
        </member>
        <member name="F:HML.ImageSlide.intervalTimeValue">
            <summary>
            滑动动画的间隔时间累计
            </summary>
        </member>
        <member name="F:HML.ImageSlide.isSuspendIntervalTimeValue">
            <summary>
            是否暂停滑动动画的间隔时间累计
            </summary>
        </member>
        <member name="F:HML.ImageSlide.current_orientation">
            <summary>
            当前滑动方向
            </summary>
        </member>
        <member name="F:HML.ImageSlide.current_distanceprogress">
            <summary>
            图片框当前滑动进度
            </summary>
        </member>
        <member name="F:HML.ImageSlide.animationStatus">
            <summary>
            当前动画状态
            </summary>
        </member>
        <member name="F:HML.ImageSlide.isDisabled">
            <summary>
            控件是否处于失效状态
            </summary>
        </member>
        <member name="F:HML.ImageSlide.isOnceSlide">
            <summary>
            是否在Stop状态下利用导航栏进行一次切换
            </summary>
        </member>
        <member name="M:HML.ImageSlide.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.ImageSlide.Play">
            <summary>
            开始播放
            </summary>
        </member>
        <member name="M:HML.ImageSlide.Stop">
            <summary>
            停止播放
            </summary>
        </member>
        <member name="M:HML.ImageSlide.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.ImageSlide.InitializeNavigationBarRectangle">
            <summary>
            初始化导航栏Rectangle
            </summary>
        </member>
        <member name="M:HML.ImageSlide.UpdateImageFrameInfo">
            <summary>
            更新图片框信息 (当前显示区的开始图片的索引：负向第一个为最左边、正向第一个为最右边)
            </summary>
        </member>
        <member name="M:HML.ImageSlide.LoadImageFrame">
            <summary>
            加载图片框集合
            </summary>
        </member>
        <member name="M:HML.ImageSlide.SwitchNext">
            <summary>
            根据滑动方向切换到下一个图片
            </summary>
        </member>
        <member name="M:HML.ImageSlide.RestoreOrientation">
            <summary>
            还原当前滑动方向到Orientation设置的滑动方向
            </summary>
        </member>
        <member name="M:HML.ImageSlide.GetImageFrameSlideDirection">
            <summary>
            获取当前滑动方向的图片框滑动距离
            </summary>
        </member>
        <member name="M:HML.ImageSlide.AutoUpdateDisabledStatus">
            <summary>
            根据控件失效状态自动更新控件动画
            </summary>
        </member>
        <member name="M:HML.ImageSlide.SetImageDefaultIndex">
            <summary>
            设置默认图片索引
            </summary>
        </member>
        <member name="M:HML.ImageSlide.ValidImageIndex(System.Int32)">
            <summary>
            验证图片索引
            </summary>
            <param name="index">图片索引</param>
            <returns></returns>
        </member>
        <member name="M:HML.ImageSlide.IsInImageFrame(HML.ImageSlideItem)">
            <summary>
            图片选项是否在图片框中
            </summary>
            <param name="item">图片选项</param>
        </member>
        <member name="M:HML.ImageSlide.IsHorizonta(HML.ImageSlideOrientations)">
            <summary>
            是否横向滑动（LeftToRight、RightToLeft）
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:HML.ImageSlide.IsNegative(HML.ImageSlideOrientations)">
            <summary>
            是否负方向滑动（RightToLeft、BottomToTop）
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="T:HML.ImageSlide.ImageFrame">
            <summary>
            图片框
            </summary>
        </member>
        <member name="P:HML.ImageSlide.ImageFrame.SourceImageIndex">
            <summary>
            原图片索引
            </summary>
        </member>
        <member name="P:HML.ImageSlide.ImageFrame.ScaleImage">
            <summary>
            缩放后图片
            </summary>
        </member>
        <member name="T:HML.ImageSlide.AnimationStatus">
            <summary>
            动画状态
            </summary>
        </member>
        <member name="F:HML.ImageSlide.AnimationStatus.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="F:HML.ImageSlide.AnimationStatus.Await">
            <summary>
            间隔等待中
            </summary>
        </member>
        <member name="F:HML.ImageSlide.AnimationStatus.Slide">
            <summary>
            滑动中
            </summary>
        </member>
        <member name="T:HML.ImageSlideItem">
            <summary>
            ImageSlide选项
            </summary>
        </member>
        <member name="P:HML.ImageSlideItem.Text">
            <summary>
            图片标题文本
            </summary>
        </member>
        <member name="P:HML.ImageSlideItem.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:HML.ImageSlideItem.Tag">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="P:HML.ImageSlideItem.Owner">
            <summary>
            选项所属的控件
            </summary>
        </member>
        <member name="M:HML.ImageSlideItem.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.ImageSlideItem.Copy">
            <summary>
            复制选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.ImageSlideImageItemCollection">
             <summary>
            ImageSlide选项集合
             </summary>
        </member>
        <member name="T:HML.ImageSlideNavigationBar">
            <summary>
            ImageSlide导航栏
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.Visible">
             <summary>
            导航栏按钮显示方式
             </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.Size">
            <summary>
            按钮Size
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.LineThickness">
            <summary>
            按钮线条厚度
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.BackNormalColor">
             <summary>
            导航栏按钮背景颜色（正常）
             </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.LineNormalColor">
             <summary>
            导航栏按钮线条颜色（正常）
             </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.BackEnterColor">
             <summary>
            导航栏按钮背景颜色（鼠标进入）
             </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.LineEnterColor">
             <summary>
            导航栏按钮线条颜色（鼠标进入）
             </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.CurrentVisible">
            <summary>
            导航栏当前显示状态
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.PrevButton_Object">
            <summary>
            上一个按钮对象
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.PrevButton_Rectangle">
            <summary>
            上一个按钮rectf
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.PrevButton_LinePoint">
            <summary>
            上一个按钮线条点集合
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.PrevButton_MouseEnter">
            <summary>
            鼠标是否已进入上一个按钮
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.NextButton_Object">
            <summary>
            下一个按钮对象
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.NextButton_Rectangle">
            <summary>
            下一个按钮rectf
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.NextButton_LinePoint">
            <summary>
            下一个按钮线条点集合
            </summary>
        </member>
        <member name="P:HML.ImageSlideNavigationBar.NextButton_MouseEnter">
            <summary>
            鼠标是否已进入下一个按钮
            </summary>
        </member>
        <member name="M:HML.ImageSlideNavigationBar.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.ImageSlideNavigationBar.InitializeInvalidate">
            <summary>
            重新计算导航栏并刷新控件
            </summary>
        </member>
        <member name="T:HML.ImageSlideNavigationBarVisibility">
            <summary>
            ImageSlide导航栏显示方式
            </summary>
        </member>
        <member name="F:HML.ImageSlideNavigationBarVisibility.Never">
            <summary>
            不显示
            </summary>
        </member>
        <member name="F:HML.ImageSlideNavigationBarVisibility.Always">
            <summary>
            一直显示
            </summary>
        </member>
        <member name="F:HML.ImageSlideNavigationBarVisibility.Auto">
            <summary>
            鼠标进入才显示
            </summary>
        </member>
        <member name="T:HML.ImageSlideOrientations">
            <summary>
            ImageSlide图片播放方向
            </summary>
        </member>
        <member name="F:HML.ImageSlideOrientations.RightToLeft">
            <summary>
            由右往左
            </summary>
        </member>
        <member name="F:HML.ImageSlideOrientations.LeftToRight">
            <summary>
            由左往右
            </summary>
        </member>
        <member name="F:HML.ImageSlideOrientations.BottomToTop">
            <summary>
            由下往上
            </summary>
        </member>
        <member name="F:HML.ImageSlideOrientations.TopToBottom">
            <summary>
            由上往下
            </summary>
        </member>
        <member name="T:HML.ImageSlideTitleBar">
            <summary>
            ImageSlide标题栏
            </summary>
        </member>
        <member name="P:HML.ImageSlideTitleBar.Visible">
             <summary>
            是否显示
             </summary>
        </member>
        <member name="P:HML.ImageSlideTitleBar.Padding">
             <summary>
            内边距
             </summary>
        </member>
        <member name="P:HML.ImageSlideTitleBar.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.ImageSlideTitleBar.BackColor">
             <summary>
            背景颜色
             </summary>
        </member>
        <member name="P:HML.ImageSlideTitleBar.TextColor">
             <summary>
            文本颜色
             </summary>
        </member>
        <member name="P:HML.ImageSlideTitleBar.TextFont">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="M:HML.ImageSlideTitleBar.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="T:HML.IntAngle">
            <summary>
            Int角度控件
            </summary>
        </member>
        <member name="E:HML.IntAngle.AngleChanged">
            <summary>
            Angle值更改事件
            </summary>
        </member>
        <member name="P:HML.IntAngle.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HML.IntAngle.AngleVisible">
            <summary>
            是否显示角度文本
            </summary>
        </member>
        <member name="P:HML.IntAngle.Angle">
            <summary>
            角度值
            </summary>
        </member>
        <member name="P:HML.IntAngle.AllowLoopChanged">
            <summary>
            是否允许鼠标循环移动修改角度值
            </summary>
        </member>
        <member name="P:HML.IntAngle.PlateBackColor">
            <summary>
            表盘背景颜色
            </summary>
        </member>
        <member name="P:HML.IntAngle.PlateBackAreoColor">
            <summary>
            表盘背景玻璃颜色
            </summary>
        </member>
        <member name="P:HML.IntAngle.PlateBackAreoAngle">
            <summary>
            表盘背景玻璃颜色角度
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:HML.IntAngle.PointerSizeMagnification" -->
        <member name="P:HML.IntAngle.PointerColor">
            <summary>
            角度针颜色
            </summary>
        </member>
        <member name="P:HML.IntAngle.ReferenceAngleLineVisible">
            <summary>
            是否显示参考角度线
            </summary>
        </member>
        <member name="P:HML.IntAngle.ReferenceAngleLineSize">
            <summary>
            参考角度线Size
            </summary>
        </member>
        <member name="P:HML.IntAngle.ReferenceAngleLineColor">
            <summary>
            参考角度线颜色
            </summary>
        </member>
        <member name="P:HML.IntAngle.ReferenceAngle">
            <summary>
            角度针参考角度 (x轴开始)
            </summary>
        </member>
        <member name="F:HML.IntAngle.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.IntAngle.mousedownoangledisparity">
            <summary>
            当前鼠标已按下的角度针角度差距
            </summary>
        </member>
        <member name="F:HML.IntAngle.pointer_last_area">
            <summary>
            角度针上一次所在区域
            </summary>
        </member>
        <member name="F:HML.IntAngle.pointer_current_area">
            <summary>
            角度针当前所在区域
            </summary>
        </member>
        <member name="F:HML.IntAngle.pointer_lock_area">
            <summary>
            当前锁定区域（用于防止越过最大最小值，0为没有任何区域要锁定）
            </summary>
        </member>
        <member name="F:HML.IntAngle.contentPadding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="M:HML.IntAngle.GetPointerArea(System.Double)">
            <summary>
            获取角度针所在区域（由参考角度开始，90度为一个区，一个四个区域）
            </summary>
            <param name="angle">相对于参考角度的角度值</param>
            <returns></returns>
        </member>
        <member name="T:HML.LineProgress">
            <summary>
            条形进度控件
            </summary>
        </member>
        <member name="E:HML.LineProgress.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.LineProgress.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.LineProgress.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.LineProgress.BorderVisible">
             <summary>
            是否显示边框
             </summary>
        </member>
        <member name="P:HML.LineProgress.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.LineProgress.Thickness">
            <summary>
            进度条厚度
            </summary>
        </member>
        <member name="P:HML.LineProgress.TotalBackColor">
            <summary>
            进度条颜色
            </summary>
        </member>
        <member name="P:HML.LineProgress.ValueBackColor">
            <summary>
            进度条当前值颜色
            </summary>
        </member>
        <member name="P:HML.LineProgress.Value">
            <summary>
            进度值(0-100)
            </summary>
        </member>
        <member name="P:HML.LineProgress.ValueVisible">
            <summary>
            是否显示进度值文本
            </summary>
        </member>
        <member name="P:HML.LineProgress.ValueAlignment">
            <summary>
            进度值文本对齐方式
            </summary>
        </member>
        <member name="P:HML.LineProgress.Font">
            <summary>
            进度值文本字体
            </summary>
        </member>
        <member name="P:HML.LineProgress.ForeColor">
            <summary>
            进度值文本颜色
            </summary>
        </member>
        <member name="F:HML.LineProgress.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.LineProgress.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.LineProgress.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.LineProgress.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="F:HML.LineProgress.contentPadding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="M:HML.LineProgress.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.LineProgress.GetControlAutoHeight">
            <summary>
            根据字体计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.LineProgress.UpdateAutoControlSize(System.Boolean)">
            <summary>
            自动根据设置更新控件Size
            </summary>
            <param name="isInvalidate">是否刷新控件</param>
            <returns></returns>
        </member>
        <member name="T:HML.LoadWait">
            <summary>
            加载等待控件
            </summary>
        </member>
        <member name="E:HML.LoadWait.ActiveChanged">
            <summary>
            激活状态更改事件
            </summary>
        </member>
        <member name="P:HML.LoadWait.Active">
            <summary>
            是否已激活
            </summary>
        </member>
        <member name="P:HML.LoadWait.Style">
            <summary>
            显示风格
            </summary>
        </member>
        <member name="P:HML.LoadWait.BrushDiameter">
            <summary>
            画笔直径大小
            </summary>
        </member>
        <member name="P:HML.LoadWait.BrushColor">
            <summary>
            画笔颜色
            </summary>
        </member>
        <member name="F:HML.LoadWait.brushStartIndex">
            <summary>
            开始画笔索引
            </summary>
        </member>
        <member name="F:HML.LoadWait.brushCount">
            <summary>
            画笔的数量
            </summary>
        </member>
        <member name="F:HML.LoadWait.brushAngles">
            <summary>
            画笔角度
            </summary>
        </member>
        <member name="F:HML.LoadWait.brushColors">
            <summary>
            画笔颜色
            </summary>
        </member>
        <member name="F:HML.LoadWait.contentPadding">
            <summary>
            控件内边距
            </summary>
        </member>
        <member name="F:HML.LoadWait.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="F:HML.LoadWait.interval">
            <summary>
            动画时间间隔(毫秒)
            </summary>
        </member>
        <member name="M:HML.LoadWait.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.LoadWait.InitializeBrushsAngle">
            <summary>
            初始化选项角度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.LoadWait.InitializeBrushsColor">
            <summary>
            初始化选项颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.LoadWait.GetControlAutoSize">
            <summary>
            根据画笔大小计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.LoadWaitStyles">
            <summary>
             LoadWait显示风格
            </summary>
        </member>
        <member name="F:HML.LoadWaitStyles.Line">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:HML.LoadWaitStyles.Dot">
            <summary>
            圆球
            </summary>
        </member>
        <member name="T:HML.Masking">
            <summary>
            蒙版弹层
            </summary>
        </member>
        <member name="P:HML.Masking.DefaultMaskingSetting">
            <summary>
            加载等待蒙版全局配置
            </summary>
        </member>
        <member name="P:HML.Masking.MaskingObjectCollection">
            <summary>
            存放蒙版信息集合
            </summary>
        </member>
        <member name="P:HML.Masking.BrushCount">
            <summary>
            画笔的数量
            </summary>
        </member>
        <member name="F:HML.Masking.rotateTimer">
            <summary>
            旋转定时器
            </summary>
        </member>
        <member name="M:HML.Masking.Show(System.Windows.Forms.Form)">
            <summary>
            在指定窗体上显示蒙版弹层
            </summary>
            <param name="form">蒙版弹层拥有者</param>
        </member>
        <member name="M:HML.Masking.Show(System.Windows.Forms.Form,System.String)">
            <summary>
            在指定窗体上显示蒙版弹层
            </summary>
            <param name="form">蒙版弹层拥有者</param>
            <param name="text">文本</param>
        </member>
        <member name="M:HML.Masking.Show(System.Windows.Forms.Form,HML.MaskingSettings)">
            <summary>
            在指定窗体上显示蒙版弹层
            </summary>
            <param name="form">蒙版弹层拥有者</param>
            <param name="setting">蒙版弹层配置</param>
        </member>
        <member name="M:HML.Masking.Show(System.Windows.Forms.Form,System.String,HML.MaskingSettings)">
            <summary>
            在指定窗体上显示蒙版弹层
            </summary>
            <param name="form">蒙版弹层拥有者</param>
            <param name="text">文本</param>
            <param name="setting">蒙版弹层配置</param>
        </member>
        <member name="M:HML.Masking.Hide">
            <summary>
            隐藏所有蒙版弹层
            </summary>
        </member>
        <member name="M:HML.Masking.Hide(System.Windows.Forms.Form)">
            <summary>
            隐藏指定蒙版弹层
            </summary>
            <param name="form">蒙版弹层拥有者</param>
        </member>
        <member name="M:HML.Masking.Hide(HML.MaskingObject)">
            <summary>
            隐藏指定蒙版弹层
            </summary>
            <param name="mo">蒙版弹层信息存储对象</param>
        </member>
        <member name="M:HML.Masking.Hide(System.Collections.Generic.List{HML.MaskingObject})">
            <summary>
            隐藏蒙版弹层集合
            </summary>
            <param name="moList">蒙版弹层信息存储对象集合</param>
        </member>
        <member name="M:HML.Masking.UpdateText(System.Windows.Forms.Form,System.String)">
            <summary>
            更改蒙版弹层文本
            </summary>
            <param name="form">蒙版弹层拥有者</param>
            <param name="text">文本</param>
        </member>
        <member name="M:HML.Masking.ControlChainBindEvent(System.Windows.Forms.Control,HML.MaskingObject)">
            <summary>
            蒙版弹层拥有者所在控件链添加事件
            </summary>
            <param name="control">蒙版弹层拥有者</param>
            <param name="mo">蒙版弹层信息存储对象</param>
        </member>
        <member name="M:HML.Masking.rotateTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            旋转动画定时器事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.MaskingObject">
            <summary>
            蒙版弹层信息存储对象
            </summary>
        </member>
        <member name="P:HML.MaskingObject.MaskingNativeWindow">
            <summary>
            蒙版弹层
            </summary>
        </member>
        <member name="P:HML.MaskingObject.OwnerForm">
            <summary>
            蒙版弹层拥有者
            </summary>
        </member>
        <member name="P:HML.MaskingObject.ControlChain">
            <summary>
            蒙版弹层事件监听的控件链（蒙版弹层拥有者为第一个）
            </summary>
        </member>
        <member name="P:HML.MaskingObject.MaskingSetting">
            <summary>
            蒙版弹层配置 
            </summary>
        </member>
        <member name="P:HML.MaskingObject.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:HML.MaskingObject.AnimationTime">
            <summary>
            加载动画已累加的时间
            </summary>
        </member>
        <member name="P:HML.MaskingObject.BrushStartIndex">
            <summary>
            加载动画画笔开始索引
            </summary>
        </member>
        <member name="T:HML.MaskingSettings">
            <summary>
            蒙版弹层配置
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.Style">
            <summary>
            蒙版弹层显示风格
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.Padding">
            <summary>
            蒙版弹层拥有者内边距（相对于拥有者工作区） 
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.BackColor">
            <summary>
            蒙版弹层背景颜色 
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.BrushColor">
            <summary>
            加载动画画笔颜色
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.BrushSize">
            <summary>
            加载动画画笔大小
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.TextAlignment">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.TextFont">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.TextColor">
            <summary>
            文本颜色 
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.BrushAngles">
            <summary>
            加载动画画笔角度集合
            </summary>
        </member>
        <member name="P:HML.MaskingSettings.BrushColors">
            <summary>
            加载动画画笔颜色集合
            </summary>
        </member>
        <member name="M:HML.MaskingSettings.#ctor(HML.MaskingStyles,System.Windows.Forms.Padding,System.Drawing.Color,System.Drawing.Color,System.String,HML.MaskingTextAlignment,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="style">蒙版弹层显示风格</param>
            <param name="padding">蒙版弹层拥有者内边距（相对于拥有者工作区） </param>
            <param name="backColor">蒙版弹层背景颜色</param>
            <param name="brushColor">加载动画画笔颜色</param>
            <param name="text">文本</param>
            <param name="textAlignment">文本对齐方式</param>
            <param name="textFont">文本字体</param>
            <param name="textColor">文本颜色</param>
        </member>
        <member name="M:HML.MaskingSettings.InitializeBrushsAngle">
            <summary>
            初始化画笔角度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.MaskingSettings.InitializeBrushsColor">
            <summary>
            初始化画笔颜色
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.MaskingStyles">
            <summary>
            蒙版弹层显示风格
            </summary>
        </member>
        <member name="F:HML.MaskingStyles.Line">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:HML.MaskingStyles.Dot">
            <summary>
            圆点
            </summary>
        </member>
        <member name="T:HML.MaskingTextAlignment">
            <summary>
            蒙版弹层文本对齐方式
            </summary>
        </member>
        <member name="F:HML.MaskingTextAlignment.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:HML.MaskingTextAlignment.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="T:HML.Meter">
            <summary>
            仪表控件
            </summary>
        </member>
        <member name="E:HML.Meter.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="E:HML.Meter.ValueOverflow">
            <summary>
            Value值溢出事件
            </summary>
        </member>
        <member name="P:HML.Meter.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.Meter.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.Meter.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HML.Meter.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HML.Meter.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:HML.Meter.AllowOverflow">
            <summary>
            是否允许Value值溢出显示
            </summary>
        </member>
        <member name="P:HML.Meter.Style">
            <summary>
            风格
            </summary>
        </member>
        <member name="P:HML.Meter.PlateOutBorderThickness">
            <summary>
            仪表盘外边框厚度
            </summary>
        </member>
        <member name="P:HML.Meter.PlateOutBorderColor">
            <summary>
            仪表盘外边框颜色
            </summary>
        </member>
        <member name="P:HML.Meter.PlateInnerBorderThickness">
            <summary>
            仪表盘内边框厚度
            </summary>
        </member>
        <member name="P:HML.Meter.PlateInnerBorderColor">
            <summary>
            仪表盘内边框颜色
            </summary>
        </member>
        <member name="P:HML.Meter.PlateBackColor">
            <summary>
            仪表盘背景颜色
            </summary>
        </member>
        <member name="P:HML.Meter.PlateBackAreoColor">
            <summary>
            仪表盘背景玻璃颜色
            </summary>
        </member>
        <member name="P:HML.Meter.ArcAngleSize">
            <summary>
            仪表弧度大小 (只限于 MeterStyles.None 风格)
            </summary>
        </member>
        <member name="P:HML.Meter.ValueArcVisible">
            <summary>
            是否显示值弧
            </summary>
        </member>
        <member name="P:HML.Meter.ValueArcThickness">
            <summary>
            值弧厚度
            </summary>
        </member>
        <member name="P:HML.Meter.ValueArcBackColor">
            <summary>
            值弧厚度背景颜色
            </summary>
        </member>
        <member name="P:HML.Meter.ValueArcForeColor">
            <summary>
            值弧前景颜色
            </summary>
        </member>
        <member name="P:HML.Meter.GradualArcVisible">
            <summary>
            是否显示渐变弧
            </summary>
        </member>
        <member name="P:HML.Meter.GradualArcThickness">
            <summary>
            渐变弧厚度
            </summary>
        </member>
        <member name="P:HML.Meter.GradualArcColorItems">
            <summary>
            渐变弧渐变颜色集合
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainFrequency">
            <summary>
            主刻度线间的位置
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainLineSize">
            <summary>
            主刻度线Size
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainLineColor">
            <summary>
            主刻度线颜色
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainTextPlaces">
            <summary>
            主刻度值文本保留位数
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainTextMargin">
            <summary>
            主刻度文本外边距
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainTextFont">
            <summary>
            主刻度文本字体
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMainTextColor">
            <summary>
            主刻度文本颜色
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMinorCount">
            <summary>
            一个主刻度分割成多少个子刻度
            </summary>
        </member>
        <member name="P:HML.Meter.MarkMinorLineColor">
            <summary>
            子刻度颜色
            </summary>
        </member>
        <member name="P:HML.Meter.PointerSize">
            <summary>
            指针Size
            </summary>
        </member>
        <member name="P:HML.Meter.PointerColor">
            <summary>
            指针颜色
            </summary>
        </member>
        <member name="P:HML.Meter.PointerCapColor">
            <summary>
            针帽颜色
            </summary>
        </member>
        <member name="P:HML.Meter.PointerCapAreoColor">
            <summary>
            针帽玻璃颜色
            </summary>
        </member>
        <member name="P:HML.Meter.ValueVisible">
            <summary>
            是否显示值文本
            </summary>
        </member>
        <member name="P:HML.Meter.ValueOffset">
            <summary>
            值文本坐标垂直方向偏移量
            </summary>
        </member>
        <member name="P:HML.Meter.ValuePlaces">
            <summary>
            值文本保留位数
            </summary>
        </member>
        <member name="P:HML.Meter.ValueFont">
            <summary>
            值文本字体
            </summary>
        </member>
        <member name="P:HML.Meter.ValueColor">
            <summary>
            值文本颜色
            </summary>
        </member>
        <member name="F:HML.Meter.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.Meter.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.Meter.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.Meter.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="M:HML.Meter.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.Meter.GetMeterTopHeight">
            <summary>
            获取仪表上半高度高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.Meter.GetMeterBottomHeight">
            <summary>
            获取仪表下半高度高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.Meter.ConvertTextPoint(System.Drawing.PointF,System.Drawing.SizeF,System.Single)">
            <summary>
            转换文本坐标
            </summary>
            <param name="text_point">文本原始坐标</param>
            <param name="text_size">文本Size</param>
            <param name="text_angle">文本所在角度</param>
            <returns></returns>
        </member>
        <member name="T:HML.MeterGradualColor">
            <summary>
            Meter渐变颜色
            </summary>
        </member>
        <member name="P:HML.MeterGradualColor.Position">
            <summary>
            渐变范围值 0-1
            </summary>
        </member>
        <member name="P:HML.MeterGradualColor.Color">
            <summary>
            渐变范围值对应颜色
            </summary>
        </member>
        <member name="T:HML.MeterGradualColorCollection">
            <summary>
            Meter渐变颜色集合
            </summary>
        </member>
        <member name="T:HML.MeterStyles">
            <summary>
            Meter背景风格
            </summary>
        </member>
        <member name="F:HML.MeterStyles.RoundPlate">
            <summary>
            圆盘 （圆弧固定位270度）
            </summary>
        </member>
        <member name="F:HML.MeterStyles.Meter">
            <summary>
            仪表 （圆弧固定位180度）
            </summary>
        </member>
        <member name="F:HML.MeterStyles.None">
            <summary>
            空（圆弧由ArcAngleSize 决定）
            </summary>
        </member>
        <member name="T:HML.MultidropSlide">
            <summary>
            多点滑块控件
            </summary>
        </member>
        <member name="E:HML.MultidropSlide.ValueChanged">
            <summary>
            滑块值更改事件
            </summary>
        </member>
        <member name="E:HML.MultidropSlide.ValueFormat">
            <summary>
            滑块值格式化事件
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.ActivateColor">
            <summary>
            滑块激活的虚线框颜色（通用）
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.Orientation">
            <summary>
            显示方位
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.Items">
            <summary>
            滑块集合
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.SmallChange">
            <summary>
            键盘Up、Down 或 鼠标滚轮上下键移动 最小间隔值
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.PoleRoundEnabled">
            <summary>
            滑杆是否为圆角
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.PoleThickness">
            <summary>
            滑杆厚度
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.PoleAnchorMargin">
            <summary>
            滑杆停靠外边距
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.PoleBackColor">
            <summary>
            滑杆背景颜色
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.LumpInfluencedEnabled">
            <summary>
            滑块是否启用受影响功能（可以通过键盘Ctrl+UpDown 或鼠标右键拖动 同时对多个滑块同时更改值）
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.LumpDiameter">
            <summary>
            滑块直径
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.LumpBorderColor">
            <summary>
            滑块边框颜色（通用）
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.LumpBackColor">
            <summary>
            滑块背景颜色
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.LumpLockColor">
            <summary>
            滑块锁定颜色
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipTitleVisible">
            <summary>
            是否显示标题提示
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipTitleLineSpace">
            <summary>
            标题提示与滑块间距
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipTitleFont">
            <summary>
            标题提示文本字体
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipTitleBackColor">
            <summary>
            标题提示背景颜色
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipTitleForeColor">
            <summary>
            标题提示文本颜色
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipValueVisible">
            <summary>
            是否显示值提示
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipValueLineSpace">
            <summary>
            值提示与滑块间距
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipValueFont">
            <summary>
            值提示文本字体
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipValueBackColor">
            <summary>
            值提示背景颜色
            </summary>
        </member>
        <member name="P:HML.MultidropSlide.TipValueForeColor">
            <summary>
            值提示文本颜色
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.activatedState">
            <summary>
            控件激活显示状态（配合Focused 、ShowFocusCues、activatedIndex使用）
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.activatedIndex">
            <summary>
            控件激活状态选项索引
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.mousedownobjectindex">
            <summary>
            当前鼠标已按下的对象索引
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.mousedownobjectvalue">
            <summary>
            当前鼠标已按下的对象的value
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.mousedownpoint">
            <summary>
            当前鼠标已按下的坐标
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.contentPadding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.pole_start_point">
            <summary>
            滑杆的开始坐标（以滑块矩形中心点为参考点）
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.pole_end_point">
            <summary>
            滑杆的结束坐标（以滑块矩形中心点为参考点）
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.tipTitleInterval">
            <summary>
            标题提示间距
            </summary>
        </member>
        <member name="F:HML.MultidropSlide.tipValueInterval">
            <summary>
            值提示间距
            </summary>
        </member>
        <member name="M:HML.MultidropSlide.InitializeRectangle">
            <summary>
            初始化所有滑块Rectangle
            </summary>
        </member>
        <member name="M:HML.MultidropSlide.InitializeLumpRectangle(HML.MultidropSlideLump,System.Int32,System.Decimal,System.Drawing.Rectangle,HML.MultidropSlidePoleAnchorMargin,System.Int32,System.Int32)">
            <summary>
            初始化指定滑块Rectangle
            </summary>
            <param name="lump">指定滑块</param>
            <param name="lump_index">指定滑块的索引</param>
            <param name="maxminvalue_scope">最大最小值的值间距</param>
            <param name="content_rect">内容区域</param>
            <param name="scale_poleAnchorMargin">MultidropSlide滑杆停靠外边距</param>
            <param name="scale_lumpRadius">滑块半径</param>
            <param name="scale_lumpDiameter">滑块直径</param>
        </member>
        <member name="M:HML.MultidropSlide.InitializeLumpRectangle(HML.MultidropSlideLump)">
            <summary>
            初始化指定滑块Rectangle
            </summary>
            <param name="lump">指定滑块</param>
        </member>
        <member name="T:HML.MultidropSlideLump">
            <summary>
            滑块
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.Key">
            <summary>
            滑块Key（必须唯一，可用于索引）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.Title">
            <summary>
            滑块标题
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.SelfValue">
            <summary>
            滑块值（只修改自己值和触发自己事件，不影响其他滑块值）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.InfluencedValue">
            <summary>
            滑块值（修改自己值和触发自己事件，同时影响其他滑块值，直到遇到已锁滑块才终止影响）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.LumpActivateColor">
            <summary>
            滑块激活的虚线框颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.LumpBorderColor">
            <summary>
            滑块边框颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.LumpBackColor">
            <summary>
            滑块颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.LumpLocked">
            <summary>
            滑块是否已锁定
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.LumpLockColor">
            <summary>
            滑块锁颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipTitleBackColor">
            <summary>
            提示标题背景颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipTitleForeColor">
            <summary>
            提示标题文本颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipValueBackColor">
            <summary>
            提示值背景颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipValueForeColor">
            <summary>
            提示值文本颜色（空值通用通用配置）
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.Owner">
            <summary>
            选项所属的控件
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.LumpRect">
            <summary>
            滑块rect
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.Lump_Start_Point">
            <summary>
            滑块开始坐标(滑块中心为参考点)
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.Lump_End_Point">
            <summary>
            滑块结束坐标(滑块中心为参考点)
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipTitleRect">
            <summary>
            提示标题rect
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipTitleStartPoint">
            <summary>
            提示标题连线的开始坐标
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipTitleEndPoint">
            <summary>
            提示标题连线的结束坐标
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipValueRect">
            <summary>
            提示值rect
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipValueStartPoint">
            <summary>
            提示值连线的开始坐标
            </summary>
        </member>
        <member name="P:HML.MultidropSlideLump.TipValueEndPoint">
            <summary>
            提示值连线的结束坐标
            </summary>
        </member>
        <member name="M:HML.MultidropSlideLump.OnlySetValue(System.Double)">
            <summary>
            修改滑块值，但不会触发任何事情
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:HML.MultidropSlideLump.ChangeSelfValue(System.Double,System.Boolean)">
            <summary>
            修改滑块值（只修改自己值和触发自己事件，不影响其他滑块值）
            </summary>
            <param name="value">要修改的滑块值</param>
            <param name="ignoreLocked">是否忽略自己的滑块锁</param>
            <returns></returns>
        </member>
        <member name="M:HML.MultidropSlideLump.ChangeInfluencedValue(System.Double,System.Boolean)">
            <summary>
            修改滑块值（修改自己值和触发自己事件，同时影响其他滑块值，直到遇到已锁滑块才终止影响）
            </summary>
            <param name="value">要修改的滑块值</param>
            <param name="ignoreLocked">是否忽略自己的滑块锁</param>
            <returns></returns>
        </member>
        <member name="M:HML.MultidropSlideLump.Copy">
            <summary>
            复制滑块
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.MultidropSlideLumpCollection">
            <summary>
            滑块集合
            </summary>
        </member>
        <member name="T:HML.MultidropSlideOrientations">
            <summary>
            MultidropSlide显示方位
            </summary>
        </member>
        <member name="F:HML.MultidropSlideOrientations.HorizontalTop">
             <summary>
            水平放置靠近上边
             </summary>
        </member>
        <member name="F:HML.MultidropSlideOrientations.HorizontalBottom">
            <summary>
            水平放置靠近下边
            </summary>
        </member>
        <member name="F:HML.MultidropSlideOrientations.VerticalLeft">
            <summary>
            垂直放置靠近左边
            </summary>
        </member>
        <member name="F:HML.MultidropSlideOrientations.VerticalRight">
            <summary>
            垂直放置靠近右边
            </summary>
        </member>
        <member name="T:HML.MultidropSlideValueChangedEventArgs">
            <summary>
            滑块值更改事件参数
            </summary>
        </member>
        <member name="P:HML.MultidropSlideValueChangedEventArgs.TriggerLump">
            <summary>
            触发ValueChanged的滑块
            </summary>
        </member>
        <member name="P:HML.MultidropSlideValueChangedEventArgs.CurrentLump">
            <summary>
            正处于ValueChanged的滑块
            </summary>
        </member>
        <member name="P:HML.MultidropSlideValueChangedEventArgs.InfluencedLumps">
            <summary>
            受ValueChanged影响的的其他滑块集合
            </summary>
        </member>
        <member name="M:HML.MultidropSlideValueChangedEventArgs.#ctor(HML.MultidropSlideLump,HML.MultidropSlideLump,System.Collections.Generic.List{HML.MultidropSlideLump})">
            <summary>
            
            </summary>
            <param name="triggerLump">触发ValueChanged的滑块</param>
            <param name="currentLump">正处于ValueChanged的滑块</param>
            <param name="influencedLumps">受ValueChanged影响的的其他滑块集合</param>
        </member>
        <member name="T:HML.MultidropSlideValueFormatEventArgs">
            <summary>
            滑块值格式化事件参数
            </summary>
        </member>
        <member name="P:HML.MultidropSlideValueFormatEventArgs.Lump">
            <summary>
            当前滑块
            </summary>
        </member>
        <member name="P:HML.MultidropSlideValueFormatEventArgs.ValueFormat">
            <summary>
            格式化后的值文本
            </summary>
        </member>
        <member name="M:HML.MultidropSlideValueFormatEventArgs.#ctor(HML.MultidropSlideLump,System.String)">
            <summary>
            
            </summary>
            <param name="lump">当前滑块</param>
            <param name="valueFormat">格式化后的值文本</param>
        </member>
        <member name="T:HML.BreadcrumbBar">
            <summary>
            面包屑导航控件
            </summary>
        </member>
        <member name="E:HML.BreadcrumbBar.ItemDeselecting">
            <summary>
            导航选项取消选中时事件
            </summary>
        </member>
        <member name="E:HML.BreadcrumbBar.ItemDeselected">
            <summary>
            导航选项取消选中后事件
            </summary>
        </member>
        <member name="E:HML.BreadcrumbBar.ItemSelecting">
            <summary>
            导航选项选中时事件
            </summary>
        </member>
        <member name="E:HML.BreadcrumbBar.ItemSelected">
            <summary>
            导航选项选中后事件
            </summary>
        </member>
        <member name="E:HML.BreadcrumbBar.SelectedIndexChanged">
            <summary>
            导航选项选中索引更改后事件
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.SymbolColor">
            <summary>
            分隔符号颜色(只限于 Symbol、ObliqueLine)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.Style">
            <summary>
            风格
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.Items">
            <summary>
            选项集合
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemAutoWidth">
             <summary>
            选项是否自动宽度
             </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemFixedWidth">
             <summary>
            选项固定宽度
             </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemMinWidth">
             <summary>
            选项最小宽度(自动宽度模式下)
             </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemMaxWidth">
             <summary>
            选项最大宽度(自动宽度模式下)
             </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemFirstFull">
             <summary>
            第一个选项是否填满(只限于 Arrows、Parallelogram、RoundCap、Leaf)
             </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemSpace">
             <summary>
            选项间隔距离
             </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemTextSpace">
            <summary>
            选项文本垂直方向间距
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemBackNormalColor">
            <summary>
            选项背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemTextNormalColor">
            <summary>
            选项文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemBackEnterColor">
            <summary>
            选项背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemTextEnterColor">
            <summary>
            选项文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemBackSelectedColor">
            <summary>
            选项背景颜色（选中）
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.ItemTextSelectedColor">
            <summary>
            选项文本颜色（选中）
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.SelectedIndex">
            <summary>
            已选中选项索引
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.SelectedItem">
            <summary>
            已选中选项
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBar.Font">
            <summary>
            选项文本字体
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBar.activatedState">
            <summary>
            控件激活显示状态（配合Focused 、ShowFocusCues、activatedIndex使用）
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBar.activatedIndex">
            <summary>
            控件激活状态选项索引(-1 没有、>=0 选项)
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBar.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBar.mouseenterobject">
            <summary>
            当前鼠标已进入的对象
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBar.content_padding">
            <summary>
            开启抗锯齿功能xy都会增大1px
            </summary>
        </member>
        <member name="M:HML.BreadcrumbBar.InitializeRectangle">
            <summary>
            初始化rect
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:HML.BreadcrumbBar.DrawItem(System.Drawing.Graphics,HML.BreadcrumbBarItem,System.Int32,System.Drawing.SolidBrush,System.Drawing.SolidBrush)" -->
        <member name="M:HML.BreadcrumbBar.GetControlAutoHeight">
            <summary>
            根据字体计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.BreadcrumbBarItem">
            <summary>
            面包屑导航选项
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.BackNormalColor">
            <summary>
            选项背景颜色（正常）(空值表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.TextNormalColor">
            <summary>
            选项文本颜色（正常）(空值表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.BackEnterColor">
            <summary>
            选项背景颜色（鼠标进入）(空值表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.TextEnterColor">
            <summary>
            选项文本颜色（鼠标进入）(空值表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.BackSelectedColor">
            <summary>
            选项背景颜色（选中）(空值表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.TextSelectedColor">
            <summary>
            选项文本颜色（选中）(空值表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.Tag">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.Owner">
            <summary>
            选项所属的控件
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.BackRectF">
            <summary>
            选项背景RectF
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.TextSize">
            <summary>
            选项文字SizeF
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.SymbolRectF">
            <summary>
            符号RectF
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItem.Path">
            <summary>
            不规则图形路径
            </summary>
        </member>
        <member name="M:HML.BreadcrumbBarItem.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.BreadcrumbBarItem.InitializeInvalidate">
            <summary>
            重新计算并刷新控件
            </summary>
        </member>
        <member name="M:HML.BreadcrumbBarItem.Copy">
            <summary>
            复制选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.BreadcrumbBarItemCollection">
            <summary>
            面包屑导航选项集合
            </summary>
        </member>
        <member name="T:HML.BreadcrumbBarItemOperatedEventArgs">
            <summary>
            面包屑导航选项操作后事件参数
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItemOperatedEventArgs.Item">
            <summary>
            导航选项
            </summary>
        </member>
        <member name="M:HML.BreadcrumbBarItemOperatedEventArgs.#ctor(HML.BreadcrumbBarItem)">
            <summary>
            
            </summary>
            <param name="item">导航选项</param>
        </member>
        <member name="T:HML.BreadcrumbBarItemOperatingEventArgs">
            <summary>
            面包屑导航选项操作时事件参数
            </summary>
        </member>
        <member name="P:HML.BreadcrumbBarItemOperatingEventArgs.Item">
            <summary>
            导航选项
            </summary>
        </member>
        <member name="M:HML.BreadcrumbBarItemOperatingEventArgs.#ctor(HML.BreadcrumbBarItem)">
            <summary>
            
            </summary>
            <param name="item">导航选项</param>
        </member>
        <member name="T:HML.BreadcrumbBarStyles">
            <summary>
            面包屑导航选项风格
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.Arrows">
            <summary>
            箭头
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.Parallelogram">
            <summary>
            平行四边形
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.RoundCap">
            <summary>
            圆帽
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.Leaf">
            <summary>
            叶子
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.Quadrangle">
            <summary>
            四边形
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.Symbol">
            <summary>
            符号
            </summary>
        </member>
        <member name="F:HML.BreadcrumbBarStyles.ObliqueLine">
            <summary>
            斜线
            </summary>
        </member>
        <member name="T:HML.PatternLock">
            <summary>
             图案手势控件
            </summary>
        </member>
        <member name="E:HML.PatternLock.Complete">
            <summary>
            手势完成事件
            </summary>
        </member>
        <member name="P:HML.PatternLock.TrajectoryVisible">
            <summary>
            是否显示手势轨迹
            </summary>
        </member>
        <member name="P:HML.PatternLock.NormalColor">
            <summary>
            图案颜色（正常）
            </summary>
        </member>
        <member name="P:HML.PatternLock.ErrorColor">
            <summary>
            图案颜色（错误）
            </summary>
        </member>
        <member name="F:HML.PatternLock.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.PatternLock.mousedownpoint">
            <summary>
            当前鼠标已按下的坐标
            </summary>
        </member>
        <member name="F:HML.PatternLock.operateStatus">
            <summary>
            操作状态
            </summary>
        </member>
        <member name="F:HML.PatternLock.selectedPatternLockItems">
            <summary>
            已选中选项
            </summary>
        </member>
        <member name="F:HML.PatternLock.patternLockItems">
            <summary>
            选项集合
            </summary>
        </member>
        <member name="M:HML.PatternLock.Reset">
            <summary>
            重置控件状态
            </summary>
        </member>
        <member name="M:HML.PatternLock.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.PatternLock.CompleteTrigger">
            <summary>
            操作完成触发
            </summary>
        </member>
        <member name="T:HML.PatternLock.PatternLockItem">
            <summary>
            解锁图案选项
            </summary>
        </member>
        <member name="P:HML.PatternLock.PatternLockItem.OutRect">
            <summary>
            图案外rect
            </summary>
        </member>
        <member name="P:HML.PatternLock.PatternLockItem.InRect">
            <summary>
            图案内rect
            </summary>
        </member>
        <member name="P:HML.PatternLock.PatternLockItem.GP">
            <summary>
            图案path
            </summary>
        </member>
        <member name="P:HML.PatternLock.PatternLockItem.CenterPoint">
            <summary>
            图案中心point
            </summary>
        </member>
        <member name="P:HML.PatternLock.PatternLockItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:HML.PatternLock.PatternLockOperateStatus">
            <summary>
            PatternLock操作状态
            </summary>
        </member>
        <member name="F:HML.PatternLock.PatternLockOperateStatus.Normal">
            <summary>
            正常(无任何操作)
            </summary>
        </member>
        <member name="F:HML.PatternLock.PatternLockOperateStatus.Sliding">
            <summary>
            手势滑动中
            </summary>
        </member>
        <member name="F:HML.PatternLock.PatternLockOperateStatus.Complete">
            <summary>
            手势刚完成
            </summary>
        </member>
        <member name="F:HML.PatternLock.PatternLockOperateStatus.Error">
            <summary>
            错误(无任何操作)
            </summary>
        </member>
        <member name="T:HML.PatternLockCompleteEventArgs">
            <summary>
            PatternLock手势完成事件参数
            </summary>
        </member>
        <member name="P:HML.PatternLockCompleteEventArgs.Value">
            <summary>
            手势操作结果
            </summary>
        </member>
        <member name="P:HML.PatternLockCompleteEventArgs.Result">
            <summary>
            返回操作结果（影响控件状态）
            </summary>
        </member>
        <member name="M:HML.PatternLockCompleteEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value">手势操作结果</param>
            <param name="result">返回操作结果（影响控件状态）</param>
        </member>
        <member name="T:HML.GifBox">
            <summary>
            动态图片显示控件
            </summary>
        </member>
        <member name="E:HML.GifBox.ImageChanged">
            <summary>
            图片更改事件
            </summary>
        </member>
        <member name="E:HML.GifBox.FrameIndexChanged">
            <summary>
            活动帧的索引更改事件
            </summary>
        </member>
        <member name="P:HML.GifBox.BorderVisible">
             <summary>
            是否显示边框
             </summary>
        </member>
        <member name="P:HML.GifBox.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.GifBox.IsAnimation">
            <summary>   
            是否为动态图片   
            </summary>  
        </member>
        <member name="P:HML.GifBox.Image">
            <summary>   
            要显示的图片   
            </summary>
        </member>
        <member name="P:HML.GifBox.FrameCount">
            <summary>   
            图片总帧数  
            </summary>  
        </member>
        <member name="P:HML.GifBox.CurrentFrame">
            <summary>   
            当前播放的帧索引   
            </summary>   
        </member>
        <member name="F:HML.GifBox.frameDimension">
            <summary>
            图像的框架维度的属性
            </summary>
        </member>
        <member name="F:HML.GifBox.isruning">
            <summary>
            是否已开启动画播放
            </summary>
        </member>
        <member name="M:HML.GifBox.StartAnimation">
            <summary>   
            开始循环播放动态图片   
            </summary>   
        </member>
        <member name="M:HML.GifBox.StopAnimation">
            <summary>   
            停止循环播放动态图片  
            </summary>   
        </member>
        <member name="M:HML.GifBox.Image_FrameChanged(System.Object,System.EventArgs)">
            <summary>
            当前帧更改事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.GifBox.ResetImagetFrameInfo">
            <summary>
            重置图片信息
            </summary>
        </member>
        <member name="T:HML.GifBoxFrameIndexChangedEventArgs">
            <summary>
            GifBox图片帧的索引更改事件参数
            </summary>
        </member>
        <member name="P:HML.GifBoxFrameIndexChangedEventArgs.CurrentFrameIndex">
            <summary>
            当前帧的索引
            </summary>
        </member>
        <member name="T:HML.PieceProgress">
            <summary>
            分块进度控件
            </summary>
        </member>
        <member name="E:HML.PieceProgress.PieceStatusChanged">
            <summary>
            块状态更改事件
            </summary>
        </member>
        <member name="P:HML.PieceProgress.PieceSize">
            <summary>
            块大小(像素)
            </summary>
        </member>
        <member name="P:HML.PieceProgress.PieceCount">
            <summary>
            块数量
            </summary>
        </member>
        <member name="P:HML.PieceProgress.PieceNormalColor">
            <summary>
            块颜色（正常）
            </summary>
        </member>
        <member name="P:HML.PieceProgress.PieceHandleColor">
            <summary>
            块颜色（处理中）
            </summary>
        </member>
        <member name="P:HML.PieceProgress.PieceSuccessColor">
            <summary>
            块颜色（成功）
            </summary>
        </member>
        <member name="P:HML.PieceProgress.PieceErrorColor">
            <summary>
            块颜色（失败）
            </summary>
        </member>
        <member name="P:HML.PieceProgress.GridColor">
            <summary>
            网格颜色
            </summary>
        </member>
        <member name="F:HML.PieceProgress.pieceList">
            <summary>
            块集合
            </summary>
        </member>
        <member name="M:HML.PieceProgress.GetPieceStatus(System.Int32)">
            <summary>
            获取指定块的状态
            </summary>
            <param name="index">块索引</param>
        </member>
        <member name="M:HML.PieceProgress.SetPieceStatus(System.Int32,HML.PieceProgressStatus)">
            <summary>
            设置指定块的状态
            </summary>
            <param name="index">块索引</param>
            <param name="status">要设置块状态</param>
        </member>
        <member name="M:HML.PieceProgress.SetPieceStatus(System.Int32[],HML.PieceProgressStatus)">
            <summary>
            设置指定块的状态
            </summary>
            <param name="indexArr">块索引集合</param>
            <param name="status">要设置块状态</param>
        </member>
        <member name="M:HML.PieceProgress.SetPieceStatus(System.Int32[],HML.PieceProgressStatus[])">
            <summary>
            设置指定块的状态
            </summary>
            <param name="indexArr">块索引集合</param>
            <param name="statusArr">要设置块状态集合</param>
        </member>
        <member name="M:HML.PieceProgress.SetAllPieceStatus(HML.PieceProgressStatus)">
            <summary>
            设置所有块为统一状态
            </summary>
            <param name="status">要设置的状态</param>
        </member>
        <member name="M:HML.PieceProgress.GetIndexList(HML.PieceProgressStatus)">
            <summary>
            获取指定状态的块索引集合
            </summary>
            <param name="status">指定状态</param>
            <returns></returns>
        </member>
        <member name="M:HML.PieceProgress.GetIndexListCount(HML.PieceProgressStatus)">
            <summary>
            获取指定状态的块总数
            </summary>
            <param name="status">指定状态</param>
            <returns></returns>
        </member>
        <member name="M:HML.PieceProgress.InitializePiece(System.Int32)">
            <summary>
            根据指定数量创建块集合
            </summary>
            <param name="count"></param>
        </member>
        <member name="T:HML.PieceProgressStatusChangedEventArgs">
            <summary>
            PieceProgress块状态更改事件参数
            </summary>
        </member>
        <member name="P:HML.PieceProgressStatusChangedEventArgs.IsAllSet">
            <summary>
            是否统一设置
            </summary>
        </member>
        <member name="P:HML.PieceProgressStatusChangedEventArgs.IndexArr">
            <summary>
            块索引
            </summary>
        </member>
        <member name="P:HML.PieceProgressStatusChangedEventArgs.OldStatusArr">
            <summary>
            块更改前状态
            </summary>
        </member>
        <member name="P:HML.PieceProgressStatusChangedEventArgs.NewStatusArr">
            <summary>
            块更改后状态
            </summary>
        </member>
        <member name="M:HML.PieceProgressStatusChangedEventArgs.#ctor(System.Boolean,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            
            </summary>
            <param name="isAllSet">是否统一设置</param>
            <param name="indexArr">块索引集合</param>
            <param name="oldStatusArr">块更改前状态集合</param>
            <param name="newStatusArr">块更改后状态集合</param>
        </member>
        <member name="T:HML.PieceProgressStatus">
            <summary>
            PieceProgress块状态
            </summary>
        </member>
        <member name="F:HML.PieceProgressStatus.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:HML.PieceProgressStatus.Handle">
            <summary>
            处理中
            </summary>
        </member>
        <member name="F:HML.PieceProgressStatus.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:HML.PieceProgressStatus.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="T:HML.Procedure">
            <summary>
            步骤流程控件
            </summary>
        </member>
        <member name="E:HML.Procedure.ActiveIndexChanged">
            <summary>
            已激活到的流程索引更改事件
            </summary>
        </member>
        <member name="P:HML.Procedure.Orientation">
            <summary>
            流程节点方向位置
            </summary>
        </member>
        <member name="P:HML.Procedure.ActiveIndex">
            <summary>
            已激活到的流程节点索引
            </summary>
        </member>
        <member name="P:HML.Procedure.Items">
            <summary>
            流程节点集合
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowSize">
            <summary>
            流程节点Size
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowLineSize">
            <summary>
            流程节点间隔线Size
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowLineNormalColor">
            <summary>
            流程节点间隔线颜色（正常）
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowLineActiveColor">
            <summary>
            流程节点间隔线颜色（已激活）
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowBackNormalColor">
            <summary>
            流程节点背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowBackActiveColor">
            <summary>
            流程节点背景颜色（已激活）
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowIndexVisible">
            <summary>
            是否显示流程节点索引
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowIndexNormalColor">
            <summary>
            流程节点索引颜色（正常）
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowIndexActiveColor">
            <summary>
            流程节点索引颜色（已激活）
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowTextOffset">
            <summary>
            流程节点文本间距偏移量
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowTextFont">
            <summary>
            流程节点文本字体
            </summary>
        </member>
        <member name="P:HML.Procedure.FlowTextColor">
            <summary>
            流程节点文本颜色
            </summary>
        </member>
        <member name="P:HML.Procedure.TipVisible">
            <summary>
            是否显示提示信息
            </summary>
        </member>
        <member name="P:HML.Procedure.TipMaxSize">
            <summary>
            提示信息最大Size
            </summary>
        </member>
        <member name="P:HML.Procedure.TipMinSize">
            <summary>
            提示信息最小Size
            </summary>
        </member>
        <member name="P:HML.Procedure.TipBorderColor">
            <summary>
            提示信息背景颜色
            </summary>
        </member>
        <member name="P:HML.Procedure.TipBackColor">
            <summary>
            提示信息背景颜色
            </summary>
        </member>
        <member name="P:HML.Procedure.TipTextColor">
            <summary>
            提示信息文本颜色
            </summary>
        </member>
        <member name="P:HML.Procedure.TipTextFont">
            <summary>
            提示信息文本字体
            </summary>
        </member>
        <member name="F:HML.Procedure.tooltip">
            <summary>
             提示信息
            </summary>
        </member>
        <member name="F:HML.Procedure.currentTipIndex">
            <summary>
            当前提示信息索引
            </summary>
        </member>
        <member name="F:HML.Procedure.text_sf">
            <summary>
            文本格式
            </summary>
        </member>
        <member name="M:HML.Procedure.InitializeProcedureRectangle">
            <summary>
            初始化流程节点rect
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HML.Procedure.InitializeProcedureRectangle(HML.ProcedureItem)">
            <summary>
            初始化流程节点rect
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HML.Procedure.GetSelectedIndex(System.Drawing.Point)">
            <summary>
            获取鼠标进入的流程节点索引
            </summary>
            <param name="point">当前鼠标坐标</param>
            <returns></returns>
        </member>
        <member name="M:HML.Procedure.ShowTip(System.Int32)">
            <summary>
            显示指定索引流程提示信息
            </summary>
            <param name="index">指定流程索引</param>
        </member>
        <member name="M:HML.Procedure.HideTip">
            <summary>
            隐藏提示
            </summary>
        </member>
        <member name="T:HML.ProcedureItem">
            <summary>
            步骤流程节点
            </summary>
        </member>
        <member name="P:HML.ProcedureItem.Text">
            <summary>
            流程节点文本
            </summary>
        </member>
        <member name="P:HML.ProcedureItem.TipText">
            <summary>
            步骤流程节点提示信息
            </summary>
        </member>
        <member name="P:HML.ProcedureItem.Owner">
            <summary>
            选项所属的控件
            </summary>
        </member>
        <member name="P:HML.ProcedureItem.RectF">
            <summary>
            流程节点rectf
            </summary>
        </member>
        <member name="P:HML.ProcedureItem.GP">
            <summary>
            流程节点Path
            </summary>
        </member>
        <member name="M:HML.ProcedureItem.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.ProcedureItem.Copy">
            <summary>
            复制选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.ProcedureItemCollection">
            <summary>
            步骤流程节点集合
            </summary>
        </member>
        <member name="T:HML.ProcedureOrientations">
            <summary>
            Procedure布局方向
            </summary>
        </member>
        <member name="F:HML.ProcedureOrientations.HorizontalTop">
             <summary>
            水平放置靠近上边
             </summary>
        </member>
        <member name="F:HML.ProcedureOrientations.HorizontalBottom">
            <summary>
            水平放置靠近下边
            </summary>
        </member>
        <member name="F:HML.ProcedureOrientations.VerticalLeft">
            <summary>
            垂直放置靠近左边
            </summary>
        </member>
        <member name="F:HML.ProcedureOrientations.VerticalRight">
            <summary>
            垂直放置靠近右边
            </summary>
        </member>
        <member name="T:HML.RadioButtonPlus">
            <summary>
            单选按钮控件
            </summary>
        </member>
        <member name="E:HML.RadioButtonPlus.CheckedChanged">
            <summary>
            控件Checked状态更改事件
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.Appearance">
            <summary>
             控件显示风格 是按正常Check复选框风格显示，还是按Button按钮风格显示
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.AutoCheck">
            <summary>
            单击时是否自动更改控件状态
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.Checked">
            <summary>
            是否已选中
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckAreaScope">
            <summary>
            在Check显示风格下鼠标操作有效范围 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckAlignment">
            <summary>
            在Check显示风格下复选框的对齐方式 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckSize">
            <summary>
            复选框大小 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckTextSpace">
            <summary>
            复选框与文本的间距 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckBackUnCheckedColor">
            <summary>
            复选框背景色（未选中） 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckForeUnCheckedColor">
            <summary>
            复选框前景色（未选中） 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckBackCheckedColor">
            <summary>
            复选框背景色（已选中）  
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckForeCheckedColor">
            <summary>
            复选框前景色（已选中） 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckStyle">
            <summary>
            在Check显示风格下复选框的风格 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ImageList">
            <summary>
            获取在控件上显示的图像的ImageList
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckImageUnChecked">
            <summary>
            未选中状态复选框图片 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckImageUnCheckedIndex">
            <summary>
            未选中状态复选框图片Index 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckImageUnCheckedKey">
            <summary>
            未选中状态复选框图片Key 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckImageChecked">
            <summary>
            已选中状态复选框图片 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckImageCheckedIndex">
            <summary>
            已选中状态复选框图片Index 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.CheckImageCheckedKey">
            <summary>
            已选中状态复选框图片Key 
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonBorderVisible">
            <summary>
            是否显示边框
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonBorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonBackUnCheckedNormalColor">
            <summary>
            背景颜色（未选中、正常）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonTextUnCheckedNormalColor">
            <summary>
            文本颜色（未选中、正常）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonBackUnCheckedEnterColor">
            <summary>
            背景颜色（未选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonTextUnCheckedEnterColor">
            <summary>
            文本颜色（未选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonBackCheckedNormalColor">
            <summary>
            背景颜色（已选中、正常）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonTextCheckedNormalColor">
            <summary>
            文本颜色（已选中、正常）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonBackCheckedEnterColor">
            <summary>
            背景颜色（已选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ButtonTextCheckedEnterColor">
            <summary>
            文本颜色（已选中、鼠标进入）
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.AutoSize">
            <summary>
            否根据内容自动调整控件的大小
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.Padding">
            <summary>
            内边距限于AutoSize
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.BackColor">
            <summary>
            在Check显示风格下背景颜色
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.ForeColor">
            <summary>
            在Check显示风格下文本颜色
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.Font">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="P:HML.RadioButtonPlus.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.mousedowntype">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.mouseenterobject">
            <summary>
            鼠标已进入对象
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.check_rect">
            <summary>
            复选框rect
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.text_rect">
            <summary>
            文本rect
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.requestedWidth">
            <summary>
            控件要求Width
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.requestedHeight">
            <summary>
            控件要求Height
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlus.autoing">
            <summary>
            AutoSize切换中
            </summary>
        </member>
        <member name="M:HML.RadioButtonPlus.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.RadioButtonPlus.AdjustSize">
            <summary>
            更新控件size
            </summary>
        </member>
        <member name="M:HML.RadioButtonPlus.GetTextSize">
            <summary>
            获取文本size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.RadioButtonPlus.CheckedOneselfAndSynchronousOther">
            <summary>
            设置自己为选中状态，引发自己更改事件，并同步兄弟控件状态和引发更改事件
            </summary>
        </member>
        <member name="M:HML.RadioButtonPlus.OnlyUnCheckedOneself">
            <summary>
            设置自己为未选中状态，引发自己更改事件，但不更改兄弟控件的状态
            </summary>
        </member>
        <member name="M:HML.RadioButtonPlus.IsInArea(System.Drawing.Point)">
            <summary>
            指定坐标是否在控件有效范围内
            </summary>
            <param name="point">指定坐标</param>
            <returns></returns>
        </member>
        <member name="M:HML.RadioButtonPlus.RecreateImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList更改后刷新控件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HML.RadioButtonPlus.DetachImageListHandler(System.Object,System.EventArgs)">
            <summary>
            ImageList释放时解绑清除清除引用
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HML.RadioButtonPlusAppearance">
            <summary>
            RadioButtonPlus控件显示方式
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusAppearance.Check">
            <summary>
            按正常Check复选框方式显示
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusAppearance.Button">
            <summary>
            按Button按钮方式显示
            </summary>
        </member>
        <member name="T:HML.RadioButtonPlusCheckAlignments">
            <summary>
            RadioButtonPlus在Check显示方式下复选框的对齐方式
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAlignments.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAlignments.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAlignments.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAlignments.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAlignments.Center">
            <summary>
            中间
            </summary>
        </member>
        <member name="T:HML.RadioButtonPlusCheckAreaScope">
            <summary>
            RadioButtonPlus在Check显示方式下鼠标操作有效范围
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAreaScope.Default">
            <summary>
            鼠标在整个控件区域内操作有效
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAreaScope.Check">
            <summary>
            鼠标只在复选框内操作有效
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckAreaScope.CheckText">
            <summary>
            鼠标只在复选框和文本内操作有效
            </summary>
        </member>
        <member name="T:HML.RadioButtonPlusCheckStyles">
            <summary>
            RadioButtonPlus在Check显示方式下复选框的风格
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckStyles.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckStyles.Symbol">
            <summary>
            符号
            </summary>
        </member>
        <member name="F:HML.RadioButtonPlusCheckStyles.Image">
            <summary>
            自定义图片
            </summary>
        </member>
        <member name="T:HML.RoundContainer">
            <summary>
            圆角容器
            </summary>
        </member>
        <member name="P:HML.RoundContainer.BorderThickness">
            <summary>
            边框厚度
            </summary>
        </member>
        <member name="P:HML.RoundContainer.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.RoundContainer.ContentStartColor">
            <summary>
            内容背景色(渐变开始)
            </summary>
        </member>
        <member name="P:HML.RoundContainer.ContentEndColor">
            <summary>
            内容背景色(渐变结束)
            </summary>
        </member>
        <member name="P:HML.RoundContainer.Angle">
            <summary>
            渐变开始色角度
            </summary>
        </member>
        <member name="P:HML.RoundContainer.RoundSize">
            <summary>
            圆角Size
            </summary>
        </member>
        <member name="P:HML.RoundContainer.TrapeziformCutEnabled">
            <summary>
            是否剪切为不规则形状
            </summary>
        </member>
        <member name="M:HML.RoundContainer.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="T:HML.SingleAccordion">
            <summary>
            手风琴菜单控件
            </summary>
        </member>
        <member name="E:HML.SingleAccordion.BackgroundDrawBefore">
            <summary>
            背景绘制前事件
            </summary>
        </member>
        <member name="E:HML.SingleAccordion.NodeDrawBefore">
            <summary>
            节点绘制前事件
            </summary>
        </member>
        <member name="E:HML.SingleAccordion.NodeDrawAfter">
            <summary>
            节点绘制后事件
            </summary>
        </member>
        <member name="E:HML.SingleAccordion.NodeClick">
            <summary>
            节点单击事件
            </summary>
        </member>
        <member name="E:HML.SingleAccordion.SelectedNodeChanged">
            <summary>
            选中节点更改事件
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.BorderVisible">
             <summary>
            是否显示边框
             </summary>
        </member>
        <member name="P:HML.SingleAccordion.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.Multiple">
            <summary>
            是否允许多个同时展开
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.Alignment">
            <summary>
            内容对其方式
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.Nodes">
            <summary>
            节点集合（SingleAccordionCategoryNode、SingleAccordionLabelNode、SingleAccordionContentNode）
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.LabelNodeStyle">
            <summary>
            标签节点样式(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.CategoryNodeStyle">
            <summary>
            类别节点样式(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.ContentNodeStyle">
            <summary>
            内容节点样式(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.ScrollStyle">
            <summary>
            滚动条
            </summary>
        </member>
        <member name="P:HML.SingleAccordion.SelectedNode">
            <summary>
            选中的内容节点
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.mouseAnimationList">
            <summary>
            鼠标动画节点列表
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.ecAnimationList">
            <summary>
            展开折叠节点列表
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.customAnimationList">
            <summary>
            自定义动画节点列表
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.displayRectangle">
            <summary>
            菜单显示区
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.realityRectangle">
            <summary>
            菜单真实区(不包含滚动条)
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.realityRectangle_Y">
            <summary>
            菜单真实区Y偏移量
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.mousedownType">
            <summary>
            鼠标按下功能类型（-1空 、1节点按下、2滚动条按下）
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.mousedownObject">
            <summary>
            鼠标按下功能对象
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.mousedownPoint">
            <summary>
            鼠标按下功能坐标
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.mousedownRealityRectangleY">
            <summary>
            鼠标按下滚动条时菜单真实区的Y坐标
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.mouseenterObject">
            <summary>
            鼠标进入的节点
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.initializeing">
            <summary>
            控件正在初始化布局中
            </summary>
        </member>
        <member name="F:HML.SingleAccordion.scrollVisible">
            <summary>
            滚动条当前显示状态
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.SingleAccordion.ExpandCollapse(System.Boolean)">
            <summary>
            展开或折叠所有节点 (Multiple=True 时展开才生效)
            </summary>
            <param name="isExpand">是否展开</param>
        </member>
        <member name="M:HML.SingleAccordion.ExpandCollapse(HML.SingleAccordionCategoryNode,System.Boolean,System.Boolean)">
            <summary>
            展开或折叠指定节点
            </summary>
            <param name="categoryNode">指定节点</param>
            <param name="isExpand">是否展开</param>
            <param name="animation">是否有动画效果</param>
        </member>
        <member name="M:HML.SingleAccordion.FindExpand">
            <summary>
            查找已展开的节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.AddCustomAnimation(System.String,System.Object,System.Int32,System.Int32,System.Boolean,System.Object)">
            <summary>
            添加自定义动画（key、target 组合作为索引）
            </summary>
            <param name="key">动画类型标识</param>
            <param name="target">动画作用目标</param>
            <param name="animationUsedTime">自定义动画已使用时间</param>
            <param name="animationAllTime">自定义动画总时间</param>
            <param name="isLayout">自定义动画是否涉及控件内部布局计算</param>
            <param name="tag">动画自定义数据</param>
        </member>
        <member name="M:HML.SingleAccordion.RemoveCustomAnimation(System.String,System.Object)">
            <summary>
            移除自定义动画
            </summary>
            <param name="key">动画类型标识</param>
            <param name="target">动画作用目标</param>
        </member>
        <member name="M:HML.SingleAccordion.FindCustomAnimation(System.String,System.Object)">
            <summary>
            查找自定义动画
            </summary>
            <param name="key">动画类型标识</param>
            <param name="target">动画作用目标</param>
        </member>
        <member name="M:HML.SingleAccordion.UpdateSelectedNode(HML.SingleAccordionContentNode)">
            <summary>
            设置指定内容节点为选中节点（但不触发SelectedNodeChanged事件）
            </summary>
            <param name="contentNode">内容节点</param>
        </member>
        <member name="M:HML.SingleAccordion.GetNodeByPoint(System.Drawing.Point)">
            <summary>
            根据鼠标坐标获取节点
            </summary>
            <param name="mousePoint">鼠标坐标(相对于控件)</param>
            <returns>没有返回null</returns>
        </member>
        <member name="M:HML.SingleAccordion.GetScrollY">
            <summary>
            获取滚动条位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_MouseAnimationEnabled(HML.SingleAccordionNode)">
            <summary>
            获取指定节点鼠标动画启用状态
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_MouseAnimationAllTimer(HML.SingleAccordionNode)">
            <summary>
            获取指定节点鼠标动画总时间
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_LRSlidingDistance(HML.SingleAccordionNode)">
            <summary>
            获取指定节点左右滑动动画距离
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_TBMargin(HML.SingleAccordionNode)">
            <summary>
            获取指定节点上下外边距
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_TextLRMargin(HML.SingleAccordionNode)">
            <summary>
            获取指定节点文本外左右外边距
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeBackColor(HML.SingleAccordionNode)">
            <summary>
            获取指定节点背景颜色
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeTextColor(HML.SingleAccordionNode)">
            <summary>
            获取指定节点文本颜色
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeFoldColor(HML.SingleAccordionCategoryNode)">
            <summary>
            获取指定节点折叠按钮颜色
            </summary>
            <param name="category_node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeSplitterLineColor(HML.SingleAccordionNode)">
            <summary>
            获取指定节点分隔线颜色
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeImageVisible(HML.SingleAccordionNode)">
            <summary>
            获取指定节点是否显示图片(根据显示状态、内容对齐方式)
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeImageLRMargin(HML.SingleAccordionNode)">
            <summary>
            获取指定节点图片左右外边距(根据显示状态、内容对齐方式)
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_NodeImageSize(HML.SingleAccordionNode)">
            <summary>
            获取指定节点图片Size(根据显示状态、内容对齐方式)
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_Image(HML.SingleAccordionNode)">
            <summary>
            获取指定节点图片
            </summary>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_FoldVisible">
            <summary>
            获取折叠图标显示状态(根据内容对齐方式)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_FoldLRMargin">
            <summary>
            获取折叠图标左右外边距(根据显示状态、内容对齐方式)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetProperty_FoldSize">
            <summary>
            获取折叠图标Size(根据显示状态、内容对齐方式)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.InitializeRectangle">
            <summary>
            初始化控件Rect
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.UpdateRealityRectangle">
            <summary>
            更新菜单真实区Rect
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.UpdateAllNodeRectangle">
            <summary>
            更新所有节点Rect
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.UpdateScrollRectangle">
            <summary>
            更新滚动条Rect
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.DrawLabelNode(System.Drawing.Graphics,HML.SingleAccordionLabelNode,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.Pen)">
            <summary>
            绘制标签节点
            </summary>
            <param name="g">画布</param>
            <param name="label_node">标签节点</param>
            <param name="commom_back_sb">标签节点背景画笔</param>
            <param name="commom_text_sb">标签节点文本画笔</param>>
            <param name="commom_splitterline_pen">分隔线画笔</param>
        </member>
        <member name="M:HML.SingleAccordion.DrawCategoryNode(System.Drawing.Graphics,HML.SingleAccordionCategoryNode,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.Pen,System.Drawing.Pen)">
            <summary>
            绘制类别节点
            </summary>
            <param name="g">画布</param>
            <param name="category_node">类别节点</param>
            <param name="commom_back_sb">类别节点背景画笔</param>
            <param name="commom_text_sb">类别节点文本画笔</param>>
            <param name="commom_fold_pen">折叠图标画笔</param>
            <param name="commom_splitterline_pen">分隔线画笔</param>
        </member>
        <member name="M:HML.SingleAccordion.DrawContentNode(System.Drawing.Graphics,HML.SingleAccordionContentNode,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.Pen)">
            <summary>
            绘制内容节点
            </summary>
            <param name="g">画布</param>
            <param name="content_node">内容节点</param>
            <param name="commom_back_sb">内容节点背景画笔</param>
            <param name="commom_text_sb">内容节点文本画笔</param>>
            <param name="commom_splitterline_pen">分隔线画笔</param>
        </member>
        <member name="M:HML.SingleAccordion.GetNodeTextRectangleByAnimation(System.Drawing.Graphics,HML.SingleAccordionNode,System.Int32,HML.LRMargin,System.Drawing.Size,HML.LRMargin,System.Int32)">
            <summary>
            根据左右动画状态获获取节点文本Rectangle
            </summary>
            <param name="g"></param>
            <param name="node">节点</param>
            <param name="scale_category_LRSlidingDistance">左右滑动动画距离</param>
            <param name="scale_category_ImageLRMargin">图片外左右边距</param>
            <param name="scale_category_ImageSize">图片Size</param>
            <param name="scale_category_TextLRMargin">文本外左右边距</param>
            <param name="scale_font_top_hiatus">字体顶部补回空隙</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetCategoryContainerHeight(HML.SingleAccordionCategoryNode)">
            <summary>
            获取类别节点容器高度
            </summary>
            <param name="category_node">类别节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetNodeExpandCollapseedFlodAngle(HML.SingleAccordionCategoryNode)">
            <summary>
            获取类别节点展开折叠图标旋转角度
            </summary>
            <param name="category_node">类别节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.GetMouseEnterNode">
            <summary>
            获取鼠标进入节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.AddNodeMouseAnimation(System.Drawing.Point)">
            <summary>
            查找并添加符合条件的节点到鼠标动画中
            </summary>
            <param name="mousePoint">这是鼠标坐标</param>
        </member>
        <member name="M:HML.SingleAccordion.RemoveNodeMouseAnimation">
            <summary>
            查找并移除符合条件的节点从鼠标动画中
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.IntervalTimerStart">
            <summary>
            开始动画计时器
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.IntervalTimerStop">
            <summary>
            停止动画计时器
            </summary>
        </member>
        <member name="M:HML.SingleAccordion.GetScrollVisible">
            <summary>
            获取滚动条显示状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordion.HitTestSroll(System.Drawing.Point)">
            <summary>
            滚动条命中测试（设计器使用）
            </summary>
            <param name="control_point">坐标(相对于控件)</param>
            <returns>返回是否在滚动条区域中</returns>
        </member>
        <member name="M:HML.SingleAccordion.HitTestCategoryNode(System.Drawing.Point)">
            <summary>
            类别节点命中测试（设计器使用）
            </summary>
            <param name="control_point">坐标(相对于控件)</param>
            <returns></returns>
        </member>
        <member name="T:HML.SingleAccordionAlignments">
            <summary>
            SingleAccordion对齐方式
            </summary>
        </member>
        <member name="F:HML.SingleAccordionAlignments.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.SingleAccordionAlignments.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:HML.SingleAccordionAlignments.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="T:HML.SingleAccordionNodeCollection">
            <summary>
            SingleAccordion节点集合
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNodeCollection.Add(System.Object)">
            <summary>
            添加节点
            </summary>
            <param name="value">节点（类型应该为 SingleAccordionLabelNode、SingleAccordionCategoryNode、SingleAccordionContentNode）</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionNodeCollection.Add(HML.SingleAccordionNode)">
            <summary>
            添加节点
            </summary>
            <param name="node">（类型应该为 SingleAccordionLabelNode、SingleAccordionCategoryNode、SingleAccordionContentNode）</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionNodeCollection.AddRange(HML.SingleAccordionNode[])">
            <summary>
            添加节点
            </summary>
            <param name="nodeArray">节点集合（类型应该为 SingleAccordionLabelNode、SingleAccordionCategoryNode、SingleAccordionContentNode）</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionNodeCollection.Insert(System.Int32,System.Object)">
            <summary>
            添加节点
            </summary>
            <param name="index">插入索引</param>
            <param name="value">节点（类型应该为 SingleAccordionLabelNode、SingleAccordionCategoryNode、SingleAccordionContentNode）</param>
        </member>
        <member name="M:HML.SingleAccordionNodeCollection.Remove(System.Object)">
            <summary>
            移除节点
            </summary>
            <param name="value">节点（类型应该为 SingleAccordionLabelNode、SingleAccordionCategoryNode、SingleAccordionContentNode）</param>
        </member>
        <member name="M:HML.SingleAccordionNodeCollection.Remove(HML.SingleAccordionNode)">
            <summary>
            移除节点
            </summary>
            <param name="node">节点（类型应该为 SingleAccordionLabelNode、SingleAccordionCategoryNode、SingleAccordionContentNode）</param>
        </member>
        <member name="T:HML.SingleAccordionCategoryNode">
            <summary>
            SingleAccordion类别节点
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.FoldNormalColor">
            <summary>
            折叠图标颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.FoldEnterColor">
            <summary>
            折叠图标颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.Expand">
            <summary>
            节点是否展开
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.ECAnimationStatus">
            <summary>
            节点展开折叠动画状态
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.ECAnimationUsedTime">
            <summary>
            节点展开折叠已使用时间
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.Childrens">
            <summary>
            内容节点集合
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryNode.ContainerRect">
            <summary>
            节点容器Rect
            </summary>
        </member>
        <member name="M:HML.SingleAccordionCategoryNode.Copy(System.Boolean)">
            <summary>
            复制节点
            </summary>
            <param name="copyChildrens">是否复制子节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionCategoryNode.GetMouseAnimationEnabled">
            <summary>
            获取节点鼠标动画启用状态（节点未添加到控件返回 false）
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionCategoryNode.GetMouseAnimationAllTime">
            <summary>
            获取节点鼠标动画总时间（节点未添加到控件返回0）
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.SingleAccordionCategoryStyle">
            <summary>
            SingleAccordion类别节点样式(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.ECAnimationAllTimer">
            <summary>
            展开折叠动画总时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.MouseAnimationEnabled">
            <summary>
            是否启用节点鼠标动画
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.MouseAnimationAllTimer">
            <summary>
            鼠标动画总时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.LRAnimationDistance">
            <summary>
            左右滑动动画距离
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.TBMargin">
            <summary>
            上下外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.TextLRMargin">
            <summary>
            文本左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.BackNormalColor">
            <summary>
            背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.TextNormalColor">
            <summary>
            文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.BackEnterColor">
            <summary>
            背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.TextEnterColor">
            <summary>
            文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.SplitterLineColor">
            <summary>
            分割线颜色
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.ImageVisible">
            <summary>
            是否显示图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.ImageLRMargin">
            <summary>
            图片左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.ImageSize">
            <summary>
            图片Size
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.Image">
            <summary>
            图片(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.FoldVisible">
            <summary>
            是否显示折叠图标
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.FoldLRMargin">
            <summary>
            折叠按钮左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.FoldSize">
            <summary>
            折叠图标Size
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.FoldArrowsIsInward">
            <summary>
            折叠箭头方向是否往内
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.FoldNormalColor">
            <summary>
            折叠图标颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionCategoryStyle.FoldEnterColor">
            <summary>
            折叠图标颜色（鼠标进入）
            </summary>
        </member>
        <member name="M:HML.SingleAccordionCategoryStyle.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.SingleAccordionCategoryStyle.InitializeInvalidate">
            <summary>
            重新计算控件并刷新控件
            </summary>
        </member>
        <member name="T:HML.SingleAccordionContentNodeCollection">
             <summary>
            内容节点集合
             </summary>
        </member>
        <member name="M:HML.SingleAccordionContentNodeCollection.Insert(System.Int32,System.Object)">
            <summary>
            添加节点
            </summary>
            <param name="index">插入索引</param>
            <param name="value">节点（类型应该为 SingleAccordionContentNode）</param>
        </member>
        <member name="M:HML.SingleAccordionContentNodeCollection.Remove(System.Object)">
            <summary>
            移除节点
            </summary>
            <param name="value">节点（类型应该为 SingleAccordionContentNode）</param>
        </member>
        <member name="T:HML.SingleAccordionContentNode">
            <summary>
            SingleAccordion内容节点
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNode.BackSelectedColor">
            <summary>
            背景颜色（选中）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNode.TextSelectedColor">
            <summary>
            文本颜色（选中）
            </summary>
        </member>
        <member name="M:HML.SingleAccordionContentNode.Copy(System.Boolean)">
            <summary>
            复制节点
            </summary>
            <param name="copyChildrens">是否复制子节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionContentNode.GetMouseAnimationEnabled">
            <summary>
            获取节点鼠标动画启用状态（节点未添加到控件返回 false）
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionContentNode.GetMouseAnimationAllTime">
            <summary>
            获取节点鼠标动画总时间（节点未添加到控件返回0）
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.SingleAccordionContentNodeStyle">
            <summary>
            SingleAccordion内容节点样式(通用)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.MouseAnimationEnabled">
            <summary>
            是否启用节点鼠标动画
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.MouseAnimationAllTimer">
            <summary>
            鼠标动画总时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.LRAnimationDistance">
            <summary>
            左右滑动动画距离
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.TBMargin">
            <summary>
            上下外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.TextLRMargin">
            <summary>
            文本左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.BackNormalColor">
            <summary>
            背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.TextNormalColor">
            <summary>
            文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.BackEnterColor">
            <summary>
            背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.TextEnterColor">
            <summary>
            文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.BackSelectedColor">
            <summary>
            背景颜色（选中）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.TextSelectedColor">
            <summary>
            文本颜色（选中）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.SplitterLineColor">
            <summary>
            分割线颜色
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.ImageVisible">
            <summary>
            是否显示图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.ImageLRMargin">
            <summary>
            图片左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.ImageSize">
            <summary>
            图片Size
            </summary>
        </member>
        <member name="P:HML.SingleAccordionContentNodeStyle.Image">
            <summary>
            图片(通用)
            </summary>
        </member>
        <member name="M:HML.SingleAccordionContentNodeStyle.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.SingleAccordionContentNodeStyle.InitializeInvalidate">
            <summary>
            重新计算控件并刷新控件
            </summary>
        </member>
        <member name="T:HML.SingleAccordionNode">
            <summary>
            SingleAccordion节点
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.MouseAnimationEnabled">
            <summary>
            是否启用节点鼠标动画（Auto采用通用设置）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.LRAnimationDistance">
            <summary>
            左右滑动动画距离（-1采用通用设置）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.TBMargin">
            <summary>
            上下外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.TextLRMargin">
            <summary>
            文本左右外边距 （-1采用通用设置）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Text">
            <summary>
            节点文本
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Key">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Tag">
            <summary>
            节点自定义数据
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.BackNormalColor">
            <summary>
            背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.TextNormalColor">
            <summary>
            文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.BackEnterColor">
            <summary>
            背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.TextEnterColor">
            <summary>
            文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.SplitterLineVisible">
            <summary>
            是否显示分隔线
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.SplitterLineColor">
            <summary>
            分隔线颜色
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.ImageVisible">
            <summary>
            是否显示图片（Auto采用通用设置）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.ImageLRMargin">
            <summary>
            图片左右外边距
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.ImageSize">
            <summary>
            图片Size
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Parent">
            <summary>
            父节点(SingleAccordionCategoryNode)
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Owner">
            <summary>
            获取节点所属的控件
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Level">
            <summary>
            获取节点等级深度（0开始）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.IsMouseEnter">
            <summary>
            鼠标是否进入节点
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.Rect">
            <summary>
            节点Rect
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.MouseAnimationStatus">
            <summary>
            节点鼠标动画状态
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNode.MouseAnimationUsedTime">
            <summary>
            节点鼠标动画已使用时间
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNode.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNode.InitializeInvalidate">
            <summary>
            重新计算控件并刷新控件
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNode.Copy(System.Boolean)">
            <summary>
            复制节点
            </summary>
            <param name="copyChildrens">是否复制子节点</param>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionNode.GetMouseAnimationEnabled">
            <summary>
            获取节点鼠标动画启用状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.SingleAccordionNode.GetMouseAnimationAllTime">
            <summary>
            获取节点鼠标动画总时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.SingleAccordionNodeECAnimationStatuss">
            <summary>
            SingleAccordion节点展开折叠动画状态
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeECAnimationStatuss.Collapseing">
            <summary>
            折叠中
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeECAnimationStatuss.Collapseed">
            <summary>
            已折叠
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeECAnimationStatuss.Expanding">
            <summary>
            展开中
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeECAnimationStatuss.Expanded">
            <summary>
            已展开
            </summary>
        </member>
        <member name="T:HML.SingleAccordionNodeEventArgs">
            <summary>
            SingleAccordion节点事件参数
            </summary>
        </member>
        <member name="P:HML.SingleAccordionNodeEventArgs.Node">
            <summary>
            当前节点
            </summary>
        </member>
        <member name="M:HML.SingleAccordionNodeEventArgs.#ctor(HML.SingleAccordionNode)">
            <summary>
            
            </summary>
            <param name="node">当前节点</param>
        </member>
        <member name="T:HML.SingleAccordionNodeMouseAnimationStatuss">
            <summary>
            SingleAccordion节点鼠标动画状态
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeMouseAnimationStatuss.MouseLeave">
            <summary>
            鼠标已离开
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeMouseAnimationStatuss.MouseLeaveing">
            <summary>
            鼠标离开中
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeMouseAnimationStatuss.MouseEnter">
            <summary>
            鼠标已进入
            </summary>
        </member>
        <member name="F:HML.SingleAccordionNodeMouseAnimationStatuss.MouseEntering">
            <summary>
            鼠标进入中
            </summary>
        </member>
        <member name="T:HML.SingleAccordionScrollStyle">
            <summary>
            SingleAccordion滚动条
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.AutoHide">
             <summary>
            是否自动隐藏
             </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.BarThickness">
            <summary>
            滚动条厚度
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.BarColor">
            <summary>
            滑条背景颜色
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.SlideMinSize">
            <summary>
            滑块最小Size
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.SlideRoundEnabled">
            <summary>
            滑块是否为圆角
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.SlideNormalColor">
            <summary>
            滑块颜色（正常）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.SlideEnterColor">
            <summary>
            滑块颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.BarRect">
            <summary>
            滑条Rect
            </summary>
        </member>
        <member name="P:HML.SingleAccordionScrollStyle.SlideRect">
            <summary>
            滑块rect
            </summary>
        </member>
        <member name="M:HML.SingleAccordionScrollStyle.Invalidate">
            <summary>
            刷新控件
            </summary>
        </member>
        <member name="T:HML.HeadTag">
            <summary>
            头像标签控件
            </summary>
        </member>
        <member name="P:HML.HeadTag.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.HeadTag.ContentColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:HML.HeadTag.Image">
            <summary>
            头像图片
            </summary>
        </member>
        <member name="F:HML.HeadTag.borderThickness">
            <summary>
            边框
            </summary>
        </member>
        <member name="M:HML.HeadTag.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="T:HML.HRuler">
            <summary>
            横向尺子控件
            </summary>
        </member>
        <member name="P:HML.HRuler.ZoomScaling">
            <summary>
            尺子缩放比例（真实像素/显示像素）
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainLineMagnification">
            <summary>
            主刻度倍数（主刻度为该数的倍数）
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainLinePosition">
            <summary>
            零刻度线的开始坐标（像素）
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainLinePixels">
            <summary>
            单位主刻度预设多少个像素
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainTextDistance">
            <summary>
            文本与次刻度间距
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainTextSymbol">
            <summary>
            主刻度文本正负符号
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainTextColor">
            <summary>
            主刻度文本颜色
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMainLineColor">
            <summary>
            主刻度线颜色
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkMinorLineColor">
            <summary>
            次刻度线颜色
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkHighlightLineVisible">
            <summary>
            是否显示高亮线
            </summary>
        </member>
        <member name="P:HML.HRuler.MarkHighlightLineColor">
            <summary>
            高亮线颜色
            </summary>
        </member>
        <member name="F:HML.HRuler.markHighlightLinePosition">
            <summary>
            高亮线坐标（像素）
            </summary>
        </member>
        <member name="M:HML.HRuler.SetHighlightLinePosition(System.Single)">
            <summary>
            设置高亮线坐标
            </summary>
            <param name="x">x轴（像素）</param>
        </member>
        <member name="M:HML.HRuler.SetHighlightLinePosition(System.Boolean,System.Single)">
            <summary>
            设置高亮线坐标
            </summary>
            <param name="visible">是否显示高亮线</param>
            <param name="x">x轴（像素）</param>
        </member>
        <member name="M:HML.HRuler.GetControlAutoHeight">
            <summary>
            根据字体计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.VRuler">
            <summary>
            纵向尺子控件
            </summary>
        </member>
        <member name="P:HML.VRuler.ZoomScaling">
            <summary>
            尺子缩放比例（真实像素/显示像素）
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainLineMagnification">
            <summary>
            主刻度倍数（主刻度为该数的倍数）
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainLinePosition">
            <summary>
            零刻度线的开始坐标（像素）
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainLinePixels">
            <summary>
            单位主刻度预设多少个像素
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainTextDistance">
            <summary>
            文本与次刻度间距
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainTextSymbol">
            <summary>
            主刻度文本正负符号
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainTextColor">
            <summary>
            主刻度文本颜色
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMainLineColor">
            <summary>
            主刻度线颜色
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkMinorLineColor">
            <summary>
            次刻度线颜色
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkHighlightLineVisible">
            <summary>
            是否显示高亮线
            </summary>
        </member>
        <member name="P:HML.VRuler.MarkHighlightLineColor">
            <summary>
            高亮线颜色
            </summary>
        </member>
        <member name="F:HML.VRuler.markHighlightLinePosition">
            <summary>
            高亮线坐标（像素）
            </summary>
        </member>
        <member name="M:HML.VRuler.SetHighlightLinePosition(System.Single)">
            <summary>
            设置高亮线坐标
            </summary>
            <param name="y">y轴（像素）</param>
        </member>
        <member name="M:HML.VRuler.SetHighlightLinePosition(System.Boolean,System.Single)">
            <summary>
            设置高亮线坐标
            </summary>
            <param name="visible">是否显示高亮线</param>
            <param name="y">y轴（像素）</param>
        </member>
        <member name="M:HML.VRuler.GetControlAutoWidth">
            <summary>
            根据字体计算控件宽度
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.ToggleSwitch">
            <summary>
            开关控件
            </summary>
        </member>
        <member name="E:HML.ToggleSwitch.Toggleing">
            <summary>
            开关状态更改中事件
            </summary>
        </member>
        <member name="E:HML.ToggleSwitch.Toggled">
            <summary>
            开关状态更改后事件
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ActivateColor">
            <summary>
            控件激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.Style">
            <summary>
            开关按钮风格
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.IsOn">
            <summary>
            开关状态
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.OffText">
            <summary>
            关闭状态文本
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.OffBarColor">
            <summary>
            滑条颜色（关闭）
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.OffSlideColor">
            <summary>
            滑块颜色（关闭）
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.OnText">
            <summary>
            开启状态文本
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.OnBarColor">
            <summary>
            滑条颜色（开启）
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.OnSlideColor">
            <summary>
            滑块颜色（开启）
            </summary>
        </member>
        <member name="F:HML.ToggleSwitch.mousedowntype">
            <summary>
            鼠标按下类型
            </summary>
        </member>
        <member name="F:HML.ToggleSwitch.toggleSwitchBody">
            <summary>
            存放Switch信息
            </summary>
        </member>
        <member name="F:HML.ToggleSwitch.slideing">
            <summary>
            动画中
            </summary>
        </member>
        <member name="F:HML.ToggleSwitch.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="M:HML.ToggleSwitch.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.ToggleSwitch.Toggle">
            <summary>
            设置相反状态
            </summary>
        </member>
        <member name="M:HML.ToggleSwitch.UpdateStatus(System.Boolean)">
            <summary>
            更改开关状态（不会触发 Toggleing、Toggled 事件）
            </summary>
            <param name="value">是否为开启状态</param>
        </member>
        <member name="M:HML.ToggleSwitch.InitializeRectangle">
            <summary>
            初始化控件Rectangle
            </summary>
        </member>
        <member name="M:HML.ToggleSwitch.GetControlAutoSize">
            <summary>
            根据设置获取控件size
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.ToggleSwitch.SetState">
            <summary>
            设置控件状态
            </summary>
        </member>
        <member name="T:HML.ToggleSwitch.ToggleSwitchBody">
            <summary>
            存放ToggleSwitch信息
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ToggleSwitchBody.bar_rect">
             <summary>
            滑条rect 
             </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ToggleSwitchBody.slide_off_rect">
            <summary>
            滑块关闭rect
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ToggleSwitchBody.slide_on_rect">
            <summary>
            滑块开启rect
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ToggleSwitchBody.slide_current_rect">
            <summary>
            滑块当前rect
            </summary>
        </member>
        <member name="P:HML.ToggleSwitch.ToggleSwitchBody.slide_prepare_rect">
            <summary>
            滑块动画前rect
            </summary>
        </member>
        <member name="T:HML.ToggleSwitchStyles">
            <summary>
            开关按钮风格
            </summary>
        </member>
        <member name="F:HML.ToggleSwitchStyles.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:HML.ToggleSwitchStyles.CircularChar">
            <summary>
            圆角对错符号
            </summary>
        </member>
        <member name="F:HML.ToggleSwitchStyles.CircularZoom">
            <summary>
            圆角缩放
            </summary>
        </member>
        <member name="F:HML.ToggleSwitchStyles.FlatText">
            <summary>
            平面矩形带文本
            </summary>
        </member>
        <member name="T:HML.TabControlPlus">
            <summary>
            TabControlPlus(TabControl增强版)
            </summary> 
        </member>
        <member name="E:HML.TabControlPlus.TabBarDrawBackgroundBefore">
            <summary>
            菜单背景绘制前事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabBarDrawBackgroundAfter">
            <summary>
            菜单背景绘制后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.NavigationButtonOperating">
            <summary>
            导航按钮点击时事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.NavigationButtonOperated">
            <summary>
            导航按钮点击后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemDeselecting">
            <summary>
            TabItem取消选中事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemDeselected">
            <summary>
            TabItem取消选后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemSelecting">
            <summary>
            TabItem选中时事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemSelected">
            <summary>
            TabItem选中后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.SelectedIndexChanged">
            <summary>
            TabItem选中索引更改后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemEnabledChanged">
            <summary>
            TabItem启用状态更改事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemInterchangeing">
            <summary>
            两个TabItem位置互换时事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemInterchanged">
            <summary>
            两个TabItem位置互换后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemDrawBackgroundBefore">
            <summary>
            TabItem背景绘制前事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemDrawBackgroundAfter">
            <summary>
            TabItem背景绘制后事件
            </summary>
        </member>
        <member name="E:HML.TabControlPlus.TabItemCreateCustomPathBefore">
            <summary>
            TabItem生成选项自定义路径事件
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabBarAlignment">
            <summary>
            菜单布局
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabBarPadding">
            <summary>
            菜单区域内边距
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabBarBackColor">
            <summary>
            菜单背景颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.NavigationVisible">
            <summary>
            是否显示导航栏
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.NavigationPrevButton">
            <summary>
            上一个按钮
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.NavigationNextButton">
            <summary>
            下一个按钮
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.GlobalCustomButttons">
            <summary>
            全局自定义按钮集合
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemInterchangeEnabled">
            <summary>
            是否启用通过鼠标交换TabItem位置
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemDisableActivation">
            <summary>
            是否允许切换到已禁用的TabItem
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemVerticalLayout">
            <summary>
            TabItem是否纵向布局(限于左右两边)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemSize">
            <summary>
            TabItemSize（通用）
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemAutoWidth">
            <summary>
            TabItem是否自动宽度（通用）
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemAutoWidthMin">
            <summary>
            TabItem自动宽度模式下最小宽度（通用）
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemLRMargin">
            <summary>
            TabItem左右外边距（通用）
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemLRPadding">
            <summary>
            TabItem左右内边距（通用）
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemContentOffset">
            <summary>
            TabItem内容上下方向布局偏移量
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemRoundedAntiAlias">
            <summary>
            TabItem是否启用圆角抗锯齿功能
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemRoundedCorner">
            <summary>
            TabItem圆角
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemFirstIndex">
            <summary>
            在tabitem显示的总区域中要显示的第一个tabitem的索引
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemTextAlignment">
            <summary>
            TabItem文本对齐方式
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemFont">
            <summary>
            TabItem字体
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemBackNormalColor">
            <summary>
            TabItem背景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemTextNormalColor">
            <summary>
            TabItem文本颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemBackEnterColor">
            <summary>
            TabItem背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemTextEnterColor">
            <summary>
            TabItem文本颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemBackSelectedColor">
            <summary>
            TabItem背景颜色(选中)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemTextSelectedColor">
            <summary>
            TabItem文本颜色(选中)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemIcoVisible">
            <summary>
            TabItem图标是否显示(通用)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemIcoSize">
            <summary>
            TabItem图标Size
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemIcoLRMargin">
            <summary>
            TabItem图标左右外边距
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonVisible">
            <summary>
            TabItem关闭按钮是否显示（通用）
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonAlignment">
            <summary>
            TabItem关闭按钮对齐方式
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonSize">
            <summary>
            TabItem关闭按钮Size
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonLRMargin">
            <summary>
            TabItem关闭按钮左右外边距
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonBackNormalColor">
            <summary>
            TabItem按钮背景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonBackEnterColor">
            <summary>
            TabItem按钮背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonForeNormalColor">
            <summary>
            TabItem按钮前景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabItemCloseButtonForeEnterColor">
            <summary>
            TabItem按钮前景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.ContentBorderThickness">
            <summary>
            内容区域边框厚度
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.ContentBorderColor">
            <summary>
            内容区域框边框颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.ContentBackColor">
            <summary>
            内容区域背景色
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.ContentDisplayRectangle">
            <summary>
            内容区域Rect(排除外边框)
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabPages">
            <summary>
            TabPage集合
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TabCount">
            <summary>
            TabPage总数
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.SelectedIndex">
            <summary>
            已选中TabPage索引
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.SelectedTab">
            <summary>
            已选中TabPage
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TipBackColor">
            <summary>
            提示信息背景颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.TipTextColor">
            <summary>
            提示信息文本颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlus.Picker">
            <summary>
            下拉面板
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_p_rect">
            <summary>
            菜单rect(包含：内边距、内容)
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_c_rect">
            <summary>
            菜单rect(包含：内容)
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_globalcustombuttton_c_rect">
            <summary>
            全局自定义按钮rect(包含：内容)
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_navigation_c_rect">
            <summary>
            导航栏rect(包含：内容)
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_items_c_rect">
            <summary>
            tabitem显示的总区域(菜单rect减去全局自定义按钮rect减去导航栏rect)
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.content_c_rect">
            <summary>
            内容区域(包含：内容)
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_items_start_index">
            <summary>
            在tabitem显示的总区域中要显示的第一个tabitem的索引
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabbar_navigation_visualstatus">
            <summary>
            视觉上当前导航栏是否显示
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tabPages">
            <summary>
            用于存放TabPage数组
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.mousedownobject">
            <summary>
            鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.mouseenterobject">
            <summary>
            鼠标已进入的对象
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.mouseenterobjectchildren">
            <summary>
            鼠标已进入的对象子选项
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.mouseenterobjecttip">
            <summary>
            鼠标已进入要提示的对象
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.ttp">
            <summary>
            提示信息弹层
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.ttp_owner">
            <summary>
            提示信息弹层拥有者
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.pickerObject">
            <summary>
            下拉面板
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tsdd">
            <summary>
            下拉面板浮层
            </summary>
        </member>
        <member name="F:HML.TabControlPlus.tsch">
            <summary>
            下拉面板浮层容器
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.AddTabPage(HML.TabPagePlus)">
            <summary>
            尾部添加TabPage页
            </summary>
            <param name="tabPage">要添加的TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.Insert(System.Int32,HML.TabPagePlus)">
            <summary>
            添加TabPage到指定索引位置
            </summary>
            <param name="index">指定索引位置</param>
            <param name="tabPage">要添加的TabPage</param>
        </member>
        <member name="M:HML.TabControlPlus.RemoveAll">
            <summary>
            移除所有TabPage
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.RemoveTabPage(System.Int32)">
            <summary>
            移除指定索引的TabPage
            </summary>
            <param name="index">指定索引</param>
        </member>
        <member name="M:HML.TabControlPlus.SetTabPage(System.Int32,HML.TabPagePlus)">
            <summary>
            设置指定索引的TabPage
            </summary>
            <param name="index">指定索引</param>
            <param name="tabPage">要设置的TabPage页</param>
        </member>
        <member name="M:HML.TabControlPlus.SelectTab(System.Int32)">
            <summary>
            设置指定索引TabPage为选中
            </summary>
            <param name="index">指定索引</param>
        </member>
        <member name="M:HML.TabControlPlus.SelectTab(HML.TabPagePlus)">
            <summary>
            设置指定TabPage为选中
            </summary>
            <param name="tabPage">指定TabPage</param>
        </member>
        <member name="M:HML.TabControlPlus.SelectTab(System.String)">
            <summary>
            设置指定Name属性值的TabPage为选中
            </summary>
            <param name="tabPageName">指定Name属性值</param>
        </member>
        <member name="M:HML.TabControlPlus.DeselectTab(System.Int32)">
            <summary>
            取消指定索引TabPage的选中状态
            </summary>
            <param name="index">指定索引</param>
        </member>
        <member name="M:HML.TabControlPlus.DeselectTab(HML.TabPagePlus)">
            <summary>
            取消指定TabPage的选中状态
            </summary>
            <param name="tabPage">指定TabPage</param>
        </member>
        <member name="M:HML.TabControlPlus.DeselectTab(System.String)">
            <summary>
            取消指定Name属性值的TabPage的选中状态
            </summary>
            <param name="tabPageName">指定Name属性值</param>
        </member>
        <member name="M:HML.TabControlPlus.FindTabPage(HML.TabPagePlus)">
            <summary>
            查找指定TabPage的索引
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns>找不到返回-1</returns>
        </member>
        <member name="M:HML.TabControlPlus.InterchangeTabItemIndex(HML.TabPagePlus,HML.TabPagePlus)">
            <summary>
            调换两个TabItem的位置
            </summary>
            <param name="currentTabPage">当前要移动的TabPage</param>
            <param name="targetTabPage">当前要移动的目标TabPage</param>
        </member>
        <member name="M:HML.TabControlPlus.GetControl(System.Int32)">
            <summary>
            根据指定索引返回TabPage
            </summary>
            <param name="index">指定索引</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetTabPage(System.Int32)">
            <summary>
            根据指定索引返回TabPage
            </summary>
            <param name="index">指定索引</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetTabPages">
            <summary>
            获取TabPage数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetItems">
            <summary>
            获取TabPage数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.IsMouseEnter(HML.TabPagePlus)">
             <summary>
            鼠标是否进入指定选项
             </summary>
             <param name="tabPage">指定TabPage</param>
             <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.JudgePointNavigationButton(System.Drawing.Point)">
            <summary>
            判断坐标是否在导航栏按钮中(设计器使用)
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.JudgePointInItem(System.Drawing.Point)">
            <summary>
            判断坐标是否在选卡项中(设计器使用)
            </summary>
            <param name="point">坐标</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemAutoWidth(HML.TabPagePlus)">
            <summary>
            获取指定选项是否为自动宽度
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemAutoWidthMin(HML.TabPagePlus)">
            <summary>
            获取指定选项自动宽度最小宽度
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemLeftMargin(HML.TabPagePlus)">
            <summary>
            获取指定TabPage左边外边距
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:HML.TabControlPlus.GetProperty_ItemRightMargin(HML.TabPagePlus)" -->
        <member name="M:HML.TabControlPlus.GetProperty_ItemLeftPadding(HML.TabPagePlus)">
            <summary>
            获取指定TabPage左边内边距
            </summary>
            <param name="tabPage">指定选项</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemRightPadding(HML.TabPagePlus)">
            <summary>
            获取指定TabPage右边内边距 
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemBackColor(HML.TabPagePlus)">
            <summary>
            获取指定TabPage的背景颜色
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemTextColor(HML.TabPagePlus)">
            <summary>
            获取指定TabPage的文本颜色
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemIcoVisible(HML.TabPagePlus)">
            <summary>
            获取指定TabPage是否显示图标
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemIcoImage(HML.TabPagePlus,System.Drawing.Image@,System.Boolean@)">
            <summary>
            获取指定TabPage图标
            </summary>
            <param name="tabPage">指定TabPage</param>
            <param name="ico_image">返回ico图片</param>
            <param name="ico_image_istmp">返回ico图片是否为临时（如果是,用完需要手动释放）</param>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemColseVisible(HML.TabPagePlus)">
            <summary>
            获取指定TabPage是否显示关闭按钮
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemCustomButttonImage(HML.TabPagePlus,HML.TabItemCustomButton,System.Drawing.Image@,System.Boolean@)">
            <summary>
            获取指定TabPage自定义按钮的图片
            </summary>
            <param name="tabPage">指定TabPage</param>
            <param name="btn">自定义按钮</param>
            <param name="btn_image">返回按钮图片</param>
            <param name="btn_image_istmp">返回按钮图片是否为临时（如果是,用完需要手动释放）</param>
        </member>
        <member name="M:HML.TabControlPlus.ShowPicker(System.Drawing.RectangleF)">
            <summary>
            显示下拉面板
            </summary>
            <param name="target_rect">相对于TabControlPlus控件RectangleF</param>
        </member>
        <member name="M:HML.TabControlPlus.HidePicker">
            <summary>
            隐藏下拉面板
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.UpdateEveryOneTabItemSize">
            <summary>
            更新每一个tabitem选项size
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.UpdateTabBarRectangle">
            <summary>
            更新菜单区域M_Rectangle(包含外边距)、C_Rectangle(排除外边距、边框、内边距)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.UpdateEveryOneTabItemRectangle">
            <summary>
            根据ItemStartIndex更新每个TabItem的Rectangle信息
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.ReplenishTabItemToRectangleForLeft">
            <summary>
            自动把左边需要显示tabitem显示在tabitem总显示区域中
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.ReplenishSelectTabItemToRectangle">
            <summary>
            自动把已选中tabitem显示在tabitem总显示区域中
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.UpdateTabMainDisplayRectangleByTabItemsDisplayRectangle">
            <summary>
            根据tabitems总显示区更新主体Rectangle信息
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.SetTabPageDisplayRectangle(HML.TabPagePlus)">
            <summary>
            设置TabPage的DisplayRectangle
            </summary>
            <param name="tabPage">要设置的TabPage</param>
        </member>
        <member name="M:HML.TabControlPlus.UpdateTabSelection">
            <summary>
            更新TabStop激活的控件
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabBarBackground(System.Drawing.Graphics)">
            <summary>
            绘制菜单背景
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HML.TabControlPlus.DrawGlobalCustomButttons(System.Drawing.Graphics)">
            <summary>
            绘制全局按钮
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HML.TabControlPlus.DrawNavigation(System.Drawing.Graphics)">
            <summary>
            绘制导航栏
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabItem(System.Drawing.Graphics)">
            <summary>
            绘制选项
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabItemBackground(System.Drawing.Graphics,HML.TabPagePlus,System.Drawing.RectangleF,System.Drawing.SolidBrush,System.Boolean)">
            <summary>
            绘制选项背景
            </summary>
            <param name="g"></param>
            <param name="tab_page">选项</param>
            <param name="item_clip_bounds_p">选项剪切区域（包含:内边距、内容）</param>
            <param name="tabitem_back_sb">背景画笔</param>
            <param name="tabitem_back_is_commom_sb">背景画笔是否通用</param>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabItemIco(System.Drawing.Graphics,HML.TabPagePlus,System.Drawing.RectangleF)">
            <summary>
            绘制选项图标
            </summary>
            <param name="g"></param>
            <param name="tab_page">选项</param>
            <param name="item_clipbounds_c">选项剪切区域（包含:内容）</param>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabItemText(System.Drawing.Graphics,HML.TabPagePlus,System.Drawing.RectangleF,System.Drawing.SolidBrush,System.Boolean,System.Int32,System.Drawing.StringFormat)">
            <summary>
            绘制选项文本
            </summary>
            <param name="g"></param>
            <param name="tab_page">选项</param>
            <param name="item_clipbounds_c">选项剪切区域（包含:内容）</param>
            <param name="tabitem_text_sb">文本画笔</param>
            <param name="tabitem_text_is_commom_sb">文本画笔是否通用</param>
            <param name="scale_font_top_hiatus">字体顶部补回空隙</param>
            <param name="text_sf">文本布局样式</param>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabItemCustomButtons(System.Drawing.Graphics,HML.TabPagePlus,System.Drawing.RectangleF)">
            <summary>
            绘制选项自定义按钮
            </summary>
            <param name="g"></param>
            <param name="tab_page">选项</param>
            <param name="item_clipbounds_c">选项剪切区域（包含:内容）</param>
        </member>
        <member name="M:HML.TabControlPlus.DrawTabItemCloseButton(System.Drawing.Graphics,HML.TabPagePlus,System.Drawing.RectangleF,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.SolidBrush,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Pen)">
            <summary>
            绘制选项关闭按钮
            </summary>
            <param name="g"></param>
            <param name="tab_page">选项</param>
            <param name="item_clipbounds_c">选项剪切区域（包含:内容）</param>
            <param name="tabitem_closebutton_back_normal_commom_sb">关闭按钮背景色通用画笔（正常）</param>
            <param name="tabitem_closebutton_back_enter_commom_sb">关闭按钮背景色通用画笔（鼠标进入）</param>
            <param name="tabitem_closebutton_back_disable_commom_sb">关闭按钮背景色通用画笔（禁用）</param>
            <param name="tabitem_closebutton_fore_normal_commom_pen">关闭按钮前景色通用画笔（正常）</param>
            <param name="tabitem_closebutton_fore_enter_commom_pen">关闭按钮前景色通用画笔（鼠标进入）</param>
            <param name="tabitem_closebutton_fore_disable_commom_pen">关闭按钮前景色通用画笔（禁用）</param>
        </member>
        <member name="M:HML.TabControlPlus.DrawContent(System.Drawing.Graphics)">
            <summary>
            绘制内容区域
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:HML.TabControlPlus.GetGlobalCustomButttonVisualstatus">
            <summary>
            获取视觉上全局自定义按钮是否显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.GetGlobalCustomButttonImage(HML.TabControlPlusGlobalCustomButtton,System.Drawing.Image@,System.Boolean@)">
            <summary>
            获取全局自定义按钮的图片
            </summary>
            <param name="btn">全局自定义按钮</param>
            <param name="btn_image">返回按钮图片</param>
            <param name="btn_image_istmp">返回按钮图片是否为临时（如果是,用完需要手动释放）</param>
        </member>
        <member name="M:HML.TabControlPlus.GetDrawPrevButtonColorBrush(System.Drawing.SolidBrush@,System.Drawing.SolidBrush@)">
            <summary>
            获取导航栏上一页按钮的颜色
            </summary>
            <param name="navigation_prev_back_sb">背景色</param>
            <param name="navigation_prev_fore_sb">前景色</param>
        </member>
        <member name="M:HML.TabControlPlus.GetDrawPrevButtonImage(System.Drawing.Image@,System.Boolean@)">
            <summary>
            获取导航栏上一页按钮的图片
            </summary>
            <param name="btn_image">返回按钮图片</param>
            <param name="btn_image_istmp">返回按钮图片是否为临时（如果是,用完需要手动释放）</param>
        </member>
        <member name="M:HML.TabControlPlus.GetDrawNextButtonColorBrush(System.Drawing.SolidBrush@,System.Drawing.SolidBrush@)">
            <summary>
            获取导航栏下一页按钮的颜色
            </summary>
            <param name="navigation_next_back_sb">背景色</param>
            <param name="navigation_next_fore_sb">前景色</param>
        </member>
        <member name="M:HML.TabControlPlus.GetDrawNextButtonImage(System.Drawing.Image@,System.Boolean@)">
            <summary>
            获取导航栏下一页按钮的图片
            </summary>
            <param name="btn_image">返回按钮图片</param>
            <param name="btn_image_istmp">返回按钮图片是否为临时（如果是,用完需要手动释放）</param>
        </member>
        <member name="M:HML.TabControlPlus.GetProperty_ItemSolidBrush(HML.TabPagePlus,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Boolean@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Boolean@)">
            <summary>
            获取指定TabPage笔刷
            </summary>
            <param name="tabPage">指定TabPage</param>
            <param name="tabitem_back_normal_commom_sb"></param>
            <param name="tabitem_back_enter_commom_sb"></param>
            <param name="tabitem_back_selected_commom_sb"></param>
            <param name="tabitem_back_disable_commom_sb"></param>
            <param name="tabitem_back_sb"></param>
            <param name="tabitem_back_sb_istmp"></param>
            <param name="tabitem_text_normal_commom_sb"></param>
            <param name="tabitem_text_enter_commom_sb"></param>
            <param name="tabitem_text_selected_commom_sb"></param>
            <param name="tabitem_text_disable_commom_sb"></param>
            <param name="tabitem_text_sb"></param>
            <param name="tabitem_text_sb_istmp"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:HML.TabControlPlus.GetTabItemClosePen(HML.TabPagePlus,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Drawing.SolidBrush@,System.Boolean@,System.Drawing.Pen@,System.Drawing.Pen@,System.Drawing.Pen@,System.Drawing.Pen@,System.Boolean@)" -->
        <member name="M:HML.TabControlPlus.GetTabItemVisualStatus(HML.TabPagePlus)">
            <summary>
            视觉上TabItem是否正在tabtop_items_display_rect区域显示
            </summary>
            <param name="tabPage">指定TabItem</param>
        </member>
        <member name="M:HML.TabControlPlus.JudgeTabPageIsSelect(HML.TabPagePlus)">
            <summary>
            判断指定TabPage是否选中
            </summary>
            <param name="tabPage">指定TabPage</param>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlus.SetActiveTabPage(System.Int32)">
            <summary>
            设置指定索引TabPage为激活页
            </summary>
            <param name="index">要激活的TabPage</param>
        </member>
        <member name="M:HML.TabControlPlus.TipHide">
            <summary>
            隐藏提示信息
            </summary>
        </member>
        <member name="M:HML.TabControlPlus.TipShow(System.Object)">
            <summary>
            显示提示信息
            </summary>
            <param name="tipParts">要隐藏的部件</param>
        </member>
        <member name="T:HML.TabControlPlusControlsCollection">
            <summary>
            重写TabControlPlus只允许添加TabPagePlus类型的子控件
            </summary>
        </member>
        <member name="T:HML.TabControlPlusGlobalCustomButtton">
            <summary>
            全局自定义按钮
            </summary>
        </member>
        <member name="E:HML.TabControlPlusGlobalCustomButtton.GlobalCustomButttonClick">
            <summary>
            全局自定义按钮单击事件
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.Key">
            <summary>
            按钮Key（必须唯一，可用于索引）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.Visible">
            <summary>
            按钮是否显示
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.Enabled">
            <summary>
            按钮启用状态
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.Size">
            <summary>
            按钮Size
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.LRMargin">
            <summary>
            按钮左右外边距
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.TipText">
            <summary>
            按钮提示文本
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.ImageNormal">
            <summary>
            按钮图片(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.ImageEnter">
            <summary>
            按钮图片(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.Data">
            <summary>
            按钮自定义保存数据
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.M_Rect">
            <summary>
            按钮rect（包含:外边距、内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButtton.C_Rect">
            <summary>
            按钮rect（只包含:内容）
            </summary>
        </member>
        <member name="F:HML.TabControlPlusGlobalCustomButtton.owner">
            <summary>
            全局自定义按钮所属TabControl
            </summary>
        </member>
        <member name="M:HML.TabControlPlusGlobalCustomButtton.Invalidate">
            <summary>
            控件重绘
            </summary>
        </member>
        <member name="M:HML.TabControlPlusGlobalCustomButtton.InitializeInvalidate">
            <summary>
            控件重新初始化和重绘
            </summary>
        </member>
        <member name="M:HML.TabControlPlusGlobalCustomButtton.SetOwner(HML.TabControlPlus)">
            <summary>
            设置全局自定义按钮所属的控件
            </summary>
            <param name="owner">设置全局自定义按钮所属的控件</param>
        </member>
        <member name="M:HML.TabControlPlusGlobalCustomButtton.GetRectangle">
            <summary>
            获取按钮Rectangle信息（只包含:内容）
            </summary>
            <returns></returns>
        </member>
        <member name="T:HML.TabControlPlusGlobalCustomButttonCollection">
            <summary>
            全局自定义按钮集合
            </summary>
        </member>
        <member name="F:HML.TabControlPlusGlobalCustomButttonCollection.globalCustomButttonList">
            <summary>
            全局自定义按钮集合
            </summary>
        </member>
        <member name="F:HML.TabControlPlusGlobalCustomButttonCollection.owner">
            <summary>
            全局自定义按钮所属TabControl
            </summary>
        </member>
        <member name="M:HML.TabControlPlusGlobalCustomButttonCollection.#ctor(HML.TabControlPlus)">
            <summary>
            
            </summary>
            <param name="owner">全局自定义按钮所属TabControl</param>
        </member>
        <member name="T:HML.TabControlPlusGlobalCustomButttonEventArgs">
            <summary>
            全局自定义按钮事件参数
            </summary>
        </member>
        <member name="P:HML.TabControlPlusGlobalCustomButttonEventArgs.GlobalCustomButtton">
            <summary>
            全局自定义按钮
            </summary>
        </member>
        <member name="M:HML.TabControlPlusGlobalCustomButttonEventArgs.#ctor(HML.TabControlPlusGlobalCustomButtton)">
            <summary>
            
            </summary>
            <param name="globalCustomButtton">全局自定义按钮</param>
        </member>
        <member name="T:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs">
            <summary>
            菜单背景绘制后事件参数
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs.Bounds_P">
            <summary>
            菜单区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs.Bounds_C">
            <summary>
            菜单区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs.ClipBounds_P">
            <summary>
            菜单剪辑区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="M:HML.TabControlPlusTabBarDrawBackgroundAfterEventArgs.#ctor(System.Single,System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）</param>
            <param name="bounds_P">当前选项区域（包含:内边距、内容）</param>
            <param name="bounds_C">当前选项区域（只包含:内容）</param>
            <param name="clipBounds_P">当前选项剪辑区域（包含:内边距、内容）</param>
        </member>
        <member name="T:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs">
            <summary>
            菜单背景绘制前事件参数
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.Bounds_P">
            <summary>
            菜单区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.Bounds_C">
            <summary>
            菜单区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.ClipBounds_P">
            <summary>
            菜单剪辑区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.Cancel">
            <summary>
            菜单背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)
            </summary>
        </member>
        <member name="M:HML.TabControlPlusTabBarDrawBackgroundBeforeEventArgs.#ctor(System.Single,System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）</param>
            <param name="bounds_P">当前选项区域（包含:内边距、内容）</param>
            <param name="bounds_C">当前选项区域（只包含:内容）</param>
            <param name="clipBounds_P">当前选项剪辑区域（包含:内边距、内容）</param>
            <param name="cancel">当前选项背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.TabControlPlusTabBarAlignments">
            <summary>
            菜单布局
            </summary>
        </member>
        <member name="F:HML.TabControlPlusTabBarAlignments.Top">
            <summary>
            控件的顶部
            </summary>
        </member>
        <member name="F:HML.TabControlPlusTabBarAlignments.Bottom">
            <summary>
            控件的底部
            </summary>
        </member>
        <member name="F:HML.TabControlPlusTabBarAlignments.Left">
            <summary>
            控件的左边
            </summary>
        </member>
        <member name="F:HML.TabControlPlusTabBarAlignments.Right">
            <summary>
            控件的右边
            </summary>
        </member>
        <member name="T:HML.TabControlPlusNavigationButtonOperatedEventArgs">
            <summary>
            导航栏按钮操作后事件参数
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButtonOperatedEventArgs.NavigationButtonType">
            <summary>
            导航栏按钮类型
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButtonOperatedEventArgs.CurrentFirstTabItemIndex">
            <summary>
            当前选项卡左边出现的第一个选项索引
            </summary>
        </member>
        <member name="M:HML.TabControlPlusNavigationButtonOperatedEventArgs.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="currentFirstTabItemIndex">当前选项卡左边出现的第一个选项索引</param>
        </member>
        <member name="T:HML.TabControlPlusNavigationButtonOperatingEventArgs">
            <summary>
            导航栏按钮操作时事件参数
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButtonOperatingEventArgs.NavigationButtonType">
            <summary>
            导航栏按钮类型
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButtonOperatingEventArgs.CurrentFirstTabItemIndex">
            <summary>
            当前选项卡左边出现的第一个选项索引
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButtonOperatingEventArgs.TargetFirstTabItemIndex">
            <summary>
            当前选项卡左边出现的第一个选项要切换到的索引
            </summary>
        </member>
        <member name="M:HML.TabControlPlusNavigationButtonOperatingEventArgs.#ctor(HML.TabControlPlusNavigationButtonTypes,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="navigationButtonType">导航栏按钮类型</param>
            <param name="currentFirstTabItemIndex">当前选项卡左边出现的第一个选项的索引</param>
            <param name="targetFirstTabItemIndex">当前选项卡左边出现的第一个选项要切换到的索引</param>
            <param name="cancel">是否取消操作</param>
        </member>
        <member name="T:HML.TabControlPlusNavigationButton">
            <summary>
            导航栏按钮
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.Style">
            <summary>
            导航栏按钮风格
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.LRMargin">
            <summary>
            导航栏按钮左右外边距
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.Size">
            <summary>
            导航栏按钮Size
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.BackNormalColor">
            <summary>
            导航栏按钮背景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.BackEnterColor">
            <summary>
            导航栏按钮背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.ForeNormalColor">
            <summary>
            导航栏按钮前景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.ForeEnterColor">
            <summary>
            导航栏按钮前景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.ImageNormal">
            <summary>
            导航栏按钮图片(正常)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.ImageEnter">
            <summary>
            导航栏按钮图片(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.M_Rect">
            <summary>
            导航栏按钮rect(包括外边距)
            </summary>
        </member>
        <member name="P:HML.TabControlPlusNavigationButton.C_Rect">
            <summary>
            导航栏按钮rect(不包括外边距、边框、内边距)
            </summary>
        </member>
        <member name="F:HML.TabControlPlusNavigationButton.owner">
            <summary>
            导航栏按钮所属TabControl
            </summary>
        </member>
        <member name="M:HML.TabControlPlusNavigationButton.#ctor(HML.TabControlPlus)">
            <summary>
            导航栏按钮所属TabControl
            </summary>
            <param name="_owner"></param>
        </member>
        <member name="M:HML.TabControlPlusNavigationButton.InitializeInvalidate">
            <summary>
            控件重新初始化和重绘
            </summary>
        </member>
        <member name="M:HML.TabControlPlusNavigationButton.Invalidate">
            <summary>
            控件重绘
            </summary>
        </member>
        <member name="T:HML.TabControlPlusNavigationButtonStyles">
            <summary>
            导航栏按钮风格
            </summary>
        </member>
        <member name="F:HML.TabControlPlusNavigationButtonStyles.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:HML.TabControlPlusNavigationButtonStyles.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="T:HML.TabControlPlusNavigationButtonTypes">
            <summary>
            导航栏按钮类型
            </summary>
        </member>
        <member name="F:HML.TabControlPlusNavigationButtonTypes.Prev">
            <summary>
            上一页
            </summary>
        </member>
        <member name="F:HML.TabControlPlusNavigationButtonTypes.Next">
            <summary>
            下一页
            </summary>
        </member>
        <member name="T:HML.TabControlPlusPicker">
            <summary>
            TabControlPlus下拉面板
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.mainRect">
            <summary>
            列表区域Rect
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.mainRealityRect">
            <summary>
            真实列表区域Rect
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.mousedownobject">
            <summary>
            鼠标按下对象
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.mousedownpoint">
            <summary>
            鼠标按下对象的坐标
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.mouseenterobject">
            <summary>
            鼠标进入对象
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.scrollobject">
            <summary>
            代表滚动条对象
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPicker.tcp">
            <summary>
            所属控件
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.InitializeRectangle">
            <summary>
            初始化控件Rect
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.InitializeMainRectangle">
            <summary>
            初始化列表区域Rect
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.InitializeMainRealityRectangle">
            <summary>
            初始化真实列表区域Rect
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.InitializeScrollRectangle">
            <summary>
            初始化滚动条Rect
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.InitializeStatus">
            <summary>
            初始化控件状态
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.UpdateScrollSlideRectLocation">
            <summary>
            更新滑块的RectLocation
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.GetScrollVisableStatus">
            <summary>
            获取滚动条当前显示状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TabControlPlusPicker.UpdateItemsRect">
            <summary>
            更新所有选项Rect
            </summary>
        </member>
        <member name="M:HML.TabControlPlusPicker.FindMouseDownItem(System.Drawing.Point)">
            <summary>
            根据坐标查找鼠标所在的选项
            </summary>
            <param name="mousePoint">坐标</param>
            <returns>没有为null</returns>
        </member>
        <member name="M:HML.TabControlPlusPicker.MouseMoveWheel(System.Int32)">
            <summary>
            滚动条移动或鼠标滚轮移动
            </summary>
            <param name="offset"></param>
        </member>
        <member name="T:HML.TabControlPlusPickerItemSplitterStyles">
            <summary>
            下拉框选项分割线风格
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPickerItemSplitterStyles.None">
            <summary>
            没有
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPickerItemSplitterStyles.Line">
            <summary>
            普通线条
            </summary>
        </member>
        <member name="F:HML.TabControlPlusPickerItemSplitterStyles.GradualLine">
            <summary>
            渐变线
            </summary>]
        </member>
        <member name="T:HML.TabControlPlusPickerStyle">
            <summary>
            TabControlPlus下拉面板配置
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.BorderColor">
            <summary>
            下拉框边框颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.MaxSize">
            <summary>
            下拉框最大Size
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemIcoVisible">
            <summary>
            是否显示选项图标
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemHeight">
            <summary>
            下拉框选项高度
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemLRPadding">
            <summary>
            下拉框选项左右内边距
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemFont">
            <summary>
            下拉框选项字体
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemBackNormalColor">
            <summary>
            下拉框选项背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemTextNormalColor">
            <summary>
            下拉框选项文本颜色（正常）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemBackEnterColor">
            <summary>
            下拉框选项背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemTextEnterColor">
            <summary>
            下拉框选项文本颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemSplitterStyle">
            <summary>
            下拉框选项分割线风格
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ItemSplitterColor">
            <summary>
            下拉框选项分割线颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollBarThickness">
            <summary>
            下拉框滚动条滑条厚度
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollBarBackColor">
            <summary>
            下拉框滚动条滑条背景颜色
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollSlideMinSize">
            <summary>
            下拉框滚动条滑块最小高度
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollSlideBackNormalColor">
            <summary>
            下拉框滚动条滑块背景颜色（正常）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollSlideBackEnterColor">
            <summary>
            下拉框滚动条滑块背景颜色（鼠标进入）
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollBar_Rect">
            <summary>
            下拉框滚动条滑条Rect
            </summary>
        </member>
        <member name="P:HML.TabControlPlusPickerStyle.ScrollSlide_Rect">
            <summary>
            下拉框滚动条滑块rect
            </summary>
        </member>
        <member name="T:HML.TabItemAutoWidthMode">
            <summary>
            TabItem自动宽度模式
            </summary>
        </member>
        <member name="F:HML.TabItemAutoWidthMode.Auto">
            <summary>
            采用控件通用设置
            </summary>
        </member>
        <member name="F:HML.TabItemAutoWidthMode.True">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:HML.TabItemAutoWidthMode.False">
            <summary>
            不显示
            </summary>
        </member>
        <member name="T:HML.TabItemCloseButtonClosedEventArgs">
            <summary>
            TabItem关闭后事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonClosedEventArgs.TabPage">
            <summary>
            关闭按钮所属的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonClosedEventArgs.CloseButton">
            <summary>
            关闭按钮
            </summary>
        </member>
        <member name="M:HML.TabItemCloseButtonClosedEventArgs.#ctor(HML.TabPagePlus,HML.TabItemCloseButton)">
            <summary>
            
            </summary>
            <param name="tabPage">关闭按钮所属的TabPage</param>
            <param name="closeButton">关闭按钮</param>
        </member>
        <member name="T:HML.TabItemCloseButtonCloseingEventArgs">
            <summary>
            TabItem关闭时事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonCloseingEventArgs.TabPage">
            <summary>
            关闭按钮所属的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonCloseingEventArgs.CloseButton">
            <summary>
            关闭按钮
            </summary>
        </member>
        <member name="M:HML.TabItemCloseButtonCloseingEventArgs.#ctor(HML.TabPagePlus,HML.TabItemCloseButton,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tabPage">关闭按钮所属的TabPage</param>
            <param name="closeButton">关闭按钮</param>
            <param name="cancel">是否取消关闭</param>
        </member>
        <member name="T:HML.TabItemCloseButtonDrawBeforeEventArgs">
            <summary>
            TabItem关闭按钮绘制前事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.TabPage">
            <summary>
            关闭按钮所属的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面（ 当前 Clip=ItemClipBounds_C ）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.BackgroudBrush">
            <summary>
            关闭按钮背景颜色画笔（会自动释放）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.ForePen">
            <summary>
            关闭按钮前景颜色画笔（会自动释放）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.TabBarBounds_P">
            <summary>
            导航栏区域 （包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.TabBarBounds_C">
            <summary>
            导航栏区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.ItemClipBounds_C">
            <summary>
            当前选项剪辑区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.Bounds_M">
            <summary>
            关闭按钮区域（包含:外边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.Bounds_C">
            <summary>
            关闭按钮区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.ClipBounds_C">
            <summary>
            关闭按钮剪辑区域（包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButtonDrawBeforeEventArgs.Cancel">
            <summary>
            关闭按钮背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)
            </summary>
        </member>
        <member name="M:HML.TabItemCloseButtonDrawBeforeEventArgs.#ctor(HML.TabPagePlus,System.Single,System.Drawing.Graphics,System.Drawing.SolidBrush,System.Drawing.Pen,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tabPage">关闭按钮所属的TabPage</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面（ 当前 Clip=ItemClipBounds_C ）</param>
            <param name="backgroudBrush">关闭按钮背景颜色画笔（会自动释放）</param>
            <param name="forePen">关闭按钮前景颜色画笔（会自动释放）</param>
            <param name="tabBarBounds_P">导航栏区域 （包含:内边距、内容）</param>
            <param name="tabBarBounds_C">导航栏区域 （包含:内容）</param>
            <param name="itemClipBounds_C">当前选项剪辑区域 （包含:内容</param>
            <param name="bounds_M">关闭按钮区域（包含:外边距、内边距、内容）</param>
            <param name="bounds_C">关闭按钮区域（只包含:内容）</param>
            <param name="clipBounds_C">关闭按钮剪辑区域（包含:内边距、内容）</param>
            <param name="cancel">关闭按钮背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.TabItemCloseButton">
            <summary>
            TabItem关闭按钮
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.Visible">
            <summary>
            TabItem关闭按钮是否显示(Auto表示采用控件通用设置)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.Enabled">
            <summary>
            TabItem使用状态是否已启动
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.BackNormalColor">
            <summary>
            TabItem按钮背景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.BackEnterColor">
            <summary>
            TabItem按钮背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.ForeNormalColor">
            <summary>
            TabItem按钮前景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.ForeEnterColor">
            <summary>
            TabItem按钮前景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.M_Rect">
            <summary>
            选项关闭按钮rect(包括外边距)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.C_Rect">
            <summary>
            选项关闭按钮rect(不包括内外边距)
            </summary>
        </member>
        <member name="P:HML.TabItemCloseButton.Data">
            <summary>
            自定义保存数据
            </summary>
        </member>
        <member name="F:HML.TabItemCloseButton.owner">
            <summary>
            TabItem关闭按钮所属TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemCloseButton.#ctor(HML.TabPagePlus)">
            <summary>
            TabItem关闭按钮所属TabPage
            </summary>
            <param name="_owner"></param>
        </member>
        <member name="M:HML.TabItemCloseButton.Invalidate">
            <summary>
            控件重绘
            </summary>
        </member>
        <member name="M:HML.TabItemCloseButton.InitializeInvalidate">
            <summary>
            控件重新初始化和重绘
            </summary>
        </member>
        <member name="T:HML.TabItemCloseButtonVisibles">
            <summary>
            TabItem关闭按钮是否显示
            </summary>
        </member>
        <member name="F:HML.TabItemCloseButtonVisibles.Auto">
            <summary>
            采用控件通用设置
            </summary>
        </member>
        <member name="F:HML.TabItemCloseButtonVisibles.True">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:HML.TabItemCloseButtonVisibles.False">
            <summary>
            不显示
            </summary>
        </member>
        <member name="T:HML.TabItemColseButtonAlignments">
            <summary>
            TabItem关闭按钮对齐方式(通用配置)
            </summary>
        </member>
        <member name="F:HML.TabItemColseButtonAlignments.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.TabItemColseButtonAlignments.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="T:HML.TabItemCreateCustomPathBeforeEventArgs">
            <summary>
            TabItem生成选项自定义路径前事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.TabPage">
            <summary>
            TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.TabBarBounds_P">
            <summary>
            导航栏区域 （包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.TabBarBounds_C">
            <summary>
            导航栏区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.ItemsClipBounds_C">
            <summary>
            允许显示所有选项的总剪辑区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.Bounds_M">
            <summary>
            当前选项区域（包含:外边距、内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.Bounds_P">
            <summary>
            当前选项区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.Bounds_C">
            <summary>
            当前选项区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.GraphicsPath">
            <summary>
            当前选项生成形状GraphicsPath路径 ( 一般用选项的 Bounds_P 范围生成 )
            </summary>
        </member>
        <member name="P:HML.TabItemCreateCustomPathBeforeEventArgs.Cancel">
            <summary>
            当前选项生成自定义路径是否处理完毕(True 将会跳过控件的默认生成)
            </summary>
        </member>
        <member name="M:HML.TabItemCreateCustomPathBeforeEventArgs.#ctor(HML.TabPagePlus,System.Single,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tabPage">TabPage</param>
            <param name="dpi">系统缩放比例</param>
            <param name="tabBarBounds_P">导航栏区域 （包含:内边距、内容）</param>
            <param name="tabBarBounds_C">导航栏区域 （包含:内容）</param>
            <param name="itemsClipBounds_C">允许显示所有选项的总剪辑区域 （包含:内容）</param>
            <param name="bounds_M">当前选项区域（包含:外边距、内边距、内容）</param>
            <param name="bounds_P">当前选项区域（包含:内边距、内容）</param>
            <param name="bounds_C">当前选项区域（只包含:内容）</param>
            <param name="cancel">当前选项背景绘制是否已处理完毕 (True 将会跳过控件的默认绘制)</param>
        </member>
        <member name="T:HML.TabItemCustomButtonDrawAfterEventArgs">
            <summary>
            TabItem自定义按钮绘制后事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.TabPage">
            <summary>
            自定义按钮所属的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.CustomButton">
            <summary>
            自定义按钮
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面（ 当前 Clip=ItemClipBounds_C ）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.TabBarBounds_P">
            <summary>
            导航栏区域 （包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.TabBarBounds_C">
            <summary>
            导航栏区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.ItemClipBounds_C">
            <summary>
            当前选项剪辑区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.Bounds_M">
            <summary>
            自定义按钮区域（包含:外边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.Bounds_C">
            <summary>
            自定义按钮区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButtonDrawAfterEventArgs.ClipBounds_C">
            <summary>
            自定义按钮剪辑区域（只包含:内容）
            </summary>
        </member>
        <member name="M:HML.TabItemCustomButtonDrawAfterEventArgs.#ctor(HML.TabPagePlus,HML.TabItemCustomButton,System.Single,System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="tabPage">自定义按钮所属的TabPage</param>
            <param name="customButton">自定义按钮</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面（ 当前 Clip=ClipBounds_P ）</param>
            <param name="tabBarBounds_P">导航栏区域 （包含:内边距、内容）</param>
            <param name="tabBarBounds_C">导航栏区域 （包含:内容）</param>
            <param name="itemClipBounds_C">当前选项剪辑区域 （包含:内容）</param>
            <param name="bounds_M">自定义按钮区域（包含:外边距、内容）</param>
            <param name="bounds_C">自定义按钮区域（只包含:内容）</param>
            <param name="clipBounds_C">自定义按钮剪辑区域（包含:内容）</param>
        </member>
        <member name="T:HML.TabItemCustomButton">
            <summary>
            TabItem自定义按钮
            </summary>
        </member>
        <member name="E:HML.TabItemCustomButton.TabItemCustomButtonClick">
            <summary>
            TabItem自定义按钮单击事件
            </summary>
        </member>
        <member name="E:HML.TabItemCustomButton.TabItemCustomButtonCheckedChanged">
            <summary>
            TabItem自定义按钮checked更改事件
            </summary>
        </member>
        <member name="E:HML.TabItemCustomButton.TabItemCusomButtonDrawAfter">
            <summary>
            TabItem自定义按钮绘制后事件
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.Key">
            <summary>
            按钮Key（必须唯一，可用于索引）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.Visible">
            <summary>
            按钮是否显示
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.Enabled">
            <summary>
            按钮使用状态
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.Size">
            <summary>
            按钮Size
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.LRMargin">
            <summary>
            按钮左右外边距
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.TipText">
            <summary>
            按钮提示文本
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.ImageNormal">
            <summary>
            按钮图片(正常)
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.ImageEnter">
            <summary>
            按钮图片(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.CheckButton">
            <summary>
            按钮是否为check按钮
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.Checked">
            <summary>
            按钮为check按钮时是否选中
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.ImageCheckedNormal">
            <summary>
            按钮图片(已选中正常)
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.ImageCheckedEnter">
            <summary>
            按钮图片(已选中鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.M_Rect">
            <summary>
            按钮rect（包含:外边距、内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.C_Rect">
            <summary>
            按钮rect（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButton.Data">
            <summary>
            自定义保存数据
            </summary>
        </member>
        <member name="F:HML.TabItemCustomButton.owner">
            <summary>
            TabItem自定义按钮所属TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemCustomButton.SetOwner(HML.TabPagePlus)">
            <summary>
            设置自定义按钮所属的TabPage
            </summary>
            <param name="owner">设置自定义按钮所属的TabPage</param>
        </member>
        <member name="M:HML.TabItemCustomButton.Invalidate">
            <summary>
            控件重绘
            </summary>
        </member>
        <member name="M:HML.TabItemCustomButton.InitializeInvalidate">
            <summary>
            控件重新初始化和重绘
            </summary>
        </member>
        <member name="T:HML.TabItemCustomButtonCollection">
            <summary>
            TabItem自定义按钮集合
            </summary>
        </member>
        <member name="F:HML.TabItemCustomButtonCollection.tabItemCustomButtonList">
            <summary>
            TabItem自定义按钮集合
            </summary>
        </member>
        <member name="F:HML.TabItemCustomButtonCollection.owner">
            <summary>
            自定义按钮所属TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemCustomButtonCollection.#ctor(HML.TabPagePlus)">
            <summary>
            
            </summary>
            <param name="owner">自定义按钮所属TabPage</param>
        </member>
        <member name="T:HML.TabItemCustomButttonOperatedEventArgs">
            <summary>
            TabItem自定义按钮操作事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButttonOperatedEventArgs.TabPage">
            <summary>
            自定义按钮所属的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemCustomButttonOperatedEventArgs.CustomButton">
            <summary>
            自定义按钮
            </summary>
        </member>
        <member name="M:HML.TabItemCustomButttonOperatedEventArgs.#ctor(HML.TabPagePlus,HML.TabItemCustomButton)">
            <summary>
            
            </summary>
            <param name="tabPage">当前单击的TabPageBaseExt</param>
            <param name="customButton">当前单击的自定义按钮</param>
        </member>
        <member name="T:HML.TabItemDrawBackgroundAfterEventArgs">
            <summary>
            TabItem背景绘制后事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.TabPage">
            <summary>
            TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.TabBarBounds_P">
            <summary>
            导航栏区域 （包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.TabBarBounds_C">
            <summary>
            导航栏区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.ItemsClipBounds_C">
            <summary>
            允许显示所有选项的总剪辑区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.Bounds_M">
            <summary>
            当前选项区域（包含:外边距、内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.Bounds_P">
            <summary>
            当前选项区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.Bounds_C">
            <summary>
            当前选项区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemDrawBackgroundAfterEventArgs.ClipBounds_P">
            <summary>
            当前选项剪辑区域（包含:内边距、内容）
            </summary>
        </member>
        <member name="M:HML.TabItemDrawBackgroundAfterEventArgs.#ctor(HML.TabPagePlus,System.Single,System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="tabPage">TabPage</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面 （ 当前 Clip=ClipBounds_P ）</param>
            <param name="tabBarBounds_P">导航栏区域 （包含:内边距、内容）</param>
            <param name="tabBarBounds_C">导航栏区域 （包含:内容）</param>
            <param name="itemsClipBounds_C">允许显示所有选项的总剪辑区域 （包含:内容）</param>
            <param name="bounds_M">当前选项区域（包含:外边距、内边距、内容）</param>
            <param name="bounds_P">当前选项区域（包含:内边距、内容）</param>
            <param name="bounds_C">当前选项区域（只包含:内容）</param>
            <param name="clipBounds_P">当前选项剪辑区域（包含:内边距、内容）</param>
        </member>
        <member name="T:HML.TabItemIcoDrawAfterEventArgs">
            <summary>
            TabItem图标绘制后事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.TabPage">
            <summary>
            图标所属的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.Dpi">
            <summary>
            系统缩放比例
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.Graphics">
            <summary>
            封装一个GDI+绘图图面（ 当前 Clip=ItemClipBounds_C ）
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.TabBarBounds_P">
            <summary>
            导航栏区域 （包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.TabBarBounds_C">
            <summary>
            导航栏区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.ItemClipBounds_C">
            <summary>
            当前选项剪辑区域 （包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.Bounds_M">
            <summary>
            图标区域（包含:外边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.Bounds_C">
            <summary>
            图标区域（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabItemIcoDrawAfterEventArgs.ClipBounds_C">
            <summary>
            图标剪辑区域（包含:内容）
            </summary>
        </member>
        <member name="M:HML.TabItemIcoDrawAfterEventArgs.#ctor(HML.TabPagePlus,System.Single,System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="tabPage">图标所属的TabPage</param>
            <param name="dpi">系统缩放比例</param>
            <param name="graphics">封装一个GDI+绘图图面（ 当前 Clip=ClipBounds_P ）</param>
            <param name="tabBarBounds_P">导航栏区域 （包含:内边距、内容）</param>
            <param name="tabBarBounds_C">导航栏区域 （包含:内容）</param>
            <param name="itemClipBounds_C">当前选项剪辑区域 （包含:内容）</param>
            <param name="bounds_M">图标区域（包含:外边距、内容）</param>
            <param name="bounds_C">图标区域（只包含:内容）</param>
            <param name="clipBounds_C">图标剪辑区域（包含:内容）</param>
        </member>
        <member name="T:HML.TabItemIcoVisibles">
            <summary>
            TabItem图标是否显示
            </summary>
        </member>
        <member name="F:HML.TabItemIcoVisibles.Auto">
            <summary>
            采用控件通用设置
            </summary>
        </member>
        <member name="F:HML.TabItemIcoVisibles.True">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:HML.TabItemIcoVisibles.False">
            <summary>
            不显示
            </summary>
        </member>
        <member name="T:HML.TabItemInterchangedEventArgs">
            <summary>
            两个TabItem位置互换后事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemInterchangedEventArgs.CurrentTabPage">
            <summary>
            当前要移动的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemInterchangedEventArgs.TargetTabPage">
            <summary>
            当前要移动的目标TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemInterchangedEventArgs.#ctor(HML.TabPagePlus,HML.TabPagePlus)">
            <summary>
            
            </summary>
            <param name="currentTabPage">当前要移动的TabPage</param>
            <param name="targetTabPage">当前要移动的目标TabPage</param>
        </member>
        <member name="T:HML.TabItemInterchangeingEventArgs">
            <summary>
            两个TabItem位置互换时事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemInterchangeingEventArgs.CurrentTabPage">
            <summary>
            当前要移动的TabPage
            </summary>
        </member>
        <member name="P:HML.TabItemInterchangeingEventArgs.TargetTabPage">
            <summary>
            当前要移动的目标TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemInterchangeingEventArgs.#ctor(HML.TabPagePlus,HML.TabPagePlus,System.Boolean)">
            <summary>
            
            </summary>
            <param name="currentTabPage">当前要移动的TabPage</param>
            <param name="targetTabPage">当前要移动的目标TabPage</param>
            <param name="cancel">是否取消操作</param>
        </member>
        <member name="T:HML.TabItemOperatedEventArgs">
            <summary>
            TabItem操作后事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemOperatedEventArgs.TabPage">
            <summary>
            TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemOperatedEventArgs.#ctor(HML.TabPagePlus)">
            <summary>
            
            </summary>
            <param name="tabPage">TabPage</param>
        </member>
        <member name="T:HML.TabItemOperatingEventArgs">
            <summary>
            TabItem操作时事件参数
            </summary>
        </member>
        <member name="P:HML.TabItemOperatingEventArgs.TabPage">
            <summary>
            TabPage
            </summary>
        </member>
        <member name="M:HML.TabItemOperatingEventArgs.#ctor(HML.TabPagePlus,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tabPage">TabPage</param>
            <param name="cancel">是否取消操作</param>
        </member>
        <member name="T:HML.TabPagePlus">
            <summary>
            TabPagePlus(TabPage增强版)
            </summary>
        </member>
        <member name="E:HML.TabPagePlus.TabItemIcoDrawAfter">
            <summary>
            TabItem图标绘制后事件
            </summary>
        </member>
        <member name="E:HML.TabPagePlus.TabItemCloseButtonCloseing">
            <summary>
            TabItem关闭时事件
            </summary>
        </member>
        <member name="E:HML.TabPagePlus.TabItemCloseButtonClosed">
            <summary>
            TabItem关闭后事件
            </summary>
        </member>
        <member name="E:HML.TabPagePlus.TabItemCloseButtonDrawBefore">
            <summary>
            TabItem关闭按钮绘制前事件
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemEnabled">
            <summary>
            TabItem启用状态
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemAutoWidth">
            <summary>
            TabItem是否为自动宽度
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemAutoWidthMin">
            <summary>
            TabItem自动宽度最小宽度(-1表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemFixedWidth">
            <summary>
            TabItem固定宽度(-1表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemLRMargin">
            <summary>
            TabItem左右外边距(-1, -1表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemLRPadding">
            <summary>
            TabItem左右内边距(-1, -1表示采用通用设置)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemTextVerticalLayout">
            <summary>
            TabItem文本是否垂直布局(限于左右两边)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemTextEllipsisCharacter">
            <summary>
            TabItem文本超出范围是否使用省略号代替
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemBackNormalColor">
            <summary>
            TabItem背景颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemBackEnterColor">
            <summary>
            TabItem背景颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemBackSelectedColor">
            <summary>
            TabItem背景颜色(选中)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemTextNormalColor">
            <summary>
            TabItem文本颜色(正常)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemTextEnterColor">
            <summary>
            TabItem文本颜色(鼠标进入)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemTextSelectedColor">
            <summary>
            TabItem文本颜色(选中)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.IsMouseEnter">
            <summary>
            鼠标是否已进入该选项
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemIcoVisible">
            <summary>
            TabItem图标是否显示
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemIcoImage">
            <summary>
            TabItem图标
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemCloseButton">
            <summary>
            TabItem关闭按钮
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TabItemCustomButtons">
            <summary>
            TabItem自定义按钮集合
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.M_Rect">
            <summary>
            选项rect（包含:外边距、内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.P_Rect">
            <summary>
            选项rect（包含:内边距、内容）
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.C_Rect">
            <summary>
            选项rect（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Rect_C_Size">
            <summary>
            选项Size（只包含:内容）
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.P_GP">
            <summary>
            选项GraphicsPath(一般用选项的NoClipPaddingBounds范围生成)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Ico_C_Size">
            <summary>
            选项图标Size
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Ico_C_Rect">
            <summary>
            选项图标rect(不包括内外边距)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Ico_M_Rect">
            <summary>
            选项图标rect(包括外边距)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Picker_Text_Size">
            <summary>
            下拉面板选项文本Size
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Text_C_Size">
            <summary>
            选项文本Size
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.Text_C_Rect">
            <summary>
            选项文本rect(排除外边距、边框、内边距)
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.TextVerticalLayoutTmp">
            <summary>
            文本的垂直布局字符串
            </summary>
        </member>
        <member name="P:HML.TabPagePlus.DropDownPanelItem_Rect">
            <summary>
            下拉面板选项Rect
            </summary>
        </member>
        <member name="M:HML.TabPagePlus.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text">TabItem文本</param>
        </member>
        <member name="M:HML.TabPagePlus.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key">TabItem名称（可用于索引,必须唯一）</param>
            <param name="text">TabItem文本</param>
        </member>
        <member name="M:HML.TabPagePlus.UpdatVerticalLayoutText">
            <summary>
            更新垂直方向文本
            </summary>
        </member>
        <member name="T:HML.TabPagePlusCollection">
            <summary>
            TabPagePlus集合
            </summary>
        </member>
        <member name="T:HML.TabPagePlusControlsCollection">
            <summary>
            TabPagePlus子控件集合
            </summary>
        </member>
        <member name="T:HML.Thermometer">
            <summary>
            温度计控件
            </summary>
        </member>
        <member name="E:HML.Thermometer.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.Thermometer.AnimationEnabled">
            <summary>
            Value改变时是否采用动画方式
            </summary>
        </member>
        <member name="P:HML.Thermometer.AnimationTime">
            <summary>
            Value改变时使用动画的时间(毫秒)
            </summary>
        </member>
        <member name="P:HML.Thermometer.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HML.Thermometer.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HML.Thermometer.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:HML.Thermometer.PipeDiameter">
            <summary>
            玻璃管直径
            </summary>
        </member>
        <member name="P:HML.Thermometer.PipeBorderThickness">
            <summary>
            玻璃管边框厚度
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:HML.Thermometer.PipeCosAngle" -->
        <member name="P:HML.Thermometer.PipeBorderColor">
            <summary>
            玻璃管边框颜色
            </summary>
        </member>
        <member name="P:HML.Thermometer.PipeBackColor">
            <summary>
            玻璃管内背景颜色
            </summary>
        </member>
        <member name="P:HML.Thermometer.PipeValueColor">
            <summary>
            玻璃管值颜色
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkVisible">
            <summary>
            是否显示刻度线
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMainFrequency">
            <summary>
            主刻度线间的位置
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkAlignment">
            <summary>
            刻度线对齐方式
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMainLineThickness">
            <summary>
            主刻度线长度
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMainLineColor">
            <summary>
            主刻度线颜色
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMainLineTextVisible">
            <summary>
            是否显示主刻度线文本
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMainLineTextFont">
            <summary>
            主刻度线文本字体
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMainLineTextColor">
            <summary>
            主刻度线文本颜色
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMinorCount">
            <summary>
            一个主刻度分割成多少个子刻度
            </summary>
        </member>
        <member name="P:HML.Thermometer.MarkMinorLineColor">
            <summary>
            子刻度颜色
            </summary>
        </member>
        <member name="F:HML.Thermometer.pipeRect">
            <summary>
            玻璃管rect(排除顶部圆角和底部玻璃球部分)
            </summary>
        </member>
        <member name="F:HML.Thermometer.ballRect">
            <summary>
            玻璃球rect
            </summary>
        </member>
        <member name="F:HML.Thermometer.animation_start_value">
            <summary>
            动画开始值
            </summary>
        </member>
        <member name="F:HML.Thermometer.animation_end_value">
            <summary>
            动画结束值
            </summary>
        </member>
        <member name="F:HML.Thermometer.animation_current_value">
            <summary>
            动画当前值
            </summary>
        </member>
        <member name="F:HML.Thermometer.usedTime">
            <summary>
            动画已使用的时间
            </summary>
        </member>
        <member name="F:HML.Thermometer.content_padding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="M:HML.Thermometer.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.Thermometer.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="T:HML.ThermometerMarkAlignment">
            <summary>
            Thermometer刻度线对齐方式
            </summary>
        </member>
        <member name="F:HML.ThermometerMarkAlignment.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:HML.ThermometerMarkAlignment.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="T:HML.TimerPrecision">
            <summary>
            毫秒级别计时器
            </summary>
        </member>
        <member name="E:HML.TimerPrecision.Tick">
            <summary>
            计时器间隔引发事件
            </summary>
        </member>
        <member name="P:HML.TimerPrecision.Interval">
            <summary>
              获取或设置在相对于上一次发生的Tick 事件引发的时间（以毫秒为单位）。
            </summary>
        </member>
        <member name="P:HML.TimerPrecision.Enabled">
            <summary>
            获取或设置计时器是否正在运行。
            </summary>
        </member>
        <member name="P:HML.TimerPrecision.Timecaps">
            <summary>
            计时器分辨率的信息
            </summary>
        </member>
        <member name="F:HML.TimerPrecision.timecaps">
            <summary>
            计时器分辨率的信息
            </summary>
        </member>
        <member name="F:HML.TimerPrecision.timerCallback">
             <summary>
            作为fptc参数的函数指针
             </summary>
        </member>
        <member name="F:HML.TimerPrecision.timerID">
            <summary>
            计时器标识
            </summary>
        </member>
        <member name="F:HML.TimerPrecision.TIMERR_NOERROR">
            <summary>
            查询计时器设备以确定其分辨率成功
            </summary>
        </member>
        <member name="F:HML.TimerPrecision.TIME_CALLBACK_FUNCTION">
            <summary>
            当计时器到期时，系统将调用fptc参数指向的函数。
            </summary>
        </member>
        <member name="T:HML.TimerPrecision.TIMECAPS">
            <summary>
            此结构包含有关计时器分辨率的信息。单位是ms
            </summary>
        </member>
        <member name="F:HML.TimerPrecision.TIMECAPS.wPeriodMin">
            <summary>
            支持的最小期限。
            </summary>
        </member>
        <member name="F:HML.TimerPrecision.TIMECAPS.wPeriodMax">
            <summary>
            支持的最大期限。
            </summary>
        </member>
        <member name="M:HML.TimerPrecision.timeSetEvent(System.UInt32,System.UInt32,HML.TimerPrecision.TimerExtCallback,System.UInt32,System.UInt32)">
            <summary>
            此函数启动指定的计时器事件。
            </summary>
            <param name="uDelay">事件延迟，以毫秒为单位。如果该值不在计时器支持的最小和最大事件延迟范围内，则该函数返回错误。</param>
            <param name="uResolution">计时器事件的分辨率，以毫秒为单位。分辨率越高，分辨率越高；零分辨率表示周期性事件应该以最大可能的精度发生。但是，为减少系统开销，应使用适合您的应用程序的最大值。</param>
            <param name="fptc">如果fuEvent指定TIME_CALLBACK_EVENT_SET或TIME_CALLBACK_EVENT_PULSE标志，则fptc参数将解释为事件对象的句柄。事件将在单个事件完成时设置或发出脉冲，或者在周期性事件完成时定期设置或触发。对于fuEvent的任何其他值，fptc参数将被解释为函数指针。</param>
            <param name="dwUser">用户提供的回调数据。</param>
            <param name="fuEvent">计时器事件类型。下表显示了fuEvent参数可以包含的值。</param>
            <returns></returns>
        </member>
        <member name="M:HML.TimerPrecision.timeKillEvent(System.UInt32)">
            <summary>
            此功能取消指定的计时器事件。
            </summary>
            <param name="id">要取消的计时器事件的标识符。此标识符由timeSetEvent函数返回，该函数启动指定的计时器事件。</param>
            <returns></returns>
        </member>
        <member name="M:HML.TimerPrecision.timeGetDevCaps(HML.TimerPrecision.TIMECAPS@,System.Int32)">
            <summary>
            此函数查询计时器设备以确定其分辨率。
            </summary>
            <param name="ptc">指向TIMECAPS结构的指针。该结构充满了有关计时器设备分辨率的信息。</param>
            <param name="cbtc">TIMECAPS结构的大小（以字节为单位）。</param>
            <returns>如果成功，则返回TIMERR_NOERROR，如果未能返回计时器设备功能，则返回TIMERR_STRUCT。</returns>
        </member>
        <member name="M:HML.TimerPrecision.Start">
            <summary>
            启动定时器
            </summary>
        </member>
        <member name="M:HML.TimerPrecision.Stop">
            <summary>
            暂停定时器
            </summary>
        </member>
        <member name="M:HML.TimerPrecision.ReStart">
            <summary>
            重新开始定时器
            </summary>
        </member>
        <member name="T:HML.ToolTipPlus">
            <summary>
            ToolTipPlus提示控件
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.Anchor">
            <summary>
            提示框出现位置
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.AnchorSpace">
            <summary>
            提示框出现位置与拥有者的距离(只限于 Show 方法有效)
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.MaxSize">
            <summary>
            最大Size
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.MinSize">
            <summary>
            最小Size
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.Font">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.BorderVisible">
            <summary>
            是否显示边框
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.TitleVisible">
            <summary>
            是否显示标题
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.TitleLayout">
            <summary>
            提示框标题布局
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.TitleBackColor">
            <summary>
            标题背景颜色
            </summary>
        </member>
        <member name="P:HML.ToolTipPlus.TitleTextColor">
            <summary>
            标题文本颜色
            </summary>
        </member>
        <member name="F:HML.ToolTipPlus.cententPadding">
            <summary>
            内容内边距
            </summary>
        </member>
        <member name="M:HML.ToolTipPlus.Show(System.String,System.Windows.Forms.IWin32Window,System.Drawing.Rectangle,HML.ToolTipPlusAnchors)">
            <summary>
            设置与指定控件关联的工具提示文本，然后在指定的相对位置以模式方式显示该工具提示。
            </summary>
            <param name="text">包含新工具提示文本的 System.String。</param>
            <param name="window">要为其显示工具提示的 System.Windows.Forms.Control。</param>
            <param name="rect">重新定义关联控件窗口的rect信息( Rectangle.Empty 值时不会重新定义)</param>
            <param name="anchor">工具提示的位置</param>
        </member>
        <member name="M:HML.ToolTipPlus.Show(System.String,System.Windows.Forms.IWin32Window,System.Drawing.Rectangle,HML.ToolTipPlusAnchors,System.Int32)">
            <summary>
            设置与指定控件关联的工具提示文本，然后在指定的相对位置以模式方式显示该工具提示。
            </summary>
            <param name="text">包含新工具提示文本的 System.String。</param>
            <param name="window">要为其显示工具提示的 System.Windows.Forms.Control。</param>
            <param name="rect">重新定义关联控件窗口的rect信息</param>
            <param name="anchor">工具提示的位置</param>
            <param name="duration">包含工具提示持续显示时间（以毫秒为单位）的 System.Int32。</param>
        </member>
        <member name="M:HML.ToolTipPlus.GetControlAutoSize(System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            通过文本计算工具提示大小(text为null时根据control的提示文本计算)
            </summary>
            <param name="control">要为其检索 System.Windows.Forms.ToolTip 文本的 System.Windows.Forms.Control。</param>
            <param name="text">要计算的指定文本</param>
            <param name="text">要计算的标题</param>
            <returns></returns>
        </member>
        <member name="T:HML.ToolTipPlusAnchors">
            <summary>
            提示框出现位置
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusAnchors.TopCenter">
            <summary>
            顶部居中
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusAnchors.LeftCenter">
            <summary>
            左边居中
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusAnchors.RightCenter">
            <summary>
            右边居中
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusAnchors.BottomCenter">
            <summary>
            下边居中
            </summary>
        </member>
        <member name="T:HML.ToolTipPlusTitleLayouts">
            <summary>
            提示框标题布局
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusTitleLayouts.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusTitleLayouts.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusTitleLayouts.Right">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:HML.ToolTipPlusTitleLayouts.Bottom">
            <summary>
            下边
            </summary>
        </member>
        <member name="T:HML.TrackBarPlus">
            <summary>
            滑块控件
            </summary>
        </member>
        <member name="E:HML.TrackBarPlus.ValueChanged">
            <summary>
            Value值更改事件
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.ActivateColor">
            <summary>
            滑块激活的虚线框颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.Orientation">
            <summary>
            显示方位
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.Style">
            <summary>
            显示风格
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.SmallChange">
            <summary>
            键盘Up、Down 或 鼠标滚轮上下键移动 最小间隔值
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.PoleClickChange">
            <summary>
            是否启用鼠标单击滑杆修改值功能
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.PoleThickness">
            <summary>
            滑杆厚度
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.PoleBackColor">
            <summary>
            滑杆背景颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.PoleBackGradualColors">
            <summary>
            滑杆背景渐变颜色集合
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.PoleValueColor">
            <summary>
            滑杆值颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.PoleValueGradualColors">
            <summary>
            滑杆值渐变颜色集合
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.LumpDiameter">
            <summary>
            滑块直径 (只限于 Excircle、Square 风格)
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.LumpBorderColor">
            <summary>
            滑块边框颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.LumpBackColor">
            <summary>
            滑块背景颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MarkVisible">
            <summary>
            是否显示刻度
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MarkLineThickness">
            <summary>
            刻度线厚度
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MarkLineBold">
            <summary>
            刻度线是否加粗
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MarkLineColor">
            <summary>
            刻度线颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlus.MarkLineFrequency">
            <summary>
            刻度线间的位置数
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.mousedownobject">
            <summary>
            当前鼠标已按下的对象
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.mousedownobjectvalue">
            <summary>
            当前鼠标已按下的对象的value
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.mousedownpoint">
            <summary>
            当前鼠标已按下的坐标
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.contentPadding">
            <summary>
            控件内边距
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.poleRect">
            <summary>
            滑杆rect
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.lumpRect">
            <summary>
            滑块rect
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.lumpPath">
            <summary>
            滑块Path
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.Lump_Start_Point">
            <summary>
            滑块开始坐标(滑块中心为参考点)
            </summary>
        </member>
        <member name="F:HML.TrackBarPlus.Lump_End_Point">
            <summary>
            滑块结束坐标(滑块中心为参考点)
            </summary>
        </member>
        <member name="M:HML.TrackBarPlus.InitializeRectangle">
            <summary>
            初始化Rectangle
            </summary>
        </member>
        <member name="M:HML.TrackBarPlus.GetControlAutoHeight">
            <summary>
            根据设置计算控件高度
            </summary>
            <returns></returns>
        </member>
        <member name="M:HML.TrackBarPlus.UpdateAutoControlSize">
            <summary>
            自动根据设置更新控件Size
            </summary>
        </member>
        <member name="M:HML.TrackBarPlus.GetLinearGradientBrush(HML.TrackBarPlusGradualColorCollection,System.Drawing.RectangleF,System.Single)">
            <summary>
            获取渐变画笔
            </summary>
            <param name="list">渐变颜色集合</param>
            <param name="rect">要渐变区域</param>
            <param name="angle">渐变角度</param>
            <returns></returns>
        </member>
        <member name="T:HML.TrackBarPlusGradualColor">
            <summary>
            TrackBarPlus渐变颜色
            </summary>
        </member>
        <member name="P:HML.TrackBarPlusGradualColor.Position">
            <summary>
            渐变范围值 0-1
            </summary>
        </member>
        <member name="P:HML.TrackBarPlusGradualColor.Color">
            <summary>
            渐变范围值对应颜色
            </summary>
        </member>
        <member name="T:HML.TrackBarPlusGradualColorCollection">
            <summary>
            TrackBarPlus渐变颜色集合
            </summary>
        </member>
        <member name="T:HML.TrackBarPlusOrientations">
            <summary>
            TrackBarPlus显示方位
            </summary>
        </member>
        <member name="F:HML.TrackBarPlusOrientations.HorizontalTop">
             <summary>
            水平放置靠近上边
             </summary>
        </member>
        <member name="F:HML.TrackBarPlusOrientations.HorizontalBottom">
            <summary>
            水平放置靠近下边
            </summary>
        </member>
        <member name="F:HML.TrackBarPlusOrientations.VerticalLeft">
            <summary>
            垂直放置靠近左边
            </summary>
        </member>
        <member name="F:HML.TrackBarPlusOrientations.VerticalRight">
            <summary>
            垂直放置靠近右边
            </summary>
        </member>
        <member name="T:HML.TrackBarPlusStyles">
            <summary>
            TrackBarPlus显示风格
            </summary>
        </member>
        <member name="F:HML.TrackBarPlusStyles.Excircle">
            <summary>
            外圆
            </summary>
        </member>
        <member name="F:HML.TrackBarPlusStyles.InnerCircle">
            <summary>
            内圆
            </summary>
        </member>
        <member name="F:HML.TrackBarPlusStyles.Square">
             <summary>
            方形
             </summary>
        </member>
        <member name="T:HML.WaterRipples">
            <summary>
            水波纹控件
            </summary>
        </member>
        <member name="E:HML.WaterRipples.ValueChanged">
            <summary>
            值更改事件
            </summary>
        </member>
        <member name="P:HML.WaterRipples.AnimationEnabled">
            <summary>
            动画是否启动
            </summary>
        </member>
        <member name="P:HML.WaterRipples.Style">
            <summary>
            外观风格
            </summary>
        </member>
        <member name="P:HML.WaterRipples.BorderThickness">
            <summary>
            边框厚度
            </summary>
        </member>
        <member name="P:HML.WaterRipples.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:HML.WaterRipples.WaveSize">
            <summary>
            水波纹Size
            </summary>
        </member>
        <member name="P:HML.WaterRipples.WaveVelocity">
            <summary>
            水波纹移动速度(特定时间内移动像素)
            </summary>
        </member>
        <member name="P:HML.WaterRipples.WaveBackColor">
            <summary>
            水波纹背景颜色
            </summary>
        </member>
        <member name="P:HML.WaterRipples.WaveBehindColor">
            <summary>
            水波纹后方颜色
            </summary>
        </member>
        <member name="P:HML.WaterRipples.WaveFrontColor">
            <summary>
            水波纹前方颜色
            </summary>
        </member>
        <member name="P:HML.WaterRipples.ValueVisible">
            <summary>
            是否显示进度值
            </summary>
        </member>
        <member name="P:HML.WaterRipples.Value">
            <summary>
            进度值(0-100)
            </summary>
        </member>
        <member name="P:HML.WaterRipples.ValueColor">
            <summary>
            进度值颜色
            </summary>
        </member>
        <member name="F:HML.WaterRipples.wave_distance">
            <summary>
            水波纹移动距离
            </summary>
        </member>
        <member name="F:HML.WaterRipples.waveFrontPointList">
            <summary>
            前面水波纹坐标
            </summary>
        </member>
        <member name="F:HML.WaterRipples.waveBehindPointList">
            <summary>
            后面水波纹坐标
            </summary>
        </member>
        <member name="F:HML.WaterRipples.waveAccumulationTime">
            <summary>
            水波纹动画累加时间
            </summary>
        </member>
        <member name="M:HML.WaterRipples.Animationing(System.Int32)">
            <summary>
            动画控件动画中要处理的内容(不能时耗时操作)
            </summary>
            <param name="interval">动画定时器间隔时间</param>
        </member>
        <member name="M:HML.WaterRipples.InitializeRectangle">
            <summary>
            初始化水波纹Rectangle
            </summary>
        </member>
        <member name="M:HML.WaterRipples.SetControlShape">
            <summary>
            设置控件形状
            </summary>
        </member>
        <member name="T:HML.WaterRipplesStyles">
            <summary>
            水波纹风格
            </summary>
        </member>
        <member name="F:HML.WaterRipplesStyles.Quadrangle">
            <summary>
            四边形
            </summary>
        </member>
        <member name="F:HML.WaterRipplesStyles.Circle">
            <summary>
            圆形
            </summary>
        </member>
    </members>
</doc>
